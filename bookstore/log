I0610 03:42:47.064697       1 setup.go:15] Build Version: 
I0610 03:42:47.066839       1 main.go:143] Starting reconciler for: root
I0610 03:42:47.067028       1 restconfig.go:44] Created rest config from source podServiceAccount
I0610 03:42:47.923747       1 kpt_applier.go:84] Root applier is initialized and synced with the API server
I0610 03:42:47.924018       1 restconfig.go:44] Created rest config from source podServiceAccount
I0610 03:42:53.980816       1 run.go:149] New git changes (/repo/root/848017a1dfde6dd861bf9e386f5841eda3528718/bookstore) detected, reset the cache
I0610 03:42:53.980843       1 git.go:93] Reading updated git dir: /repo/root/848017a1dfde6dd861bf9e386f5841eda3528718/bookstore
I0610 03:42:54.011258       1 root.go:92] Parsing files from git dir: /repo/root/848017a1dfde6dd861bf9e386f5841eda3528718/bookstore
I0610 03:42:54.681750       1 kpt_applier.go:202] skipped InitType event
I0610 03:42:54.690200       1 kpt_applier.go:115] applied [op: ServersideApplied] resource Namespace, /bookstore
W0610 03:42:54.692921       1 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition
W0610 03:42:54.702089       1 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition
I0610 03:42:54.702577       1 kpt_applier.go:115] applied [op: ServersideApplied] resource CustomResourceDefinition.apiextensions.k8s.io, /anvils.acme.com
I0610 03:42:55.951009       1 request.go:655] Throttling request took 1.190552782s, request: GET:https://10.48.16.1:443/apis/coordination.k8s.io/v1?timeout=32s
I0610 03:42:55.973215       1 kpt_applier.go:115] applied [op: ServersideApplied] resource Deployment.apps, bookstore/nginx
I0610 03:42:55.982207       1 kpt_applier.go:115] applied [op: ServersideApplied] resource Anvil.acme.com, bookstore/heavy
I0610 03:42:55.999852       1 kpt_applier.go:215] all resources are up to date.
I0610 03:42:55.999884       1 kpt_applier.go:221] The applier made new progress: ApplyEvent events (OpType: ServersideApplied): 4.
I0610 03:42:56.000424       1 filteredwatcher.go:172] Watch started for apiextensions.k8s.io/v1beta1, Kind=CustomResourceDefinition
I0610 03:42:56.000625       1 filteredwatcher.go:172] Watch started for acme.com/v2, Kind=Anvil
I0610 03:42:56.000659       1 manager.go:158] The remediator made new progress: started 4 new watches, and stopped 0 watches
I0610 03:42:56.000686       1 filteredwatcher.go:172] Watch started for /v1, Kind=Namespace
I0610 03:42:56.000517       1 filteredwatcher.go:172] Watch started for apps/v1, Kind=Deployment
W0610 03:42:56.003020       1 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition
I0610 03:42:56.003198       1 filteredwatcher.go:191] (Re)starting watch for apiextensions.k8s.io/v1beta1, Kind=CustomResourceDefinition at resource version ""
I0610 03:42:56.005032       1 filteredwatcher.go:191] (Re)starting watch for /v1, Kind=Namespace at resource version ""
I0610 03:42:56.005318       1 filteredwatcher.go:191] (Re)starting watch for acme.com/v2, Kind=Anvil at resource version ""
I0610 03:42:56.007718       1 filteredwatcher.go:329] Received watch event for created/updated object "Anvil.acme.com, bookstore/heavy"
I0610 03:42:56.008163       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:v1 kind:Namespace metadata:map[creationTimestamp:2021-06-03T22:17:04Z managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:phase:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:04Z]] name:kube-system resourceVersion:8 selfLink:/api/v1/namespaces/kube-system uid:6a23a452-a266-4f7a-89ce-6dc1df9c74eb] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:42:56.008347       1 filteredwatcher.go:332] Received object: &{map[apiVersion:acme.com/v2 kind:Anvil metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/cr-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{},"f:labels":{}},"f:spec":{".":{},"f:lbs":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:acme.com_anvil_bookstore_heavy] creationTimestamp:2021-06-10T03:16:59Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v2] managedFields:[map[apiVersion:acme.com/v2 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:lbs:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:59Z]] name:heavy namespace:bookstore resourceVersion:3673891 selfLink:/apis/acme.com/v2/namespaces/bookstore/anvils/heavy uid:36f8e42f-caf9-4554-8941-7f7a7f871d73] spec:map[lbs:100]]}
I0610 03:42:56.008459       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:v1 kind:Namespace metadata:map[creationTimestamp:2021-06-03T22:17:04Z managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:phase:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:04Z]] name:kube-public resourceVersion:30 selfLink:/api/v1/namespaces/kube-public uid:5a14f55a-1a33-47d8-a606-a8144310ce36] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:42:56.008493       1 queue.go:112] Upserting object into queue: &{map[apiVersion:acme.com/v2 kind:Anvil metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/cr-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{},"f:labels":{}},"f:spec":{".":{},"f:lbs":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:acme.com_anvil_bookstore_heavy] creationTimestamp:2021-06-10T03:16:59Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v2] managedFields:[map[apiVersion:acme.com/v2 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:lbs:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:59Z]] name:heavy namespace:bookstore resourceVersion:3673891 selfLink:/apis/acme.com/v2/namespaces/bookstore/anvils/heavy uid:36f8e42f-caf9-4554-8941-7f7a7f871d73] spec:map[lbs:100]]}
I0610 03:42:56.008599       1 queue.go:162] Fetched object for processing: &{map[apiVersion:acme.com/v2 kind:Anvil metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/cr-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{},"f:labels":{}},"f:spec":{".":{},"f:lbs":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:acme.com_anvil_bookstore_heavy] creationTimestamp:2021-06-10T03:16:59Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v2] managedFields:[map[apiVersion:acme.com/v2 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:lbs:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:59Z]] name:heavy namespace:bookstore resourceVersion:3673891 selfLink:/apis/acme.com/v2/namespaces/bookstore/anvils/heavy uid:36f8e42f-caf9-4554-8941-7f7a7f871d73] spec:map[lbs:100]]}
I0610 03:42:56.008867       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:v1 kind:Namespace metadata:map[annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"labels":{"configmanagement.gke.io/system":"true"},"name":"config-management-system"}}
] creationTimestamp:2021-06-10T03:16:14Z labels:map[configmanagement.gke.io/system:true] managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:configmanagement.gke.io/system:map[]]] f:status:map[f:phase:map[]]] manager:kubectl operation:Update time:2021-06-10T03:16:14Z]] name:config-management-system resourceVersion:3673321 selfLink:/api/v1/namespaces/config-management-system uid:a83247d1-62cf-4473-9a40-ed23a8845b8b] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:42:56.008939       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:v1 kind:Namespace metadata:map[annotations:map[configmanagement.gke.io/managed:enabled configsync.gke.io/resource-id:_namespace_hello1 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{"configmanagement.gke.io/managed":"enabled","configsync.gke.io/resource-id":"_namespace_hello1"},"labels":{"configsync.gke.io/declared-version":"v1"},"name":"hello"}}
] creationTimestamp:2021-06-08T20:13:49Z labels:map[configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:configmanagement.gke.io/managed:map[] f:configsync.gke.io/resource-id:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:configsync.gke.io/declared-version:map[]]] f:status:map[f:phase:map[]]] manager:kubectl operation:Update time:2021-06-08T20:13:49Z]] name:hello resourceVersion:2916319 selfLink:/api/v1/namespaces/hello uid:29f9dcf9-34a9-4ff5-8184-d64db91aa445] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:42:56.009215       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:v1 kind:Namespace metadata:map[creationTimestamp:2021-06-03T22:17:04Z managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:phase:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:04Z]] name:kube-node-lease resourceVersion:39 selfLink:/api/v1/namespaces/kube-node-lease uid:97232519-7c01-4704-9505-be400de69638] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:42:56.009269       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:v1 kind:Namespace metadata:map[creationTimestamp:2021-06-03T22:17:06Z managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:phase:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:06Z]] name:default resourceVersion:153 selfLink:/api/v1/namespaces/default uid:eef1490c-4a52-4081-a2c8-986b048858ac] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:42:56.009485       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:v1 kind:Namespace metadata:map[annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"labels":{"configmanagement.gke.io/system":"true"},"name":"config-management-monitoring"}}
] creationTimestamp:2021-06-10T03:16:14Z labels:map[configmanagement.gke.io/system:true] managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:configmanagement.gke.io/system:map[]]] f:status:map[f:phase:map[]]] manager:kubectl operation:Update time:2021-06-10T03:16:14Z]] name:config-management-monitoring resourceVersion:3673330 selfLink:/api/v1/namespaces/config-management-monitoring uid:f80531d8-ff56-4a61-9a83-cdb4ae6c368e] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:42:56.009463       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[controller-gen.kubebuilder.io/version:(devel) kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"(devel)"},"creationTimestamp":null,"name":"configmanagements.configmanagement.gke.io"},"spec":{"group":"configmanagement.gke.io","names":{"kind":"ConfigManagement","listKind":"ConfigManagementList","plural":"configmanagements","singular":"configmanagement"},"scope":"Cluster","versions":[{"name":"v1","schema":{"openAPIV3Schema":{"description":"ConfigManagement is the Schema for the ConfigManagement API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"ConfigManagementSpec defines the desired state of ConfigManagement.","properties":{"binauthz":{"description":"BinAuthz enables Binary Authorization as recognized by the \"binauthz.configmanagement.gke.io\" label set to \"true\".","properties":{"enabled":{"description":"Enable or disable BinAuthz.  Default: false.","type":"boolean"},"policyRef":{"description":"PolicyRef is a reference to the BinAuthz policy which will be evaluated. Required if BinAuthz is enabled.","properties":{"gkeCluster":{"description":"BinAuthz policy associated with this GKE-on-GCP cluster.","properties":{"location":{"description":"Location of this cluster","type":"string"},"name":{"description":"The name of this cluster according to GKE. This is not necessarily the same as the hub membership name.","type":"string"},"project":{"description":"The name of the GCP project containing this cluster","type":"string"}},"type":"object"}},"type":"object"}},"type":"object"},"channel":{"description":"Channel specifies a channel that can be used to resolve a specific addon, eg: stable It will be ignored if Version is specified","type":"string"},"clusterName":{"description":"ClusterName, if defined, sets the name for this cluster.  If unset, the cluster is considered to be unnamed, and cannot use ClusterSelectors.","type":"string"},"configConnector":{"description":"Deprecated: Does nothing.  ConfigConnector can no longer be enabled/disabled with the ConfigManagement resource; the software is available as a standalone: https://cloud.google.com/config-connector","properties":{"enabled":{"description":"Enable or disable the Config Connector.  Default: false.","type":"boolean"}},"type":"object"},"enableLegacyFields":{"description":"EnableLegacyFields instructs the operator to use spec.git for generating a RootSync resource in MultiRepo mode. Note that this should only be set to true if spec.enableMultiRepo is set to true.","type":"boolean"},"enableMultiRepo":{"description":"EnableMultiRepo instructs the operator to enable Multi Repo mode for Config Sync.","type":"boolean"},"git":{"description":"Git contains configuration specific to importing policies from a Git repo.","properties":{"gcpServiceAccountEmail":{"description":"GCPServiceAccountEmail specifies the GCP service account used to annotate the Config Sync Kubernetes Service Account. Note: The field is used when secretType: gcpServiceAccount.","type":"string"},"policyDir":{"description":"PolicyDir is the absolute path of the directory that contains the local policy.  Default: the root directory of the repo.","type":"string"},"proxy":{"description":"Proxy is a struct that contains options for configuring access to the Git repo via a proxy. Only has an effect when secretType is one of (\"cookiefile\", \"none\").  Optional.","properties":{"httpProxy":{"description":"HTTPProxy defines a HTTP_PROXY env variable used to access the Git repo.  If both HTTPProxy and HTTPSProxy are specified, HTTPProxy will be ignored. Optional.","type":"string"},"httpsProxy":{"description":"HTTPSProxy defines a HTTPS_PROXY env variable used to access the Git repo.  If both HTTPProxy and HTTPSProxy are specified, HTTPProxy will be ignored. Optional.","type":"string"}},"type":"object"},"secretType":{"description":"SecretType is the type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. Required. The validation of this is case-sensitive.","pattern":"^(ssh|cookiefile|gcenode|gcpserviceaccount|token|none)$","type":"string"},"syncBranch":{"description":"SyncBranch is the branch to sync from.  Default: \"master\".","type":"string"},"syncRepo":{"pattern":"^(((https?|git|ssh):\\/\\/)|git@)","type":"string"},"syncRev":{"description":"SyncRev is the git revision (tag or hash) to check out. Default: HEAD.","type":"string"},"syncWait":{"description":"SyncWaitSeconds is the time duration in seconds between consecutive syncs.  Default: 15 seconds. Note that SyncWaitSecs is not a time.Duration on purpose. This provides a reminder to developers that customers specify this value using using integers like \"3\" in their ConfigManagement YAML. However, time.Duration is at a nanosecond granularity, and it's easy to introduce a bug where it looks like the code is dealing with seconds but its actually nanoseconds (or vice versa).","type":"integer"}},"type":"object"},"hierarchyController":{"description":"Hierarchy Controller enables HierarchyController components as recognized by the \"hierarchycontroller.configmanagement.gke.io\" label set to \"true\".","properties":{"enableHierarchicalResourceQuota":{"description":"HierarchicalResourceQuota enforces resource quota in a hierarchical fashion: a resource quota set for one namespace provides constraints that limit aggregate resource consumption for that namespace and all its descendants. Disabling this will not delete user created hrq CRs, but will delete all the intermediate resources created by HRQ (specifically the resource quota singletons), which are labeled with hierarchycontroller.configmanagement.gke.io/hrq for easier cleanup.","type":"boolean"},"enablePodTreeLabels":{"description":"PodTreeLabels copies the tree labels from namespaces to pods, allowing any system that uses pod logs (such as Stackdriver logging) to inspect the hierarchy.","type":"boolean"},"enabled":{"description":"Enable or disable the Hierarchy Controller.  Default: false.","type":"boolean"}},"type":"object"},"policyController":{"description":"Policy Controller enables PolicyController components as recognized by the \"gatekeeper.sh/manifest\" label set to \"true\".","properties":{"auditIntervalSeconds":{"description":"AuditIntervalSeconds. The number of seconds between audit runs. Defaults to 60 seconds. To disable audit, set this to 0.","format":"int64","type":"integer"},"enabled":{"description":"Enable or disable the Policy Controller.  Default: false.","type":"boolean"},"exemptableNamespaces":{"description":"ExemptableNamespaces. The namespaces in this list are able to have the admission.gatekeeper.sh/ignore label set. When the label is set, Policy Controller will not be called for that namespace or any resources contained in it. `gatekeeper-system` is always exempted.","items":{"type":"string"},"type":"array"},"logDeniesEnabled":{"description":"LogDeniesEnabled.  If true, Policy Controller will log all denies and dryrun failures.  No effect unless policyController is enabled.  Default: false.","type":"boolean"},"mutation":{"description":"Mutation specifies the configuration of mutation. This is a preview feature and may change before becoming generally available.","properties":{"enabled":{"description":"Enable or disable mutation in policy controller. If true, mutation CRDs, webhook and controller will be deployed to the cluster. Default: false.","type":"boolean"}},"type":"object"},"referentialRulesEnabled":{"description":"ReferentialRulesEnabled.  If true, Policy Controller will allow `data.inventory` references in the contents of ConstraintTemplate Rego.  No effect unless policyController is enabled.  Default: false.","type":"boolean"},"templateLibraryInstalled":{"description":"TemplateLibraryInstalled.  If true, a set of default ConstraintTemplates will be deployed to the cluster. ConstraintTemplates will not be deployed if this is explicitly set to false or if policyController is not enabled. Default: true.","type":"boolean"}},"type":"object"},"sourceFormat":{"description":"SourceFormat specifies how the repository is formatted. See documentation for specifics of what these options do. \n Must be one of hierarchy, unstructured. Optional. Set to hierarchy if not specified. \n The validation of this is case-sensitive.","pattern":"^(hierarchy|unstructured|)$","type":"string"},"version":{"description":"Version specifies the exact addon version to be deployed, eg 1.2.3 It should not be specified if Channel is specified","type":"string"}},"type":"object","x-kubernetes-preserve-unknown-fields":true},"status":{"description":"ConfigManagementStatus defines the observed state of ConfigManagement.","properties":{"configManagementVersion":{"description":"ConfigManagementVersion is the semantic version number of the config management system enforced by the currently running config management operator.","type":"string"},"errors":{"items":{"type":"string"},"type":"array"},"healthy":{"type":"boolean"},"phase":{"type":"string"}},"required":["healthy"],"type":"object"}},"required":["metadata","spec"],"type":"object"}},"served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
] creationTimestamp:2021-06-10T03:16:13Z generation:1 managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-10T03:16:13Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:controller-gen.kubebuilder.io/version:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:kubectl operation:Update time:2021-06-10T03:16:13Z]] name:configmanagements.configmanagement.gke.io resourceVersion:3673312 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/configmanagements.configmanagement.gke.io uid:563e3a25-257f-4fd6-8f69-9f3d6bf2921e] spec:map[conversion:map[strategy:None] group:configmanagement.gke.io names:map[kind:ConfigManagement listKind:ConfigManagementList plural:configmanagements singular:configmanagement] preserveUnknownFields:false scope:Cluster validation:map[openAPIV3Schema:map[description:ConfigManagement is the Schema for the ConfigManagement API. properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds type:string] metadata:map[type:object] spec:map[description:ConfigManagementSpec defines the desired state of ConfigManagement. properties:map[binauthz:map[description:BinAuthz enables Binary Authorization as recognized by the "binauthz.configmanagement.gke.io" label set to "true". properties:map[enabled:map[description:Enable or disable BinAuthz.  Default: false. type:boolean] policyRef:map[description:PolicyRef is a reference to the BinAuthz policy which will be evaluated. Required if BinAuthz is enabled. properties:map[gkeCluster:map[description:BinAuthz policy associated with this GKE-on-GCP cluster. properties:map[location:map[description:Location of this cluster type:string] name:map[description:The name of this cluster according to GKE. This is not necessarily the same as the hub membership name. type:string] project:map[description:The name of the GCP project containing this cluster type:string]] type:object]] type:object]] type:object] channel:map[description:Channel specifies a channel that can be used to resolve a specific addon, eg: stable It will be ignored if Version is specified type:string] clusterName:map[description:ClusterName, if defined, sets the name for this cluster.  If unset, the cluster is considered to be unnamed, and cannot use ClusterSelectors. type:string] configConnector:map[description:Deprecated: Does nothing.  ConfigConnector can no longer be enabled/disabled with the ConfigManagement resource; the software is available as a standalone: https://cloud.google.com/config-connector properties:map[enabled:map[description:Enable or disable the Config Connector.  Default: false. type:boolean]] type:object] enableLegacyFields:map[description:EnableLegacyFields instructs the operator to use spec.git for generating a RootSync resource in MultiRepo mode. Note that this should only be set to true if spec.enableMultiRepo is set to true. type:boolean] enableMultiRepo:map[description:EnableMultiRepo instructs the operator to enable Multi Repo mode for Config Sync. type:boolean] git:map[description:Git contains configuration specific to importing policies from a Git repo. properties:map[gcpServiceAccountEmail:map[description:GCPServiceAccountEmail specifies the GCP service account used to annotate the Config Sync Kubernetes Service Account. Note: The field is used when secretType: gcpServiceAccount. type:string] policyDir:map[description:PolicyDir is the absolute path of the directory that contains the local policy.  Default: the root directory of the repo. type:string] proxy:map[description:Proxy is a struct that contains options for configuring access to the Git repo via a proxy. Only has an effect when secretType is one of ("cookiefile", "none").  Optional. properties:map[httpProxy:map[description:HTTPProxy defines a HTTP_PROXY env variable used to access the Git repo.  If both HTTPProxy and HTTPSProxy are specified, HTTPProxy will be ignored. Optional. type:string] httpsProxy:map[description:HTTPSProxy defines a HTTPS_PROXY env variable used to access the Git repo.  If both HTTPProxy and HTTPSProxy are specified, HTTPProxy will be ignored. Optional. type:string]] type:object] secretType:map[description:SecretType is the type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. Required. The validation of this is case-sensitive. pattern:^(ssh|cookiefile|gcenode|gcpserviceaccount|token|none)$ type:string] syncBranch:map[description:SyncBranch is the branch to sync from.  Default: "master". type:string] syncRepo:map[pattern:^(((https?|git|ssh):\/\/)|git@) type:string] syncRev:map[description:SyncRev is the git revision (tag or hash) to check out. Default: HEAD. type:string] syncWait:map[description:SyncWaitSeconds is the time duration in seconds between consecutive syncs.  Default: 15 seconds. Note that SyncWaitSecs is not a time.Duration on purpose. This provides a reminder to developers that customers specify this value using using integers like "3" in their ConfigManagement YAML. However, time.Duration is at a nanosecond granularity, and it's easy to introduce a bug where it looks like the code is dealing with seconds but its actually nanoseconds (or vice versa). type:integer]] type:object] hierarchyController:map[description:Hierarchy Controller enables HierarchyController components as recognized by the "hierarchycontroller.configmanagement.gke.io" label set to "true". properties:map[enableHierarchicalResourceQuota:map[description:HierarchicalResourceQuota enforces resource quota in a hierarchical fashion: a resource quota set for one namespace provides constraints that limit aggregate resource consumption for that namespace and all its descendants. Disabling this will not delete user created hrq CRs, but will delete all the intermediate resources created by HRQ (specifically the resource quota singletons), which are labeled with hierarchycontroller.configmanagement.gke.io/hrq for easier cleanup. type:boolean] enablePodTreeLabels:map[description:PodTreeLabels copies the tree labels from namespaces to pods, allowing any system that uses pod logs (such as Stackdriver logging) to inspect the hierarchy. type:boolean] enabled:map[description:Enable or disable the Hierarchy Controller.  Default: false. type:boolean]] type:object] policyController:map[description:Policy Controller enables PolicyController components as recognized by the "gatekeeper.sh/manifest" label set to "true". properties:map[auditIntervalSeconds:map[description:AuditIntervalSeconds. The number of seconds between audit runs. Defaults to 60 seconds. To disable audit, set this to 0. format:int64 type:integer] enabled:map[description:Enable or disable the Policy Controller.  Default: false. type:boolean] exemptableNamespaces:map[description:ExemptableNamespaces. The namespaces in this list are able to have the admission.gatekeeper.sh/ignore label set. When the label is set, Policy Controller will not be called for that namespace or any resources contained in it. `gatekeeper-system` is always exempted. items:map[type:string] type:array] logDeniesEnabled:map[description:LogDeniesEnabled.  If true, Policy Controller will log all denies and dryrun failures.  No effect unless policyController is enabled.  Default: false. type:boolean] mutation:map[description:Mutation specifies the configuration of mutation. This is a preview feature and may change before becoming generally available. properties:map[enabled:map[description:Enable or disable mutation in policy controller. If true, mutation CRDs, webhook and controller will be deployed to the cluster. Default: false. type:boolean]] type:object] referentialRulesEnabled:map[description:ReferentialRulesEnabled.  If true, Policy Controller will allow `data.inventory` references in the contents of ConstraintTemplate Rego.  No effect unless policyController is enabled.  Default: false. type:boolean] templateLibraryInstalled:map[description:TemplateLibraryInstalled.  If true, a set of default ConstraintTemplates will be deployed to the cluster. ConstraintTemplates will not be deployed if this is explicitly set to false or if policyController is not enabled. Default: true. type:boolean]] type:object] sourceFormat:map[description:SourceFormat specifies how the repository is formatted. See documentation for specifics of what these options do. 
 Must be one of hierarchy, unstructured. Optional. Set to hierarchy if not specified. 
 The validation of this is case-sensitive. pattern:^(hierarchy|unstructured|)$ type:string] version:map[description:Version specifies the exact addon version to be deployed, eg 1.2.3 It should not be specified if Channel is specified type:string]] type:object x-kubernetes-preserve-unknown-fields:true] status:map[description:ConfigManagementStatus defines the observed state of ConfigManagement. properties:map[configManagementVersion:map[description:ConfigManagementVersion is the semantic version number of the config management system enforced by the currently running config management operator. type:string] errors:map[items:map[type:string] type:array] healthy:map[type:boolean] phase:map[type:string]] required:[healthy] type:object]] required:[metadata spec] type:object]] version:v1 versions:[map[name:v1 served:true storage:true]]] status:map[acceptedNames:map[kind:ConfigManagement listKind:ConfigManagementList plural:configmanagements singular:configmanagement] conditions:[map[lastTransitionTime:2021-06-10T03:16:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-10T03:16:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1]]]}
I0610 03:42:56.010112       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[creationTimestamp:2021-06-08T23:00:08Z generation:1 managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:preserveUnknownFields:map[] f:scope:map[] f:version:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:Google-GKEHub-Controllers-Metering operation:Update time:2021-06-08T23:00:08Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-08T23:00:08Z]] name:entitlements.anthos.gke.io resourceVersion:2985786 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/entitlements.anthos.gke.io uid:dc8af11b-5541-473b-9192-42e1f0a7b33b] spec:map[conversion:map[strategy:None] group:anthos.gke.io names:map[kind:Entitlement listKind:EntitlementList plural:entitlements singular:entitlement] preserveUnknownFields:true scope:Cluster version:v1alpha1 versions:[map[name:v1alpha1 served:true storage:true]]] status:map[acceptedNames:map[kind:Entitlement listKind:EntitlementList plural:entitlements singular:entitlement] conditions:[map[lastTransitionTime:2021-06-08T23:00:08Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-08T23:00:08Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1alpha1]]]}
I0610 03:42:56.010161       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:v1 kind:Namespace metadata:map[annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"labels":{"configmanagement.gke.io/arch":"csmr","configmanagement.gke.io/configmanagement":"config-management","control-plane":"controller-manager","k8s-app":"kubernetes-config-management"},"name":"resource-group-system","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}]}}
] creationTimestamp:2021-06-10T03:16:27Z labels:map[configmanagement.gke.io/arch:csmr configmanagement.gke.io/configmanagement:config-management control-plane:controller-manager k8s-app:kubernetes-config-management] managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:configmanagement.gke.io/arch:map[] f:configmanagement.gke.io/configmanagement:map[] f:control-plane:map[] f:k8s-app:map[]] f:ownerReferences:map[.:map[] k:{"uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:status:map[f:phase:map[]]] manager:Go-http-client operation:Update time:2021-06-10T03:16:27Z]] name:resource-group-system ownerReferences:[map[apiVersion:configmanagement.gke.io/v1 blockOwnerDeletion:true controller:true kind:ConfigManagement name:config-management uid:4c9472ce-7740-48ac-927f-2cdf13a6b1ef]] resourceVersion:3673456 selfLink:/api/v1/namespaces/resource-group-system uid:0757b407-d0d9-47c6-9fee-75c422cb0bf1] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:42:56.010264       1 filteredwatcher.go:329] Received watch event for created/updated object "Namespace, /bookstore"
I0610 03:42:56.010276       1 filteredwatcher.go:332] Received object: &{map[apiVersion:v1 kind:Namespace metadata:map[annotations:map[client.lifecycle.config.k8s.io/deletion:detach config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:_namespace_bookstore] creationTimestamp:2021-06-10T03:16:57Z labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io] managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/deletion:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z]] name:bookstore resourceVersion:3673862 selfLink:/api/v1/namespaces/bookstore uid:de6949f9-f42b-49be-b46f-4d76b587872d] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:42:56.010354       1 queue.go:112] Upserting object into queue: &{map[apiVersion:v1 kind:Namespace metadata:map[annotations:map[client.lifecycle.config.k8s.io/deletion:detach config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:_namespace_bookstore] creationTimestamp:2021-06-10T03:16:57Z labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io] managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/deletion:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z]] name:bookstore resourceVersion:3673862 selfLink:/api/v1/namespaces/bookstore uid:de6949f9-f42b-49be-b46f-4d76b587872d] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:42:56.011489       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[creationTimestamp:2021-06-03T22:17:37Z generation:1 managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:shortNames:map[] f:singular:map[]] f:preserveUnknownFields:map[] f:scope:map[] f:validation:map[.:map[] f:openAPIV3Schema:map[.:map[] f:properties:map[.:map[] f:apiVersion:map[.:map[] f:description:map[] f:type:map[]] f:kind:map[.:map[] f:description:map[] f:type:map[]] f:metadata:map[.:map[] f:type:map[]] f:spec:map[.:map[] f:description:map[] f:properties:map[.:map[] f:cdn:map[.:map[] f:description:map[] f:properties:map[.:map[] f:cachePolicy:map[.:map[] f:description:map[] f:properties:map[.:map[] f:includeHost:map[.:map[] f:description:map[] f:type:map[]] f:includeProtocol:map[.:map[] f:description:map[] f:type:map[]] f:includeQueryString:map[.:map[] f:description:map[] f:type:map[]] f:queryStringBlacklist:map[.:map[] f:description:map[] f:items:map[] f:type:map[]] f:queryStringWhitelist:map[.:map[] f:description:map[] f:items:map[] f:type:map[]]] f:type:map[]] f:enabled:map[.:map[] f:type:map[]]] f:required:map[] f:type:map[]] f:connectionDraining:map[.:map[] f:description:map[] f:properties:map[.:map[] f:drainingTimeoutSec:map[.:map[] f:description:map[] f:format:map[] f:type:map[]]] f:type:map[]] f:customRequestHeaders:map[.:map[] f:description:map[] f:properties:map[.:map[] f:headers:map[.:map[] f:items:map[] f:type:map[]]] f:type:map[]] f:healthCheck:map[.:map[] f:description:map[] f:properties:map[.:map[] f:checkIntervalSec:map[.:map[] f:description:map[] f:format:map[] f:type:map[]] f:healthyThreshold:map[.:map[] f:description:map[] f:format:map[] f:type:map[]] f:port:map[.:map[] f:description:map[] f:format:map[] f:type:map[]] f:requestPath:map[.:map[] f:description:map[] f:type:map[]] f:timeoutSec:map[.:map[] f:description:map[] f:format:map[] f:type:map[]] f:type:map[.:map[] f:description:map[] f:type:map[]] f:unhealthyThreshold:map[.:map[] f:description:map[] f:format:map[] f:type:map[]]] f:type:map[]] f:iap:map[.:map[] f:description:map[] f:properties:map[.:map[] f:enabled:map[.:map[] f:type:map[]] f:oauthclientCredentials:map[.:map[] f:description:map[] f:properties:map[.:map[] f:clientID:map[.:map[] f:description:map[] f:type:map[]] f:clientSecret:map[.:map[] f:description:map[] f:type:map[]] f:secretName:map[.:map[] f:description:map[] f:type:map[]]] f:required:map[] f:type:map[]]] f:required:map[] f:type:map[]] f:logging:map[.:map[] f:description:map[] f:properties:map[.:map[] f:enable:map[.:map[] f:description:map[] f:type:map[]] f:sampleRate:map[.:map[] f:description:map[] f:format:map[] f:type:map[]]] f:type:map[]] f:securityPolicy:map[.:map[] f:description:map[] f:properties:map[.:map[] f:name:map[.:map[] f:description:map[] f:type:map[]]] f:required:map[] f:type:map[]] f:sessionAffinity:map[.:map[] f:description:map[] f:properties:map[.:map[] f:affinityCookieTtlSec:map[.:map[] f:format:map[] f:type:map[]] f:affinityType:map[.:map[] f:type:map[]]] f:type:map[]] f:timeoutSec:map[.:map[] f:format:map[] f:type:map[]]] f:type:map[]] f:status:map[.:map[] f:type:map[]]] f:type:map[]]] f:version:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:glbc operation:Update time:2021-06-03T22:17:37Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:shortNames:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:37Z]] name:backendconfigs.cloud.google.com resourceVersion:734 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/backendconfigs.cloud.google.com uid:7b0f7e37-2897-41eb-b49f-fe2bd5255599] spec:map[conversion:map[strategy:None] group:cloud.google.com names:map[kind:BackendConfig listKind:BackendConfigList plural:backendconfigs shortNames:[bc] singular:backendconfig] preserveUnknownFields:false scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds type:string] metadata:map[type:object] spec:map[description:BackendConfigSpec is the spec for a BackendConfig resource properties:map[cdn:map[description:CDNConfig contains configuration for CDN-enabled backends. properties:map[cachePolicy:map[description:CacheKeyPolicy contains configuration for how requests to a CDN-enabled backend are cached. properties:map[includeHost:map[description:If true, requests to different hosts will be cached separately. type:boolean] includeProtocol:map[description:If true, http and https requests will be cached separately. type:boolean] includeQueryString:map[description:If true, query string parameters are included in the cache key according to QueryStringBlacklist and QueryStringWhitelist. If neither is set, the entire query string is included and if false the entire query string is excluded. type:boolean] queryStringBlacklist:map[description:Names of query strint parameters to exclude from cache keys. All other parameters are included. Either specify QueryStringBlacklist or QueryStringWhitelist, but not both. items:map[type:string] type:array] queryStringWhitelist:map[description:Names of query string parameters to include in cache keys. All other parameters are excluded. Either specify QueryStringBlacklist or QueryStringWhitelist, but not both. items:map[type:string] type:array]] type:object] enabled:map[type:boolean]] required:[enabled] type:object] connectionDraining:map[description:ConnectionDrainingConfig contains configuration for connection draining. For now the draining timeout. May manage more settings in the future. properties:map[drainingTimeoutSec:map[description:Draining timeout in seconds. format:int64 type:integer]] type:object] customRequestHeaders:map[description:CustomRequestHeadersConfig contains configuration for custom request headers properties:map[headers:map[items:map[type:string] type:array]] type:object] healthCheck:map[description:HealthCheckConfig contains configuration for the health check. properties:map[checkIntervalSec:map[description:CheckIntervalSec is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks. format:int64 type:integer] healthyThreshold:map[description:HealthyThreshold is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks. format:int64 type:integer] port:map[description:Port is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks. If Port is used, the controller updates portSpecification as well format:int64 type:integer] requestPath:map[description:RequestPath is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks. type:string] timeoutSec:map[description:TimeoutSec is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks. format:int64 type:integer] type:map[description:Type is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks. type:string] unhealthyThreshold:map[description:UnhealthyThreshold is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks. format:int64 type:integer]] type:object] iap:map[description:IAPConfig contains configuration for IAP-enabled backends. properties:map[enabled:map[type:boolean] oauthclientCredentials:map[description:OAuthClientCredentials contains credentials for a single IAP-enabled backend. properties:map[clientID:map[description:Direct reference to OAuth client id. type:string] clientSecret:map[description:Direct reference to OAuth client secret. type:string] secretName:map[description:The name of a k8s secret which stores the OAuth client id & secret. type:string]] required:[secretName] type:object]] required:[enabled oauthclientCredentials] type:object] logging:map[description:LogConfig contains configuration for logging. properties:map[enable:map[description:This field denotes whether to enable logging for the load balancer traffic served by this backend service. type:boolean] sampleRate:map[description:This field can only be specified if logging is enabled for this backend service. The value of the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported. The default value is 1.0. format:double type:number]] type:object] securityPolicy:map[description:SecurityPolicyConfig contains configuration for CloudArmor-enabled backends. properties:map[name:map[description:Name of the security policy that should be associated. type:string]] required:[name] type:object] sessionAffinity:map[description:SessionAffinityConfig contains configuration for stickyness parameters. properties:map[affinityCookieTtlSec:map[format:int64 type:integer] affinityType:map[type:string]] type:object] timeoutSec:map[format:int64 type:integer]] type:object] status:map[type:object]] type:object]] version:v1 versions:[map[name:v1 served:true storage:true] map[name:v1beta1 served:true storage:false]]] status:map[acceptedNames:map[kind:BackendConfig listKind:BackendConfigList plural:backendconfigs shortNames:[bc] singular:backendconfig] conditions:[map[lastTransitionTime:2021-06-03T22:17:37Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-03T22:17:37Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1]]]}
I0610 03:42:56.012213       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[creationTimestamp:2021-06-09T23:24:59Z generation:1 labels:map[hub.gke.io/system:true] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:labels:map[.:map[] f:hub.gke.io/system:map[]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:preserveUnknownFields:map[] f:scope:map[] f:validation:map[.:map[] f:openAPIV3Schema:map[.:map[] f:properties:map[.:map[] f:metadata:map[.:map[] f:properties:map[.:map[] f:name:map[.:map[] f:pattern:map[] f:type:map[]]] f:type:map[]] f:spec:map[.:map[] f:properties:map[.:map[] f:identity_provider:map[.:map[] f:description:map[]] f:owner:map[.:map[] f:properties:map[.:map[] f:id:map[.:map[] f:description:map[] f:type:map[]]] f:type:map[]] f:workload_identity_pool:map[.:map[] f:description:map[] f:type:map[]]] f:type:map[]]] f:required:map[]]] f:version:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:Google-GKEHub-Service operation:Update time:2021-06-09T23:24:59Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T23:24:59Z]] name:memberships.hub.gke.io resourceVersion:3582155 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/memberships.hub.gke.io uid:d4152d48-7d0b-4623-9f48-53aa196408ac] spec:map[conversion:map[strategy:None] group:hub.gke.io names:map[kind:Membership listKind:MembershipList plural:memberships singular:membership] preserveUnknownFields:true scope:Cluster validation:map[openAPIV3Schema:map[properties:map[metadata:map[properties:map[name:map[pattern:^(membership|test-.*)$ type:string]] type:object] spec:map[properties:map[identity_provider:map[description:Name of the Identity Provider corresponding to this Membership. This is useful for workloads running in this cluster to use Workload Identity.] owner:map[properties:map[id:map[description:Fully qualified name of the GCP resource that owns the cluster. Should be immutable. type:string]] type:object] workload_identity_pool:map[description:Name of the Workload Identity Pool that this Membership is part of. This will be of the form proj-id.svc.id.goog. This is useful for workloads running in this cluster to use Workload Identity. type:string]] type:object]] required:[spec]]] version:v1 versions:[map[name:v1 served:true storage:true] map[name:v1beta1 served:false storage:false]]] status:map[acceptedNames:map[kind:Membership listKind:MembershipList plural:memberships singular:membership] conditions:[map[lastTransitionTime:2021-06-09T23:24:59Z message:[spec.versions[0].schema.openAPIV3Schema.properties[spec].properties[identity_provider].type: Required value: must not be empty for specified object fields, spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.properties[spec].properties[identity_provider].type: Required value: must not be empty for specified object fields, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema] map[lastTransitionTime:2021-06-09T23:24:59Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T23:24:59Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1]]]}
I0610 03:42:56.013047       1 filteredwatcher.go:191] (Re)starting watch for apps/v1, Kind=Deployment at resource version ""
I0610 03:42:56.014422       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[api-approved.kubernetes.io:https://github.com/kubernetes-csi/external-snapshotter/pull/139 components.gke.io/component-name:snapshot-controller components.gke.io/component-version:0.4.3 components.gke.io/layer:addon controller-gen.kubebuilder.io/version:(devel) kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"api-approved.kubernetes.io":"https://github.com/kubernetes-csi/external-snapshotter/pull/139","components.gke.io/component-name":"snapshot-controller","components.gke.io/component-version":"0.4.3","components.gke.io/layer":"addon","controller-gen.kubebuilder.io/version":"(devel)"},"creationTimestamp":null,"labels":{"addonmanager.kubernetes.io/mode":"Reconcile"},"name":"volumesnapshots.snapshot.storage.k8s.io"},"spec":{"group":"snapshot.storage.k8s.io","names":{"kind":"VolumeSnapshot","listKind":"VolumeSnapshotList","plural":"volumesnapshots","singular":"volumesnapshot"},"preserveUnknownFields":false,"scope":"Namespaced","subresources":{"status":{}},"validation":{"openAPIV3Schema":{"description":"VolumeSnapshot is a user's request for either creating a point-in-time snapshot of a persistent volume, or binding to a pre-existing snapshot.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds","type":"string"},"spec":{"description":"spec defines the desired characteristics of a snapshot requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots Required.","properties":{"source":{"description":"source specifies where a snapshot will be created from. This field is immutable after creation. Required.","properties":{"persistentVolumeClaimName":{"description":"persistentVolumeClaimName specifies the name of the PersistentVolumeClaim object in the same namespace as the VolumeSnapshot object where the snapshot should be dynamically taken from. This field is immutable.","type":"string"},"volumeSnapshotContentName":{"description":"volumeSnapshotContentName specifies the name of a pre-existing VolumeSnapshotContent object. This field is immutable.","type":"string"}},"type":"object"},"volumeSnapshotClassName":{"description":"volumeSnapshotClassName is the name of the VolumeSnapshotClass requested by the VolumeSnapshot. If not specified, the default snapshot class will be used if one exists. If not specified, and there is no default snapshot class, dynamic snapshot creation will fail. Empty string is not allowed for this field. TODO(xiangqian): a webhook validation on empty string. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshot-classes","type":"string"}},"required":["source"],"type":"object"},"status":{"description":"status represents the current information of a snapshot. NOTE: status can be modified by sources other than system controllers, and must not be depended upon for accuracy. Controllers should only use information from the VolumeSnapshotContent object after verifying that the binding is accurate and complete.","properties":{"boundVolumeSnapshotContentName":{"description":"boundVolumeSnapshotContentName represents the name of the VolumeSnapshotContent object to which the VolumeSnapshot object is bound. If not specified, it indicates that the VolumeSnapshot object has not been successfully bound to a VolumeSnapshotContent object yet. NOTE: Specified boundVolumeSnapshotContentName alone does not mean binding       is valid. Controllers MUST always verify bidirectional binding between       VolumeSnapshot and VolumeSnapshotContent to avoid possible security issues.","type":"string"},"creationTime":{"description":"creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in with the \"creation_time\" value returned from CSI \"CreateSnapshotRequest\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it indicates that the creation time of the snapshot is unknown.","format":"date-time","type":"string"},"error":{"description":"error is the last observed error during snapshot creation, if any. This field could be helpful to upper level controllers(i.e., application controller) to decide whether they should continue on waiting for the snapshot to be created based on the type of error reported.","properties":{"message":{"description":"message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.","type":"string"},"time":{"description":"time is the timestamp when the error was encountered.","format":"date-time","type":"string"}},"type":"object"},"readyToUse":{"description":"readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in with the \"ready_to_use\" value returned from CSI \"CreateSnapshotRequest\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.","type":"boolean"},"restoreSize":{"description":"restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in with the \"size_bytes\" value returned from CSI \"CreateSnapshotRequest\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.","type":"string"}},"type":"object"}},"required":["spec"],"type":"object"}},"version":"v1beta1","versions":[{"name":"v1beta1","served":true,"storage":true}]}}
] creationTimestamp:2021-06-03T22:17:30Z generation:1 labels:map[addonmanager.kubernetes.io/mode:Reconcile] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:30Z] map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:api-approved.kubernetes.io:map[] f:components.gke.io/component-name:map[] f:components.gke.io/component-version:map[] f:components.gke.io/layer:map[] f:controller-gen.kubebuilder.io/version:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:preserveUnknownFields:map[] f:scope:map[] f:subresources:map[.:map[] f:status:map[]] f:validation:map[.:map[] f:openAPIV3Schema:map[.:map[] f:description:map[] f:properties:map[.:map[] f:apiVersion:map[.:map[] f:description:map[] f:type:map[]] f:kind:map[.:map[] f:description:map[] f:type:map[]] f:spec:map[.:map[] f:description:map[] f:properties:map[.:map[] f:source:map[.:map[] f:description:map[] f:properties:map[.:map[] f:persistentVolumeClaimName:map[.:map[] f:description:map[] f:type:map[]] f:volumeSnapshotContentName:map[.:map[] f:description:map[] f:type:map[]]] f:type:map[]] f:volumeSnapshotClassName:map[.:map[] f:description:map[] f:type:map[]]] f:required:map[] f:type:map[]] f:status:map[.:map[] f:description:map[] f:properties:map[.:map[] f:boundVolumeSnapshotContentName:map[.:map[] f:description:map[] f:type:map[]] f:creationTime:map[.:map[] f:description:map[] f:format:map[] f:type:map[]] f:error:map[.:map[] f:description:map[] f:properties:map[.:map[] f:message:map[.:map[] f:description:map[] f:type:map[]] f:time:map[.:map[] f:description:map[] f:format:map[] f:type:map[]]] f:type:map[]] f:readyToUse:map[.:map[] f:description:map[] f:type:map[]] f:restoreSize:map[.:map[] f:description:map[] f:type:map[]]] f:type:map[]]] f:required:map[] f:type:map[]]] f:version:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:kubectl operation:Update time:2021-06-03T22:17:30Z]] name:volumesnapshots.snapshot.storage.k8s.io resourceVersion:539 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/volumesnapshots.snapshot.storage.k8s.io uid:cb98edeb-c422-4929-8565-d38233e38b08] spec:map[conversion:map[strategy:None] group:snapshot.storage.k8s.io names:map[kind:VolumeSnapshot listKind:VolumeSnapshotList plural:volumesnapshots singular:volumesnapshot] preserveUnknownFields:false scope:Namespaced subresources:map[status:map[]] validation:map[openAPIV3Schema:map[description:VolumeSnapshot is a user's request for either creating a point-in-time snapshot of a persistent volume, or binding to a pre-existing snapshot. properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds type:string] spec:map[description:spec defines the desired characteristics of a snapshot requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots Required. properties:map[source:map[description:source specifies where a snapshot will be created from. This field is immutable after creation. Required. properties:map[persistentVolumeClaimName:map[description:persistentVolumeClaimName specifies the name of the PersistentVolumeClaim object in the same namespace as the VolumeSnapshot object where the snapshot should be dynamically taken from. This field is immutable. type:string] volumeSnapshotContentName:map[description:volumeSnapshotContentName specifies the name of a pre-existing VolumeSnapshotContent object. This field is immutable. type:string]] type:object] volumeSnapshotClassName:map[description:volumeSnapshotClassName is the name of the VolumeSnapshotClass requested by the VolumeSnapshot. If not specified, the default snapshot class will be used if one exists. If not specified, and there is no default snapshot class, dynamic snapshot creation will fail. Empty string is not allowed for this field. TODO(xiangqian): a webhook validation on empty string. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshot-classes type:string]] required:[source] type:object] status:map[description:status represents the current information of a snapshot. NOTE: status can be modified by sources other than system controllers, and must not be depended upon for accuracy. Controllers should only use information from the VolumeSnapshotContent object after verifying that the binding is accurate and complete. properties:map[boundVolumeSnapshotContentName:map[description:boundVolumeSnapshotContentName represents the name of the VolumeSnapshotContent object to which the VolumeSnapshot object is bound. If not specified, it indicates that the VolumeSnapshot object has not been successfully bound to a VolumeSnapshotContent object yet. NOTE: Specified boundVolumeSnapshotContentName alone does not mean binding       is valid. Controllers MUST always verify bidirectional binding between       VolumeSnapshot and VolumeSnapshotContent to avoid possible security issues. type:string] creationTime:map[description:creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in with the "creation_time" value returned from CSI "CreateSnapshotRequest" gRPC call. For a pre-existing snapshot, this field will be filled with the "creation_time" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it. If not specified, it indicates that the creation time of the snapshot is unknown. format:date-time type:string] error:map[description:error is the last observed error during snapshot creation, if any. This field could be helpful to upper level controllers(i.e., application controller) to decide whether they should continue on waiting for the snapshot to be created based on the type of error reported. properties:map[message:map[description:message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information. type:string] time:map[description:time is the timestamp when the error was encountered. format:date-time type:string]] type:object] readyToUse:map[description:readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in with the "ready_to_use" value returned from CSI "CreateSnapshotRequest" gRPC call. For a pre-existing snapshot, this field will be filled with the "ready_to_use" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it, otherwise, this field will be set to "True". If not specified, it means the readiness of a snapshot is unknown. type:boolean] restoreSize:map[description:restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in with the "size_bytes" value returned from CSI "CreateSnapshotRequest" gRPC call. For a pre-existing snapshot, this field will be filled with the "size_bytes" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown. type:string]] type:object]] required:[spec] type:object]] version:v1beta1 versions:[map[name:v1beta1 served:true storage:true]]] status:map[acceptedNames:map[kind:VolumeSnapshot listKind:VolumeSnapshotList plural:volumesnapshots singular:volumesnapshot] conditions:[map[lastTransitionTime:2021-06-03T22:17:30Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-03T22:17:30Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-03T22:17:30Z message:approved in https://github.com/kubernetes-csi/external-snapshotter/pull/139 reason:ApprovedAnnotation status:True type:KubernetesAPIApprovalPolicyConformant]] storedVersions:[v1beta1]]]}
I0610 03:42:56.016329       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[deployment.kubernetes.io/revision:2 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"opentelemetry","component":"otel-collector","configmanagement.gke.io/arch":"csmr","configmanagement.gke.io/configmanagement":"config-management","configmanagement.gke.io/system":"true","k8s-app":"kubernetes-config-management"},"name":"otel-collector","namespace":"config-management-monitoring","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}]},"spec":{"minReadySeconds":5,"progressDeadlineSeconds":120,"replicas":1,"selector":{"matchLabels":{"app":"opentelemetry","component":"otel-collector"}},"template":{"metadata":{"labels":{"app":"opentelemetry","component":"otel-collector"}},"spec":{"containers":[{"args":["--config=/conf/otel-collector-config.yaml"],"command":["/otelcontribcol"],"image":"gcr.io/config-management-release/otelcontribcol:v0.22.0","livenessProbe":{"httpGet":{"path":"/","port":13133}},"name":"otel-collector","ports":[{"containerPort":55678},{"containerPort":8888},{"containerPort":8675}],"readinessProbe":{"httpGet":{"path":"/","port":13133}},"resources":{"limits":{"cpu":1,"memory":"2Gi"},"requests":{"cpu":"200m","memory":"400Mi"}},"volumeMounts":[{"mountPath":"/conf","name":"otel-collector-config-vol"}]}],"volumes":[{"name":"otel-collector-config-vol","projected":{"sources":[{"configMap":{"name":"otel-collector"}},{"configMap":{"name":"otel-collector-stackdriver","optional":true}},{"configMap":{"name":"otel-collector-custom","optional":true}}]}}]}}}}
] creationTimestamp:2021-06-10T03:16:28Z generation:2 labels:map[app:opentelemetry component:otel-collector configmanagement.gke.io/arch:csmr configmanagement.gke.io/configmanagement:config-management configmanagement.gke.io/system:true k8s-app:kubernetes-config-management] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:app:map[] f:component:map[] f:configmanagement.gke.io/arch:map[] f:configmanagement.gke.io/configmanagement:map[] f:configmanagement.gke.io/system:map[] f:k8s-app:map[]] f:ownerReferences:map[.:map[] k:{"uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:minReadySeconds:map[] f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:app:map[] f:component:map[]]] f:strategy:map[f:rollingUpdate:map[.:map[] f:maxSurge:map[] f:maxUnavailable:map[]] f:type:map[]] f:template:map[f:metadata:map[f:labels:map[.:map[] f:app:map[] f:component:map[]]] f:spec:map[f:containers:map[k:{"name":"otel-collector"}:map[.:map[] f:args:map[] f:command:map[] f:image:map[] f:imagePullPolicy:map[] f:livenessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:name:map[] f:ports:map[.:map[] k:{"containerPort":55678,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]] k:{"containerPort":8675,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]] k:{"containerPort":8888,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]] f:readinessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:resources:map[.:map[] f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/conf"}:map[.:map[] f:mountPath:map[] f:name:map[]]]]] f:dnsPolicy:map[] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[] f:terminationGracePeriodSeconds:map[] f:volumes:map[.:map[] k:{"name":"otel-collector-config-vol"}:map[.:map[] f:name:map[] f:projected:map[.:map[] f:defaultMode:map[] f:sources:map[]]]]]]]] manager:Go-http-client operation:Update time:2021-06-10T03:16:28Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:template:map[f:metadata:map[f:annotations:map[.:map[] f:configsync.gke.io/configmap:map[]]]]]] manager:reconciler-manager operation:Update time:2021-06-10T03:16:32Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:16:41Z]] name:otel-collector namespace:config-management-monitoring ownerReferences:[map[apiVersion:configmanagement.gke.io/v1 blockOwnerDeletion:true controller:true kind:ConfigManagement name:config-management uid:4c9472ce-7740-48ac-927f-2cdf13a6b1ef]] resourceVersion:3673712 selfLink:/apis/apps/v1/namespaces/config-management-monitoring/deployments/otel-collector uid:a3cbabdf-487d-49cf-97e4-99e285622ccd] spec:map[minReadySeconds:5 progressDeadlineSeconds:120 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:opentelemetry component:otel-collector]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[annotations:map[configsync.gke.io/configmap:6195176632478ba4dd7b00200340a6bd] creationTimestamp:<nil> labels:map[app:opentelemetry component:otel-collector]] spec:map[containers:[map[args:[--config=/conf/otel-collector-config.yaml] command:[/otelcontribcol] image:gcr.io/config-management-release/otelcontribcol:v0.22.0 imagePullPolicy:IfNotPresent livenessProbe:map[failureThreshold:3 httpGet:map[path:/ port:13133 scheme:HTTP] periodSeconds:10 successThreshold:1 timeoutSeconds:1] name:otel-collector ports:[map[containerPort:55678 protocol:TCP] map[containerPort:8888 protocol:TCP] map[containerPort:8675 protocol:TCP]] readinessProbe:map[failureThreshold:3 httpGet:map[path:/ port:13133 scheme:HTTP] periodSeconds:10 successThreshold:1 timeoutSeconds:1] resources:map[limits:map[cpu:1 memory:2Gi] requests:map[cpu:200m memory:400Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/conf name:otel-collector-config-vol]]]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30 volumes:[map[name:otel-collector-config-vol projected:map[defaultMode:420 sources:[map[configMap:map[name:otel-collector]] map[configMap:map[name:otel-collector-stackdriver optional:true]] map[configMap:map[name:otel-collector-custom optional:true]]]]]]]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:16:41Z lastUpdateTime:2021-06-10T03:16:41Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:16:28Z lastUpdateTime:2021-06-10T03:16:41Z message:ReplicaSet "otel-collector-5b85fdb78" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:42:56.017396       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[api-approved.kubernetes.io:https://github.com/kubernetes/community/pull/2524 components.gke.io/component-name:storageversionmigrator-crd components.gke.io/component-version:0.0.2 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"api-approved.kubernetes.io":"https://github.com/kubernetes/community/pull/2524","components.gke.io/component-name":"storageversionmigrator-crd","components.gke.io/component-version":"0.0.2"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile"},"name":"storageversionmigrations.migration.k8s.io"},"spec":{"group":"migration.k8s.io","names":{"kind":"StorageVersionMigration","listKind":"StorageVersionMigrationList","plural":"storageversionmigrations","singular":"storageversionmigration"},"preserveUnknownFields":false,"scope":"Cluster","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"StorageVersionMigration represents a migration of stored data to the latest storage version.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"Specification of the migration.","properties":{"continueToken":{"description":"The token used in the list options to get the next chunk of objects to migrate. When the .status.conditions indicates the migration is \"Running\", users can use this token to check the progress of the migration.","type":"string"},"resource":{"description":"The resource that is being migrated. The migrator sends requests to the endpoint serving the resource. Immutable.","properties":{"group":{"description":"The name of the group.","type":"string"},"resource":{"description":"The name of the resource.","type":"string"},"version":{"description":"The name of the version.","type":"string"}},"type":"object"}},"required":["resource"],"type":"object"},"status":{"description":"Status of the migration.","properties":{"conditions":{"description":"The latest available observations of the migration's current state.","items":{"description":"Describes the state of a migration at a certain point.","properties":{"lastUpdateTime":{"description":"The last time this condition was updated.","format":"date-time","type":"string"},"message":{"description":"A human readable message indicating details about the transition.","type":"string"},"reason":{"description":"The reason for the condition's last transition.","type":"string"},"status":{"description":"Status of the condition, one of True, False, Unknown.","type":"string"},"type":{"description":"Type of the condition.","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
] creationTimestamp:2021-06-03T22:17:30Z generation:1 labels:map[addonmanager.kubernetes.io/mode:Reconcile] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:30Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:api-approved.kubernetes.io:map[] f:components.gke.io/component-name:map[] f:components.gke.io/component-version:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:kubectl operation:Update time:2021-06-03T22:17:30Z]] name:storageversionmigrations.migration.k8s.io resourceVersion:546 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/storageversionmigrations.migration.k8s.io uid:6379afda-db82-4977-a08d-ad865514837c] spec:map[conversion:map[strategy:None] group:migration.k8s.io names:map[kind:StorageVersionMigration listKind:StorageVersionMigrationList plural:storageversionmigrations singular:storageversionmigration] preserveUnknownFields:false scope:Cluster subresources:map[status:map[]] validation:map[openAPIV3Schema:map[description:StorageVersionMigration represents a migration of stored data to the latest storage version. properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds type:string] metadata:map[type:object] spec:map[description:Specification of the migration. properties:map[continueToken:map[description:The token used in the list options to get the next chunk of objects to migrate. When the .status.conditions indicates the migration is "Running", users can use this token to check the progress of the migration. type:string] resource:map[description:The resource that is being migrated. The migrator sends requests to the endpoint serving the resource. Immutable. properties:map[group:map[description:The name of the group. type:string] resource:map[description:The name of the resource. type:string] version:map[description:The name of the version. type:string]] type:object]] required:[resource] type:object] status:map[description:Status of the migration. properties:map[conditions:map[description:The latest available observations of the migration's current state. items:map[description:Describes the state of a migration at a certain point. properties:map[lastUpdateTime:map[description:The last time this condition was updated. format:date-time type:string] message:map[description:A human readable message indicating details about the transition. type:string] reason:map[description:The reason for the condition's last transition. type:string] status:map[description:Status of the condition, one of True, False, Unknown. type:string] type:map[description:Type of the condition. type:string]] required:[status type] type:object] type:array]] type:object]] type:object]] version:v1alpha1 versions:[map[name:v1alpha1 served:true storage:true]]] status:map[acceptedNames:map[kind:StorageVersionMigration listKind:StorageVersionMigrationList plural:storageversionmigrations singular:storageversionmigration] conditions:[map[lastTransitionTime:2021-06-03T22:17:30Z message:approved in https://github.com/kubernetes/community/pull/2524 reason:ApprovedAnnotation status:True type:KubernetesAPIApprovalPolicyConformant] map[lastTransitionTime:2021-06-03T22:17:30Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-03T22:17:30Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1alpha1]]]}
I0610 03:42:56.017413       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[deployment.kubernetes.io/revision:1 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"reconciler-manager","configmanagement.gke.io/arch":"csmr","configmanagement.gke.io/configmanagement":"config-management","configmanagement.gke.io/system":"true","k8s-app":"kubernetes-config-management"},"name":"reconciler-manager","namespace":"config-management-system","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}]},"spec":{"minReadySeconds":10,"replicas":1,"selector":{"matchLabels":{"app":"reconciler-manager"}},"template":{"metadata":{"labels":{"app":"reconciler-manager"}},"spec":{"containers":[{"args":["--enable-leader-election"],"command":["/reconciler-manager"],"envFrom":[{"configMapRef":{"name":"reconciler-manager","optional":true}}],"image":"gcr.io/config-management-release/reconciler-manager:v1.8.0-rc.8","name":"reconciler-manager","resources":{"limits":{"cpu":"200m","memory":"100Mi"},"requests":{"cpu":"100m","memory":"20Mi"}},"volumeMounts":[{"mountPath":"/deployment.yaml","name":"configs","subPath":"deployment.yaml"}]},{"args":["--config=/conf/otel-agent-config.yaml"],"command":["/otelcol"],"image":"gcr.io/config-management-release/otelcol:v0.22.0","livenessProbe":{"httpGet":{"path":"/","port":13133}},"name":"otel-agent","ports":[{"containerPort":55678},{"containerPort":8888}],"readinessProbe":{"httpGet":{"path":"/","port":13133}},"resources":{"limits":{"cpu":"500m","memory":"500Mi"},"requests":{"cpu":"100m","memory":"100Mi"}},"volumeMounts":[{"mountPath":"/conf","name":"otel-agent-config-vol"}]}],"serviceAccountName":"reconciler-manager","terminationGracePeriodSeconds":10,"volumes":[{"configMap":{"name":"reconciler-manager-cm"},"name":"configs"},{"configMap":{"name":"otel-agent"},"name":"otel-agent-config-vol"}]}}}}
] creationTimestamp:2021-06-10T03:16:28Z generation:1 labels:map[app:reconciler-manager configmanagement.gke.io/arch:csmr configmanagement.gke.io/configmanagement:config-management configmanagement.gke.io/system:true k8s-app:kubernetes-config-management] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:app:map[] f:configmanagement.gke.io/arch:map[] f:configmanagement.gke.io/configmanagement:map[] f:configmanagement.gke.io/system:map[] f:k8s-app:map[]] f:ownerReferences:map[.:map[] k:{"uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:minReadySeconds:map[] f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:app:map[]]] f:strategy:map[f:rollingUpdate:map[.:map[] f:maxSurge:map[] f:maxUnavailable:map[]] f:type:map[]] f:template:map[f:metadata:map[f:labels:map[.:map[] f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"otel-agent"}:map[.:map[] f:args:map[] f:command:map[] f:image:map[] f:imagePullPolicy:map[] f:livenessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:name:map[] f:ports:map[.:map[] k:{"containerPort":55678,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]] k:{"containerPort":8888,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]] f:readinessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:resources:map[.:map[] f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/conf"}:map[.:map[] f:mountPath:map[] f:name:map[]]]] k:{"name":"reconciler-manager"}:map[.:map[] f:args:map[] f:command:map[] f:envFrom:map[] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[.:map[] f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/deployment.yaml"}:map[.:map[] f:mountPath:map[] f:name:map[] f:subPath:map[]]]]] f:dnsPolicy:map[] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[] f:serviceAccount:map[] f:serviceAccountName:map[] f:terminationGracePeriodSeconds:map[] f:volumes:map[.:map[] k:{"name":"configs"}:map[.:map[] f:configMap:map[.:map[] f:defaultMode:map[] f:name:map[]] f:name:map[]] k:{"name":"otel-agent-config-vol"}:map[.:map[] f:configMap:map[.:map[] f:defaultMode:map[] f:name:map[]] f:name:map[]]]]]]] manager:Go-http-client operation:Update time:2021-06-10T03:16:28Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:16:42Z]] name:reconciler-manager namespace:config-management-system ownerReferences:[map[apiVersion:configmanagement.gke.io/v1 blockOwnerDeletion:true controller:true kind:ConfigManagement name:config-management uid:4c9472ce-7740-48ac-927f-2cdf13a6b1ef]] resourceVersion:3673721 selfLink:/apis/apps/v1/namespaces/config-management-system/deployments/reconciler-manager uid:34bc2c6b-15eb-416f-9c4c-dfb0d841462d] spec:map[minReadySeconds:10 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:reconciler-manager]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:reconciler-manager]] spec:map[containers:[map[args:[--enable-leader-election] command:[/reconciler-manager] envFrom:[map[configMapRef:map[name:reconciler-manager optional:true]]] image:gcr.io/config-management-release/reconciler-manager:v1.8.0-rc.8 imagePullPolicy:IfNotPresent name:reconciler-manager resources:map[limits:map[cpu:200m memory:100Mi] requests:map[cpu:100m memory:20Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/deployment.yaml name:configs subPath:deployment.yaml]]] map[args:[--config=/conf/otel-agent-config.yaml] command:[/otelcol] image:gcr.io/config-management-release/otelcol:v0.22.0 imagePullPolicy:IfNotPresent livenessProbe:map[failureThreshold:3 httpGet:map[path:/ port:13133 scheme:HTTP] periodSeconds:10 successThreshold:1 timeoutSeconds:1] name:otel-agent ports:[map[containerPort:55678 protocol:TCP] map[containerPort:8888 protocol:TCP]] readinessProbe:map[failureThreshold:3 httpGet:map[path:/ port:13133 scheme:HTTP] periodSeconds:10 successThreshold:1 timeoutSeconds:1] resources:map[limits:map[cpu:500m memory:500Mi] requests:map[cpu:100m memory:100Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/conf name:otel-agent-config-vol]]]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] serviceAccount:reconciler-manager serviceAccountName:reconciler-manager terminationGracePeriodSeconds:10 volumes:[map[configMap:map[defaultMode:420 name:reconciler-manager-cm] name:configs] map[configMap:map[defaultMode:420 name:otel-agent] name:otel-agent-config-vol]]]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:16:42Z lastUpdateTime:2021-06-10T03:16:42Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:16:28Z lastUpdateTime:2021-06-10T03:16:42Z message:ReplicaSet "reconciler-manager-7c5cb8b9fb" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:42:56.019246       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[deployment.kubernetes.io/revision:1 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"configmanagement.gke.io/arch":"csmr","configmanagement.gke.io/configmanagement":"config-management","control-plane":"controller-manager","k8s-app":"kubernetes-config-management"},"name":"resource-group-controller-manager","namespace":"resource-group-system","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}]},"spec":{"replicas":1,"selector":{"matchLabels":{"configmanagement.gke.io/arch":"csmr","control-plane":"controller-manager"}},"template":{"metadata":{"labels":{"configmanagement.gke.io/arch":"csmr","control-plane":"controller-manager"}},"spec":{"containers":[{"args":["--secure-listen-address=0.0.0.0:8443","--upstream=http://127.0.0.1:8080/","--logtostderr=true","--v=10"],"image":"gcr.io/config-management-release/kube-rbac-proxy:v0.5.0","name":"kube-rbac-proxy","ports":[{"containerPort":8443,"name":"https"}]},{"args":["--metrics-addr=127.0.0.1:8080","--enable-leader-election"],"command":["/manager"],"image":"gcr.io/config-management-release/resource-group-controller:v0.7.3","imagePullPolicy":"Always","name":"manager","resources":{"limits":{"cpu":"300m","memory":"500Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"securityContext":{"runAsNonRoot":true,"runAsUser":1000}}],"serviceAccountName":"resource-group-sa","terminationGracePeriodSeconds":10}}}}
] creationTimestamp:2021-06-10T03:16:28Z generation:1 labels:map[configmanagement.gke.io/arch:csmr configmanagement.gke.io/configmanagement:config-management control-plane:controller-manager k8s-app:kubernetes-config-management] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:configmanagement.gke.io/arch:map[] f:configmanagement.gke.io/configmanagement:map[] f:control-plane:map[] f:k8s-app:map[]] f:ownerReferences:map[.:map[] k:{"uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:configmanagement.gke.io/arch:map[] f:control-plane:map[]]] f:strategy:map[f:rollingUpdate:map[.:map[] f:maxSurge:map[] f:maxUnavailable:map[]] f:type:map[]] f:template:map[f:metadata:map[f:labels:map[.:map[] f:configmanagement.gke.io/arch:map[] f:control-plane:map[]]] f:spec:map[f:containers:map[k:{"name":"kube-rbac-proxy"}:map[.:map[] f:args:map[] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:ports:map[.:map[] k:{"containerPort":8443,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:name:map[] f:protocol:map[]]] f:resources:map[] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[]] k:{"name":"manager"}:map[.:map[] f:args:map[] f:command:map[] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[.:map[] f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:securityContext:map[.:map[] f:runAsNonRoot:map[] f:runAsUser:map[]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[]]] f:dnsPolicy:map[] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[] f:serviceAccount:map[] f:serviceAccountName:map[] f:terminationGracePeriodSeconds:map[]]]]] manager:Go-http-client operation:Update time:2021-06-10T03:16:28Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:16:30Z]] name:resource-group-controller-manager namespace:resource-group-system ownerReferences:[map[apiVersion:configmanagement.gke.io/v1 blockOwnerDeletion:true controller:true kind:ConfigManagement name:config-management uid:4c9472ce-7740-48ac-927f-2cdf13a6b1ef]] resourceVersion:3673573 selfLink:/apis/apps/v1/namespaces/resource-group-system/deployments/resource-group-controller-manager uid:d0f4631f-ead7-4c47-b818-b632646a85ed] spec:map[progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[configmanagement.gke.io/arch:csmr control-plane:controller-manager]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[configmanagement.gke.io/arch:csmr control-plane:controller-manager]] spec:map[containers:[map[args:[--secure-listen-address=0.0.0.0:8443 --upstream=http://127.0.0.1:8080/ --logtostderr=true --v=10] image:gcr.io/config-management-release/kube-rbac-proxy:v0.5.0 imagePullPolicy:IfNotPresent name:kube-rbac-proxy ports:[map[containerPort:8443 name:https protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File] map[args:[--metrics-addr=127.0.0.1:8080 --enable-leader-election] command:[/manager] image:gcr.io/config-management-release/resource-group-controller:v0.7.3 imagePullPolicy:Always name:manager resources:map[limits:map[cpu:300m memory:500Mi] requests:map[cpu:100m memory:50Mi]] securityContext:map[runAsNonRoot:true runAsUser:1000] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] serviceAccount:resource-group-sa serviceAccountName:resource-group-sa terminationGracePeriodSeconds:10]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:16:30Z lastUpdateTime:2021-06-10T03:16:30Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:16:28Z lastUpdateTime:2021-06-10T03:16:30Z message:ReplicaSet "resource-group-controller-manager-86c66895c4" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:42:56.018878       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[creationTimestamp:2021-06-03T22:17:39Z generation:1 managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:shortNames:map[] f:singular:map[]] f:preserveUnknownFields:map[] f:scope:map[] f:validation:map[.:map[] f:openAPIV3Schema:map[.:map[] f:properties:map[.:map[] f:apiVersion:map[.:map[] f:description:map[] f:type:map[]] f:kind:map[.:map[] f:description:map[] f:type:map[]] f:metadata:map[.:map[] f:type:map[]] f:spec:map[.:map[] f:type:map[]] f:status:map[.:map[] f:description:map[] f:properties:map[.:map[] f:conditions:map[.:map[] f:description:map[] f:items:map[] f:type:map[] f:x-kubernetes-list-map-keys:map[] f:x-kubernetes-list-type:map[]] f:lastSyncTime:map[.:map[] f:description:map[] f:format:map[] f:nullable:map[] f:type:map[]] f:networkEndpointGroups:map[.:map[] f:items:map[] f:type:map[] f:x-kubernetes-list-map-keys:map[] f:x-kubernetes-list-type:map[]]] f:type:map[]]] f:type:map[]]] f:version:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:glbc operation:Update time:2021-06-03T22:17:39Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:shortNames:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:39Z]] name:servicenetworkendpointgroups.networking.gke.io resourceVersion:752 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/servicenetworkendpointgroups.networking.gke.io uid:6bcb461a-1416-4e4e-8407-8b42f3a39d8d] spec:map[conversion:map[strategy:None] group:networking.gke.io names:map[kind:ServiceNetworkEndpointGroup listKind:ServiceNetworkEndpointGroupList plural:servicenetworkendpointgroups shortNames:[svcneg] singular:servicenetworkendpointgroup] preserveUnknownFields:false scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds type:string] metadata:map[type:object] spec:map[type:object] status:map[description:ServiceNetworkEndpointGroupStatus is the status for a ServiceNetworkEndpointGroup resource properties:map[conditions:map[description:Last time the NEG syncer syncs associated NEGs. items:map[description:NegCondition contains details for the current condition of this NEG. properties:map[lastTransitionTime:map[description:Last time the condition transitioned from one status to another. format:date-time nullable:true type:string] message:map[description:A human readable message indicating details about the transition. This field may be empty. type:string] observedGeneration:map[description:ObservedGeneration will not be set for ServiceNetworkEndpointGroup as the spec is empty. format:int64 type:integer] reason:map[description:The reason for the condition's last transition type:string] status:map[description:Status of the condition, one of True, False, Unknown. type:string] type:map[description:Type is the type of the condition. type:string]] required:[type status lastTransitionTime reason message] type:object] type:array x-kubernetes-list-map-keys:[type] x-kubernetes-list-type:map] lastSyncTime:map[description:Last time the NEG syncer syncs associated NEGs. format:date-time nullable:true type:string] networkEndpointGroups:map[items:map[description:NegObjectReference is the object reference to the NEG resource in GCE properties:map[id:map[description:The unique identifier for the NEG resource in GCE API. type:string] networkEndpointType:map[description:NetworkEndpointType: Type of network endpoints in this network endpoint group. type:string] selfLink:map[description:SelfLink is the GCE Server-defined fully-qualified URL for the GCE NEG resource type:string]] required:[id] type:object] type:array x-kubernetes-list-map-keys:[id] x-kubernetes-list-type:map]] type:object]] type:object]] version:v1beta1 versions:[map[name:v1beta1 served:true storage:true]]] status:map[acceptedNames:map[kind:ServiceNetworkEndpointGroup listKind:ServiceNetworkEndpointGroupList plural:servicenetworkendpointgroups shortNames:[svcneg] singular:servicenetworkendpointgroup] conditions:[map[lastTransitionTime:2021-06-03T22:17:39Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-03T22:17:39Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1beta1]]]}
I0610 03:42:56.020032       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[api-approved.kubernetes.io:https://github.com/kubernetes-retired/cluster-registry/pull/269 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"api-approved.kubernetes.io":"https://github.com/kubernetes-retired/cluster-registry/pull/269"},"labels":{"api":"","configmanagement.gke.io/configmanagement":"config-management","configmanagement.gke.io/system":"true","k8s-app":"kubernetes-config-management","kubebuilder.k8s.io":"1.0.3"},"name":"clusters.clusterregistry.k8s.io","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}]},"spec":{"group":"clusterregistry.k8s.io","names":{"kind":"Cluster","plural":"clusters"},"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"metadata":{"type":"object"},"spec":{"properties":{"authInfo":{"properties":{"controller":{"properties":{"kind":{"type":"string"},"name":{"type":"string"},"namespace":{"type":"string"}},"type":"object"},"user":{"properties":{"kind":{"type":"string"},"name":{"type":"string"},"namespace":{"type":"string"}},"type":"object"}},"type":"object"},"kubernetesApiEndpoints":{"properties":{"caBundle":{"format":"byte","type":"string"},"serverEndpoints":{"items":{"properties":{"clientCIDR":{"type":"string"},"serverAddress":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"},"status":{"properties":{"conditions":{"items":{"properties":{"lastHeartbeatTime":{"format":"date-time","type":"string"},"lastTransitionTime":{"format":"date-time","type":"string"},"message":{"type":"string"},"reason":{"type":"string"},"status":{"type":"string"},"type":{"type":"string"}},"required":["type","status"],"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true}]}}
] creationTimestamp:2021-06-10T03:16:27Z generation:1 labels:map[api: configmanagement.gke.io/configmanagement:config-management configmanagement.gke.io/system:true k8s-app:kubernetes-config-management kubebuilder.k8s.io:1.0.3] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:api-approved.kubernetes.io:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:api:map[] f:configmanagement.gke.io/configmanagement:map[] f:configmanagement.gke.io/system:map[] f:k8s-app:map[] f:kubebuilder.k8s.io:map[]] f:ownerReferences:map[.:map[] k:{"uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:Go-http-client operation:Update time:2021-06-10T03:16:27Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-10T03:16:27Z]] name:clusters.clusterregistry.k8s.io ownerReferences:[map[apiVersion:configmanagement.gke.io/v1 blockOwnerDeletion:true controller:true kind:ConfigManagement name:config-management uid:4c9472ce-7740-48ac-927f-2cdf13a6b1ef]] resourceVersion:3673434 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/clusters.clusterregistry.k8s.io uid:eba7edad-510b-4d43-bbfa-b11d9a4c9e43] spec:map[conversion:map[strategy:None] group:clusterregistry.k8s.io names:map[kind:Cluster listKind:ClusterList plural:clusters singular:cluster] preserveUnknownFields:false scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[apiVersion:map[type:string] kind:map[type:string] metadata:map[type:object] spec:map[properties:map[authInfo:map[properties:map[controller:map[properties:map[kind:map[type:string] name:map[type:string] namespace:map[type:string]] type:object] user:map[properties:map[kind:map[type:string] name:map[type:string] namespace:map[type:string]] type:object]] type:object] kubernetesApiEndpoints:map[properties:map[caBundle:map[format:byte type:string] serverEndpoints:map[items:map[properties:map[clientCIDR:map[type:string] serverAddress:map[type:string]] type:object] type:array]] type:object]] type:object] status:map[properties:map[conditions:map[items:map[properties:map[lastHeartbeatTime:map[format:date-time type:string] lastTransitionTime:map[format:date-time type:string] message:map[type:string] reason:map[type:string] status:map[type:string] type:map[type:string]] required:[type status] type:object] type:array]] type:object]] type:object]] version:v1alpha1 versions:[map[name:v1alpha1 served:true storage:true]]] status:map[acceptedNames:map[kind:Cluster listKind:ClusterList plural:clusters singular:cluster] conditions:[map[lastTransitionTime:2021-06-10T03:16:27Z message:approved in https://github.com/kubernetes-retired/cluster-registry/pull/269 reason:ApprovedAnnotation status:True type:KubernetesAPIApprovalPolicyConformant] map[lastTransitionTime:2021-06-10T03:16:27Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-10T03:16:27Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1alpha1]]]}
I0610 03:42:56.021500       1 filteredwatcher.go:329] Received watch event for created/updated object "Deployment.apps, bookstore/nginx"
I0610 03:42:56.021772       1 filteredwatcher.go:329] Received watch event for created/updated object "CustomResourceDefinition.apiextensions.k8s.io, /anvils.acme.com"
I0610 03:42:56.021637       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:33:51Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:33:51Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:34:02Z]] name:nginx namespace:bookstore resourceVersion:3681117 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:a2d9e9b1-09b5-47fc-89a4-7a1ba7fb1711] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:34:02Z lastUpdateTime:2021-06-10T03:34:02Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:33:51Z lastUpdateTime:2021-06-10T03:34:02Z message:ReplicaSet "nginx-5d59d67564" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:42:56.021805       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3673863 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema]] storedVersions:[v2]]]}
I0610 03:42:56.021884       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:33:51Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:33:51Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:34:02Z]] name:nginx namespace:bookstore resourceVersion:3681117 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:a2d9e9b1-09b5-47fc-89a4-7a1ba7fb1711] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:34:02Z lastUpdateTime:2021-06-10T03:34:02Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:33:51Z lastUpdateTime:2021-06-10T03:34:02Z message:ReplicaSet "nginx-5d59d67564" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:42:56.022223       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3673863 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema]] storedVersions:[v2]]]}
I0610 03:42:56.022218       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[deployment.kubernetes.io/revision:1 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"config-management-operator"},"name":"config-management-operator","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"component":"config-management-operator","k8s-app":"config-management-operator"}},"strategy":{"rollingUpdate":null,"type":"Recreate"},"template":{"metadata":{"labels":{"component":"config-management-operator","k8s-app":"config-management-operator"}},"spec":{"containers":[{"command":["/manager","--private-registry="],"envFrom":[{"configMapRef":{"name":"operator-environment-options","optional":true}}],"image":"gcr.io/config-management-release/config-management-operator:20210607213925-op","name":"manager","resources":{"limits":{"cpu":1,"memory":"2Gi"},"requests":{"cpu":"100m","memory":"20Mi"}}}],"serviceAccount":"config-management-operator"}}}}
] creationTimestamp:2021-06-10T03:16:13Z generation:2 labels:map[k8s-app:config-management-operator] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:k8s-app:map[]]] f:spec:map[f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:component:map[] f:k8s-app:map[]]] f:strategy:map[f:type:map[]] f:template:map[f:metadata:map[f:labels:map[.:map[] f:component:map[] f:k8s-app:map[]]] f:spec:map[f:containers:map[k:{"name":"manager"}:map[.:map[] f:command:map[] f:envFrom:map[] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[.:map[] f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[]]] f:dnsPolicy:map[] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[] f:serviceAccount:map[] f:serviceAccountName:map[] f:terminationGracePeriodSeconds:map[]]]]] manager:kubectl operation:Update time:2021-06-10T03:16:13Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:16:16Z]] name:config-management-operator namespace:kube-system resourceVersion:3674181 selfLink:/apis/apps/v1/namespaces/kube-system/deployments/config-management-operator uid:6c71a5d8-a49f-4dfb-beb2-df364d1826eb] spec:map[progressDeadlineSeconds:600 replicas:0 revisionHistoryLimit:10 selector:map[matchLabels:map[component:config-management-operator k8s-app:config-management-operator]] strategy:map[type:Recreate] template:map[metadata:map[creationTimestamp:<nil> labels:map[component:config-management-operator k8s-app:config-management-operator]] spec:map[containers:[map[command:[/manager --private-registry=] envFrom:[map[configMapRef:map[name:operator-environment-options optional:true]]] image:gcr.io/config-management-release/config-management-operator:20210607213925-op imagePullPolicy:IfNotPresent name:manager resources:map[limits:map[cpu:1 memory:2Gi] requests:map[cpu:100m memory:20Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] serviceAccount:config-management-operator serviceAccountName:config-management-operator terminationGracePeriodSeconds:30]]] status:map[conditions:[map[lastTransitionTime:2021-06-10T03:16:16Z lastUpdateTime:2021-06-10T03:16:16Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:16:13Z lastUpdateTime:2021-06-10T03:16:16Z message:ReplicaSet "config-management-operator-59f876f766" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2]]}
I0610 03:42:56.025798       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[deployment.kubernetes.io/revision:2 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server","kubernetes.io/cluster-service":"true","version":"v0.3.6"},"name":"metrics-server-v0.3.6","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"metrics-server","version":"v0.3.6"}},"template":{"metadata":{"annotations":{"seccomp.security.alpha.kubernetes.io/pod":"docker/default"},"labels":{"k8s-app":"metrics-server","version":"v0.3.6"},"name":"metrics-server"},"spec":{"containers":[{"command":["/metrics-server","--metric-resolution=30s","--kubelet-port=10255","--deprecated-kubelet-completely-insecure=true","--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP"],"image":"k8s.gcr.io/metrics-server-amd64:v0.3.6","name":"metrics-server","ports":[{"containerPort":443,"name":"https","protocol":"TCP"}]},{"command":["/pod_nanny","--config-dir=/etc/config","--cpu=40m","--extra-cpu=0.5m","--memory=35Mi","--extra-memory=4Mi","--threshold=5","--deployment=metrics-server-v0.3.6","--container=metrics-server","--poll-period=300000","--estimator=exponential","--scale-down-delay=24h","--minClusterSize=5","--use-metrics=true"],"env":[{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"gke.gcr.io/addon-resizer:1.8.11-gke.0","name":"metrics-server-nanny","resources":{"limits":{"cpu":"100m","memory":"300Mi"},"requests":{"cpu":"5m","memory":"50Mi"}},"volumeMounts":[{"mountPath":"/etc/config","name":"metrics-server-config-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-cluster-critical","serviceAccountName":"metrics-server","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"key":"components.gke.io/gke-managed-components","operator":"Exists"}],"volumes":[{"configMap":{"name":"metrics-server-config"},"name":"metrics-server-config-volume"}]}}}}
] creationTimestamp:2021-06-03T22:17:24Z generation:2 labels:map[addonmanager.kubernetes.io/mode:Reconcile k8s-app:metrics-server kubernetes.io/cluster-service:true version:v0.3.6] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[] f:k8s-app:map[] f:kubernetes.io/cluster-service:map[] f:version:map[]]] f:spec:map[f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:k8s-app:map[] f:version:map[]]] f:strategy:map[f:rollingUpdate:map[.:map[] f:maxSurge:map[] f:maxUnavailable:map[]] f:type:map[]] f:template:map[f:metadata:map[f:annotations:map[.:map[] f:seccomp.security.alpha.kubernetes.io/pod:map[]] f:labels:map[.:map[] f:k8s-app:map[] f:version:map[]] f:name:map[]] f:spec:map[f:containers:map[k:{"name":"metrics-server"}:map[.:map[] f:command:map[] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:ports:map[.:map[] k:{"containerPort":443,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:name:map[] f:protocol:map[]]] f:resources:map[] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[]] k:{"name":"metrics-server-nanny"}:map[.:map[] f:command:map[] f:env:map[.:map[] k:{"name":"MY_POD_NAME"}:map[.:map[] f:name:map[] f:valueFrom:map[.:map[] f:fieldRef:map[.:map[] f:apiVersion:map[] f:fieldPath:map[]]]] k:{"name":"MY_POD_NAMESPACE"}:map[.:map[] f:name:map[] f:valueFrom:map[.:map[] f:fieldRef:map[.:map[] f:apiVersion:map[] f:fieldPath:map[]]]]] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[.:map[] f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/etc/config"}:map[.:map[] f:mountPath:map[] f:name:map[]]]]] f:dnsPolicy:map[] f:nodeSelector:map[.:map[] f:kubernetes.io/os:map[]] f:priorityClassName:map[] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[] f:serviceAccount:map[] f:serviceAccountName:map[] f:terminationGracePeriodSeconds:map[] f:tolerations:map[] f:volumes:map[.:map[] k:{"name":"metrics-server-config-volume"}:map[.:map[] f:configMap:map[.:map[] f:defaultMode:map[] f:name:map[]] f:name:map[]]]]]]] manager:kubectl operation:Update time:2021-06-03T22:17:24Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:template:map[f:spec:map[f:containers:map[k:{"name":"metrics-server"}:map[f:resources:map[f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]]]]]]]] manager:pod_nanny operation:Update time:2021-06-03T22:18:07Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-03T22:18:27Z]] name:metrics-server-v0.3.6 namespace:kube-system resourceVersion:1230 selfLink:/apis/apps/v1/namespaces/kube-system/deployments/metrics-server-v0.3.6 uid:d9eba443-da1b-4b33-9201-5068fb5be29b] spec:map[progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[k8s-app:metrics-server version:v0.3.6]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[annotations:map[seccomp.security.alpha.kubernetes.io/pod:docker/default] creationTimestamp:<nil> labels:map[k8s-app:metrics-server version:v0.3.6] name:metrics-server] spec:map[containers:[map[command:[/metrics-server --metric-resolution=30s --kubelet-port=10255 --deprecated-kubelet-completely-insecure=true --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP] image:k8s.gcr.io/metrics-server-amd64:v0.3.6 imagePullPolicy:IfNotPresent name:metrics-server ports:[map[containerPort:443 name:https protocol:TCP]] resources:map[limits:map[cpu:43m memory:55Mi] requests:map[cpu:43m memory:55Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File] map[command:[/pod_nanny --config-dir=/etc/config --cpu=40m --extra-cpu=0.5m --memory=35Mi --extra-memory=4Mi --threshold=5 --deployment=metrics-server-v0.3.6 --container=metrics-server --poll-period=300000 --estimator=exponential --scale-down-delay=24h --minClusterSize=5 --use-metrics=true] env:[map[name:MY_POD_NAME valueFrom:map[fieldRef:map[apiVersion:v1 fieldPath:metadata.name]]] map[name:MY_POD_NAMESPACE valueFrom:map[fieldRef:map[apiVersion:v1 fieldPath:metadata.namespace]]]] image:gke.gcr.io/addon-resizer:1.8.11-gke.0 imagePullPolicy:IfNotPresent name:metrics-server-nanny resources:map[limits:map[cpu:100m memory:300Mi] requests:map[cpu:5m memory:50Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/etc/config name:metrics-server-config-volume]]]] dnsPolicy:ClusterFirst nodeSelector:map[kubernetes.io/os:linux] priorityClassName:system-cluster-critical restartPolicy:Always schedulerName:default-scheduler securityContext:map[] serviceAccount:metrics-server serviceAccountName:metrics-server terminationGracePeriodSeconds:30 tolerations:[map[key:CriticalAddonsOnly operator:Exists] map[key:components.gke.io/gke-managed-components operator:Exists]] volumes:[map[configMap:map[defaultMode:420 name:metrics-server-config] name:metrics-server-config-volume]]]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-03T22:18:06Z lastUpdateTime:2021-06-03T22:18:06Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-03T22:17:24Z lastUpdateTime:2021-06-03T22:18:27Z message:ReplicaSet "metrics-server-v0.3.6-6c47ffd7d7" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:42:56.026778       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[deployment.kubernetes.io/revision:1 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns-autoscaler","kubernetes.io/cluster-service":"true"},"name":"kube-dns-autoscaler","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"kube-dns-autoscaler"}},"template":{"metadata":{"annotations":{"seccomp.security.alpha.kubernetes.io/pod":"docker/default"},"labels":{"k8s-app":"kube-dns-autoscaler"}},"spec":{"containers":[{"command":["/cluster-proportional-autoscaler","--namespace=kube-system","--configmap=kube-dns-autoscaler","--target=Deployment/kube-dns","--default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true,\"includeUnschedulableNodes\":true}}","--logtostderr=true","--v=2"],"image":"gke.gcr.io/cluster-proportional-autoscaler-amd64:1.8.1-gke.0","name":"autoscaler","resources":{"requests":{"cpu":"20m","memory":"10Mi"}}}],"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-cluster-critical","securityContext":{"fsGroup":65534,"supplementalGroups":[65534]},"serviceAccountName":"kube-dns-autoscaler","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"key":"components.gke.io/gke-managed-components","operator":"Exists"}]}}}}
] creationTimestamp:2021-06-03T22:17:23Z generation:1 labels:map[addonmanager.kubernetes.io/mode:Reconcile k8s-app:kube-dns-autoscaler kubernetes.io/cluster-service:true] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[] f:k8s-app:map[] f:kubernetes.io/cluster-service:map[]]] f:spec:map[f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:k8s-app:map[]]] f:strategy:map[f:rollingUpdate:map[.:map[] f:maxSurge:map[] f:maxUnavailable:map[]] f:type:map[]] f:template:map[f:metadata:map[f:annotations:map[.:map[] f:seccomp.security.alpha.kubernetes.io/pod:map[]] f:labels:map[.:map[] f:k8s-app:map[]]] f:spec:map[f:containers:map[k:{"name":"autoscaler"}:map[.:map[] f:command:map[] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[.:map[] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[]]] f:dnsPolicy:map[] f:nodeSelector:map[.:map[] f:kubernetes.io/os:map[]] f:priorityClassName:map[] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[.:map[] f:fsGroup:map[] f:supplementalGroups:map[]] f:serviceAccount:map[] f:serviceAccountName:map[] f:terminationGracePeriodSeconds:map[] f:tolerations:map[]]]]] manager:kubectl operation:Update time:2021-06-03T22:17:23Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-03T22:18:01Z]] name:kube-dns-autoscaler namespace:kube-system resourceVersion:916 selfLink:/apis/apps/v1/namespaces/kube-system/deployments/kube-dns-autoscaler uid:49c85a2a-5ab4-48c5-8a6c-5afaa130fa44] spec:map[progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[k8s-app:kube-dns-autoscaler]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[annotations:map[seccomp.security.alpha.kubernetes.io/pod:docker/default] creationTimestamp:<nil> labels:map[k8s-app:kube-dns-autoscaler]] spec:map[containers:[map[command:[/cluster-proportional-autoscaler --namespace=kube-system --configmap=kube-dns-autoscaler --target=Deployment/kube-dns --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}} --logtostderr=true --v=2] image:gke.gcr.io/cluster-proportional-autoscaler-amd64:1.8.1-gke.0 imagePullPolicy:IfNotPresent name:autoscaler resources:map[requests:map[cpu:20m memory:10Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst nodeSelector:map[kubernetes.io/os:linux] priorityClassName:system-cluster-critical restartPolicy:Always schedulerName:default-scheduler securityContext:map[fsGroup:65534 supplementalGroups:[65534]] serviceAccount:kube-dns-autoscaler serviceAccountName:kube-dns-autoscaler terminationGracePeriodSeconds:30 tolerations:[map[key:CriticalAddonsOnly operator:Exists] map[key:components.gke.io/gke-managed-components operator:Exists]]]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-03T22:18:01Z lastUpdateTime:2021-06-03T22:18:01Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-03T22:17:23Z lastUpdateTime:2021-06-03T22:18:01Z message:ReplicaSet "kube-dns-autoscaler-58cbd4f75c" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:42:56.022655       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[api-approved.kubernetes.io:https://github.com/kubernetes-csi/external-snapshotter/pull/139 components.gke.io/component-name:snapshot-controller components.gke.io/component-version:0.4.3 components.gke.io/layer:addon controller-gen.kubebuilder.io/version:(devel) kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"api-approved.kubernetes.io":"https://github.com/kubernetes-csi/external-snapshotter/pull/139","components.gke.io/component-name":"snapshot-controller","components.gke.io/component-version":"0.4.3","components.gke.io/layer":"addon","controller-gen.kubebuilder.io/version":"(devel)"},"creationTimestamp":null,"labels":{"addonmanager.kubernetes.io/mode":"Reconcile"},"name":"volumesnapshotclasses.snapshot.storage.k8s.io"},"spec":{"group":"snapshot.storage.k8s.io","names":{"kind":"VolumeSnapshotClass","listKind":"VolumeSnapshotClassList","plural":"volumesnapshotclasses","singular":"volumesnapshotclass"},"preserveUnknownFields":false,"scope":"Cluster","validation":{"openAPIV3Schema":{"description":"VolumeSnapshotClass specifies parameters that a underlying storage system uses when creating a volume snapshot. A specific VolumeSnapshotClass is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses are non-namespaced","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources","type":"string"},"deletionPolicy":{"description":"deletionPolicy determines whether a VolumeSnapshotContent created through the VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted. Supported values are \"Retain\" and \"Delete\". \"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. \"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. Required.","enum":["Delete","Retain"],"type":"string"},"driver":{"description":"driver is the name of the storage driver that handles this VolumeSnapshotClass. Required.","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds","type":"string"},"parameters":{"additionalProperties":{"type":"string"},"description":"parameters is a key-value map with storage driver specific parameters for creating snapshots. These values are opaque to Kubernetes.","type":"object"}},"required":["deletionPolicy","driver"],"type":"object"}},"version":"v1beta1","versions":[{"name":"v1beta1","served":true,"storage":true}]}}
] creationTimestamp:2021-06-03T22:17:30Z generation:1 labels:map[addonmanager.kubernetes.io/mode:Reconcile] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:30Z] map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:api-approved.kubernetes.io:map[] f:components.gke.io/component-name:map[] f:components.gke.io/component-version:map[] f:components.gke.io/layer:map[] f:controller-gen.kubebuilder.io/version:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:preserveUnknownFields:map[] f:scope:map[] f:validation:map[.:map[] f:openAPIV3Schema:map[.:map[] f:description:map[] f:properties:map[.:map[] f:apiVersion:map[.:map[] f:description:map[] f:type:map[]] f:deletionPolicy:map[.:map[] f:description:map[] f:enum:map[] f:type:map[]] f:driver:map[.:map[] f:description:map[] f:type:map[]] f:kind:map[.:map[] f:description:map[] f:type:map[]] f:parameters:map[.:map[] f:additionalProperties:map[] f:description:map[] f:type:map[]]] f:required:map[] f:type:map[]]] f:version:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:kubectl operation:Update time:2021-06-03T22:17:30Z]] name:volumesnapshotclasses.snapshot.storage.k8s.io resourceVersion:530 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/volumesnapshotclasses.snapshot.storage.k8s.io uid:6d8e1451-69c4-4808-8d4c-0b6c37ca8bd5] spec:map[conversion:map[strategy:None] group:snapshot.storage.k8s.io names:map[kind:VolumeSnapshotClass listKind:VolumeSnapshotClassList plural:volumesnapshotclasses singular:volumesnapshotclass] preserveUnknownFields:false scope:Cluster validation:map[openAPIV3Schema:map[description:VolumeSnapshotClass specifies parameters that a underlying storage system uses when creating a volume snapshot. A specific VolumeSnapshotClass is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses are non-namespaced properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources type:string] deletionPolicy:map[description:deletionPolicy determines whether a VolumeSnapshotContent created through the VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted. Supported values are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. "Delete" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. Required. enum:[Delete Retain] type:string] driver:map[description:driver is the name of the storage driver that handles this VolumeSnapshotClass. Required. type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds type:string] parameters:map[additionalProperties:map[type:string] description:parameters is a key-value map with storage driver specific parameters for creating snapshots. These values are opaque to Kubernetes. type:object]] required:[deletionPolicy driver] type:object]] version:v1beta1 versions:[map[name:v1beta1 served:true storage:true]]] status:map[acceptedNames:map[kind:VolumeSnapshotClass listKind:VolumeSnapshotClassList plural:volumesnapshotclasses singular:volumesnapshotclass] conditions:[map[lastTransitionTime:2021-06-03T22:17:30Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-03T22:17:30Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-03T22:17:30Z message:approved in https://github.com/kubernetes-csi/external-snapshotter/pull/139 reason:ApprovedAnnotation status:True type:KubernetesAPIApprovalPolicyConformant]] storedVersions:[v1beta1]]]}
I0610 03:42:56.033587       1 worker.go:92] Worker reconciled "Anvil.acme.com, bookstore/heavy"
I0610 03:42:56.033707       1 queue.go:180] Removing clean object reference: &{map[apiVersion:acme.com/v2 kind:Anvil metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/cr-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{},"f:labels":{}},"f:spec":{".":{},"f:lbs":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:acme.com_anvil_bookstore_heavy] creationTimestamp:2021-06-10T03:16:59Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v2] managedFields:[map[apiVersion:acme.com/v2 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:lbs:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:59Z]] name:heavy namespace:bookstore resourceVersion:3673891 selfLink:/apis/acme.com/v2/namespaces/bookstore/anvils/heavy uid:36f8e42f-caf9-4554-8941-7f7a7f871d73] spec:map[lbs:100]]}
I0610 03:42:56.033882       1 queue.go:162] Fetched object for processing: &{map[apiVersion:v1 kind:Namespace metadata:map[annotations:map[client.lifecycle.config.k8s.io/deletion:detach config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:_namespace_bookstore] creationTimestamp:2021-06-10T03:16:57Z labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io] managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/deletion:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z]] name:bookstore resourceVersion:3673862 selfLink:/api/v1/namespaces/bookstore uid:de6949f9-f42b-49be-b46f-4d76b587872d] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:42:56.032835       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[deployment.kubernetes.io/revision:2 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"stackdriver-metadata-agent","kubernetes.io/cluster-service":"true"},"name":"stackdriver-metadata-agent-cluster-level","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"stackdriver-metadata-agent","cluster-level":"true"}},"strategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"components.gke.io/component-name":"stackdriver-metadata-agent","components.gke.io/component-version":"1.1.6"},"labels":{"app":"stackdriver-metadata-agent","cluster-level":"true"}},"spec":{"containers":[{"args":["-logtostderr","-v=1"],"env":[{"name":"CLUSTER_NAME","value":"cluster-3"},{"name":"CLUSTER_LOCATION","value":"us-central1-c"},{"name":"IGNORED_RESOURCES","value":"replicasets.v1.apps,replicasets.v1beta1.extensions"}],"image":"gcr.io/stackdriver-agents/metadata-agent-go:1.2.0","imagePullPolicy":"IfNotPresent","name":"metadata-agent","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/etc/ssl/certs","name":"ssl-certs"}]},{"command":["/pod_nanny","--config-dir=/etc/config","--cpu=40m","--extra-cpu=0.5m","--memory=80Mi","--extra-memory=2Mi","--threshold=5","--deployment=stackdriver-metadata-agent-cluster-level","--container=metadata-agent","--poll-period=300000","--estimator=exponential","--minClusterSize=16","--use-metrics=true"],"env":[{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"gke.gcr.io/addon-resizer:1.8.12-gke.0","name":"metadata-agent-nanny","resources":{"limits":{"memory":"90Mi"},"requests":{"cpu":"50m","memory":"90Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"volumeMounts":[{"mountPath":"/etc/config","name":"metadata-agent-config-volume"}]}],"dnsPolicy":"ClusterFirst","priorityClassName":"system-cluster-critical","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccountName":"metadata-agent","terminationGracePeriodSeconds":5,"tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"key":"components.gke.io/gke-managed-components","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/etc/ssl/certs","type":"Directory"},"name":"ssl-certs"},{"configMap":{"name":"metadata-agent-config"},"name":"metadata-agent-config-volume"}]}}}}
] creationTimestamp:2021-06-03T22:17:24Z generation:2 labels:map[addonmanager.kubernetes.io/mode:Reconcile app:stackdriver-metadata-agent kubernetes.io/cluster-service:true] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[] f:app:map[] f:kubernetes.io/cluster-service:map[]]] f:spec:map[f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:app:map[] f:cluster-level:map[]]] f:strategy:map[f:rollingUpdate:map[.:map[] f:maxSurge:map[] f:maxUnavailable:map[]] f:type:map[]] f:template:map[f:metadata:map[f:annotations:map[.:map[] f:components.gke.io/component-name:map[] f:components.gke.io/component-version:map[]] f:labels:map[.:map[] f:app:map[] f:cluster-level:map[]]] f:spec:map[f:containers:map[k:{"name":"metadata-agent"}:map[.:map[] f:args:map[] f:env:map[.:map[] k:{"name":"CLUSTER_LOCATION"}:map[.:map[] f:name:map[] f:value:map[]] k:{"name":"CLUSTER_NAME"}:map[.:map[] f:name:map[] f:value:map[]] k:{"name":"IGNORED_RESOURCES"}:map[.:map[] f:name:map[] f:value:map[]]] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[] f:securityContext:map[.:map[] f:allowPrivilegeEscalation:map[] f:capabilities:map[.:map[] f:drop:map[]] f:runAsGroup:map[] f:runAsNonRoot:map[] f:runAsUser:map[]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/etc/ssl/certs"}:map[.:map[] f:mountPath:map[] f:name:map[]]]] k:{"name":"metadata-agent-nanny"}:map[.:map[] f:command:map[] f:env:map[.:map[] k:{"name":"MY_POD_NAME"}:map[.:map[] f:name:map[] f:valueFrom:map[.:map[] f:fieldRef:map[.:map[] f:apiVersion:map[] f:fieldPath:map[]]]] k:{"name":"MY_POD_NAMESPACE"}:map[.:map[] f:name:map[] f:valueFrom:map[.:map[] f:fieldRef:map[.:map[] f:apiVersion:map[] f:fieldPath:map[]]]]] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[.:map[] f:limits:map[.:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:securityContext:map[.:map[] f:allowPrivilegeEscalation:map[] f:capabilities:map[.:map[] f:drop:map[]] f:runAsGroup:map[] f:runAsNonRoot:map[] f:runAsUser:map[]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/etc/config"}:map[.:map[] f:mountPath:map[] f:name:map[]]]]] f:dnsPolicy:map[] f:priorityClassName:map[] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[] f:serviceAccount:map[] f:serviceAccountName:map[] f:terminationGracePeriodSeconds:map[] f:tolerations:map[] f:volumes:map[.:map[] k:{"name":"metadata-agent-config-volume"}:map[.:map[] f:configMap:map[.:map[] f:defaultMode:map[] f:name:map[]] f:name:map[]] k:{"name":"ssl-certs"}:map[.:map[] f:hostPath:map[.:map[] f:path:map[] f:type:map[]] f:name:map[]]]]]]] manager:kubectl operation:Update time:2021-06-03T22:17:24Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:template:map[f:spec:map[f:containers:map[k:{"name":"metadata-agent"}:map[f:resources:map[f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]]]]]]]] manager:pod_nanny operation:Update time:2021-06-03T22:18:24Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-03T22:18:27Z]] name:stackdriver-metadata-agent-cluster-level namespace:kube-system resourceVersion:1222 selfLink:/apis/apps/v1/namespaces/kube-system/deployments/stackdriver-metadata-agent-cluster-level uid:4f74cdcb-0767-4b0c-84e9-75d3df0e600b] spec:map[progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:stackdriver-metadata-agent cluster-level:true]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:1] type:RollingUpdate] template:map[metadata:map[annotations:map[components.gke.io/component-name:stackdriver-metadata-agent components.gke.io/component-version:1.1.6] creationTimestamp:<nil> labels:map[app:stackdriver-metadata-agent cluster-level:true]] spec:map[containers:[map[args:[-logtostderr -v=1] env:[map[name:CLUSTER_NAME value:cluster-3] map[name:CLUSTER_LOCATION value:us-central1-c] map[name:IGNORED_RESOURCES value:replicasets.v1.apps,replicasets.v1beta1.extensions]] image:gcr.io/stackdriver-agents/metadata-agent-go:1.2.0 imagePullPolicy:IfNotPresent name:metadata-agent resources:map[limits:map[cpu:48m memory:112Mi] requests:map[cpu:48m memory:112Mi]] securityContext:map[allowPrivilegeEscalation:false capabilities:map[drop:[all]] runAsGroup:1000 runAsNonRoot:true runAsUser:1000] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/etc/ssl/certs name:ssl-certs]]] map[command:[/pod_nanny --config-dir=/etc/config --cpu=40m --extra-cpu=0.5m --memory=80Mi --extra-memory=2Mi --threshold=5 --deployment=stackdriver-metadata-agent-cluster-level --container=metadata-agent --poll-period=300000 --estimator=exponential --minClusterSize=16 --use-metrics=true] env:[map[name:MY_POD_NAME valueFrom:map[fieldRef:map[apiVersion:v1 fieldPath:metadata.name]]] map[name:MY_POD_NAMESPACE valueFrom:map[fieldRef:map[apiVersion:v1 fieldPath:metadata.namespace]]]] image:gke.gcr.io/addon-resizer:1.8.12-gke.0 imagePullPolicy:IfNotPresent name:metadata-agent-nanny resources:map[limits:map[memory:90Mi] requests:map[cpu:50m memory:90Mi]] securityContext:map[allowPrivilegeEscalation:false capabilities:map[drop:[all]] runAsGroup:1000 runAsNonRoot:true runAsUser:1000] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/etc/config name:metadata-agent-config-volume]]]] dnsPolicy:ClusterFirst priorityClassName:system-cluster-critical restartPolicy:Always schedulerName:default-scheduler securityContext:map[] serviceAccount:metadata-agent serviceAccountName:metadata-agent terminationGracePeriodSeconds:5 tolerations:[map[key:CriticalAddonsOnly operator:Exists] map[key:components.gke.io/gke-managed-components operator:Exists]] volumes:[map[hostPath:map[path:/etc/ssl/certs type:Directory] name:ssl-certs] map[configMap:map[defaultMode:420 name:metadata-agent-config] name:metadata-agent-config-volume]]]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-03T22:17:24Z lastUpdateTime:2021-06-03T22:17:24Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-03T22:17:24Z lastUpdateTime:2021-06-03T22:18:27Z message:ReplicaSet "stackdriver-metadata-agent-cluster-level-5f65cdb954" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:42:56.035001       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[api-approved.kubernetes.io:https://github.com/kubernetes-csi/external-snapshotter/pull/139 components.gke.io/component-name:snapshot-controller components.gke.io/component-version:0.4.3 components.gke.io/layer:addon controller-gen.kubebuilder.io/version:(devel) kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"api-approved.kubernetes.io":"https://github.com/kubernetes-csi/external-snapshotter/pull/139","components.gke.io/component-name":"snapshot-controller","components.gke.io/component-version":"0.4.3","components.gke.io/layer":"addon","controller-gen.kubebuilder.io/version":"(devel)"},"creationTimestamp":null,"labels":{"addonmanager.kubernetes.io/mode":"Reconcile"},"name":"volumesnapshotcontents.snapshot.storage.k8s.io"},"spec":{"group":"snapshot.storage.k8s.io","names":{"kind":"VolumeSnapshotContent","listKind":"VolumeSnapshotContentList","plural":"volumesnapshotcontents","singular":"volumesnapshotcontent"},"preserveUnknownFields":false,"scope":"Cluster","subresources":{"status":{}},"validation":{"openAPIV3Schema":{"description":"VolumeSnapshotContent represents the actual \"on-disk\" snapshot object in the underlying storage system","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds","type":"string"},"spec":{"description":"spec defines properties of a VolumeSnapshotContent created by the underlying storage system. Required.","properties":{"deletionPolicy":{"description":"deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted. Supported values are \"Retain\" and \"Delete\". \"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. \"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. In dynamic snapshot creation case, this field will be filled in with the \"DeletionPolicy\" field defined in the VolumeSnapshotClass the VolumeSnapshot refers to. For pre-existing snapshots, users MUST specify this field when creating the VolumeSnapshotContent object. Required.","enum":["Delete","Retain"],"type":"string"},"driver":{"description":"driver is the name of the CSI driver used to create the physical snapshot on the underlying storage system. This MUST be the same as the name returned by the CSI GetPluginName() call for that driver. Required.","type":"string"},"source":{"description":"source specifies from where a snapshot will be created. This field is immutable after creation. Required.","properties":{"snapshotHandle":{"description":"snapshotHandle specifies the CSI \"snapshot_id\" of a pre-existing snapshot on the underlying storage system. This field is immutable.","type":"string"},"volumeHandle":{"description":"volumeHandle specifies the CSI \"volume_id\" of the volume from which a snapshot should be dynamically taken from. This field is immutable.","type":"string"}},"type":"object"},"volumeSnapshotClassName":{"description":"name of the VolumeSnapshotClass to which this snapshot belongs.","type":"string"},"volumeSnapshotRef":{"description":"volumeSnapshotRef specifies the VolumeSnapshot object to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to this VolumeSnapshotContent's name for the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent object, name and namespace of the VolumeSnapshot object MUST be provided for binding to happen. This field is immutable after creation. Required.","properties":{"apiVersion":{"description":"API version of the referent.","type":"string"},"fieldPath":{"description":"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.","type":"string"},"kind":{"description":"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"namespace":{"description":"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/","type":"string"},"resourceVersion":{"description":"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency","type":"string"},"uid":{"description":"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids","type":"string"}},"type":"object"}},"required":["deletionPolicy","driver","source","volumeSnapshotRef"],"type":"object"},"status":{"description":"status represents the current information of a snapshot.","properties":{"creationTime":{"description":"creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in with the \"creation_time\" value returned from CSI \"CreateSnapshotRequest\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it indicates the creation time is unknown. The format of this field is a Unix nanoseconds time encoded as an int64. On Unix, the command `date +%s%N` returns the current time in nanoseconds since 1970-01-01 00:00:00 UTC.","format":"int64","type":"integer"},"error":{"description":"error is the latest observed error during snapshot creation, if any.","properties":{"message":{"description":"message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.","type":"string"},"time":{"description":"time is the timestamp when the error was encountered.","format":"date-time","type":"string"}},"type":"object"},"readyToUse":{"description":"readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in with the \"ready_to_use\" value returned from CSI \"CreateSnapshotRequest\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.","type":"boolean"},"restoreSize":{"description":"restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in with the \"size_bytes\" value returned from CSI \"CreateSnapshotRequest\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.","format":"int64","minimum":0,"type":"integer"},"snapshotHandle":{"description":"snapshotHandle is the CSI \"snapshot_id\" of a snapshot on the underlying storage system. If not specified, it indicates that dynamic snapshot creation has either failed or it is still in progress.","type":"string"}},"type":"object"}},"required":["spec"],"type":"object"}},"version":"v1beta1","versions":[{"name":"v1beta1","served":true,"storage":true}]}}
] creationTimestamp:2021-06-03T22:17:30Z generation:1 labels:map[addonmanager.kubernetes.io/mode:Reconcile] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:30Z] map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:api-approved.kubernetes.io:map[] f:components.gke.io/component-name:map[] f:components.gke.io/component-version:map[] f:components.gke.io/layer:map[] f:controller-gen.kubebuilder.io/version:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:preserveUnknownFields:map[] f:scope:map[] f:subresources:map[.:map[] f:status:map[]] f:validation:map[.:map[] f:openAPIV3Schema:map[.:map[] f:description:map[] f:properties:map[.:map[] f:apiVersion:map[.:map[] f:description:map[] f:type:map[]] f:kind:map[.:map[] f:description:map[] f:type:map[]] f:spec:map[.:map[] f:description:map[] f:properties:map[.:map[] f:deletionPolicy:map[.:map[] f:description:map[] f:enum:map[] f:type:map[]] f:driver:map[.:map[] f:description:map[] f:type:map[]] f:source:map[.:map[] f:description:map[] f:properties:map[.:map[] f:snapshotHandle:map[.:map[] f:description:map[] f:type:map[]] f:volumeHandle:map[.:map[] f:description:map[] f:type:map[]]] f:type:map[]] f:volumeSnapshotClassName:map[.:map[] f:description:map[] f:type:map[]] f:volumeSnapshotRef:map[.:map[] f:description:map[] f:properties:map[.:map[] f:apiVersion:map[.:map[] f:description:map[] f:type:map[]] f:fieldPath:map[.:map[] f:description:map[] f:type:map[]] f:kind:map[.:map[] f:description:map[] f:type:map[]] f:name:map[.:map[] f:description:map[] f:type:map[]] f:namespace:map[.:map[] f:description:map[] f:type:map[]] f:resourceVersion:map[.:map[] f:description:map[] f:type:map[]] f:uid:map[.:map[] f:description:map[] f:type:map[]]] f:type:map[]]] f:required:map[] f:type:map[]] f:status:map[.:map[] f:description:map[] f:properties:map[.:map[] f:creationTime:map[.:map[] f:description:map[] f:format:map[] f:type:map[]] f:error:map[.:map[] f:description:map[] f:properties:map[.:map[] f:message:map[.:map[] f:description:map[] f:type:map[]] f:time:map[.:map[] f:description:map[] f:format:map[] f:type:map[]]] f:type:map[]] f:readyToUse:map[.:map[] f:description:map[] f:type:map[]] f:restoreSize:map[.:map[] f:description:map[] f:format:map[] f:minimum:map[] f:type:map[]] f:snapshotHandle:map[.:map[] f:description:map[] f:type:map[]]] f:type:map[]]] f:required:map[] f:type:map[]]] f:version:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:kubectl operation:Update time:2021-06-03T22:17:30Z]] name:volumesnapshotcontents.snapshot.storage.k8s.io resourceVersion:535 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/volumesnapshotcontents.snapshot.storage.k8s.io uid:20a369bc-697d-4056-94ac-baf8b96ffe63] spec:map[conversion:map[strategy:None] group:snapshot.storage.k8s.io names:map[kind:VolumeSnapshotContent listKind:VolumeSnapshotContentList plural:volumesnapshotcontents singular:volumesnapshotcontent] preserveUnknownFields:false scope:Cluster subresources:map[status:map[]] validation:map[openAPIV3Schema:map[description:VolumeSnapshotContent represents the actual "on-disk" snapshot object in the underlying storage system properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds type:string] spec:map[description:spec defines properties of a VolumeSnapshotContent created by the underlying storage system. Required. properties:map[deletionPolicy:map[description:deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted. Supported values are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. "Delete" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. In dynamic snapshot creation case, this field will be filled in with the "DeletionPolicy" field defined in the VolumeSnapshotClass the VolumeSnapshot refers to. For pre-existing snapshots, users MUST specify this field when creating the VolumeSnapshotContent object. Required. enum:[Delete Retain] type:string] driver:map[description:driver is the name of the CSI driver used to create the physical snapshot on the underlying storage system. This MUST be the same as the name returned by the CSI GetPluginName() call for that driver. Required. type:string] source:map[description:source specifies from where a snapshot will be created. This field is immutable after creation. Required. properties:map[snapshotHandle:map[description:snapshotHandle specifies the CSI "snapshot_id" of a pre-existing snapshot on the underlying storage system. This field is immutable. type:string] volumeHandle:map[description:volumeHandle specifies the CSI "volume_id" of the volume from which a snapshot should be dynamically taken from. This field is immutable. type:string]] type:object] volumeSnapshotClassName:map[description:name of the VolumeSnapshotClass to which this snapshot belongs. type:string] volumeSnapshotRef:map[description:volumeSnapshotRef specifies the VolumeSnapshot object to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to this VolumeSnapshotContent's name for the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent object, name and namespace of the VolumeSnapshot object MUST be provided for binding to happen. This field is immutable after creation. Required. properties:map[apiVersion:map[description:API version of the referent. type:string] fieldPath:map[description:If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future. type:string] kind:map[description:Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds type:string] name:map[description:Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names type:string] namespace:map[description:Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ type:string] resourceVersion:map[description:Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency type:string] uid:map[description:UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids type:string]] type:object]] required:[deletionPolicy driver source volumeSnapshotRef] type:object] status:map[description:status represents the current information of a snapshot. properties:map[creationTime:map[description:creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in with the "creation_time" value returned from CSI "CreateSnapshotRequest" gRPC call. For a pre-existing snapshot, this field will be filled with the "creation_time" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it. If not specified, it indicates the creation time is unknown. The format of this field is a Unix nanoseconds time encoded as an int64. On Unix, the command `date +%s%N` returns the current time in nanoseconds since 1970-01-01 00:00:00 UTC. format:int64 type:integer] error:map[description:error is the latest observed error during snapshot creation, if any. properties:map[message:map[description:message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information. type:string] time:map[description:time is the timestamp when the error was encountered. format:date-time type:string]] type:object] readyToUse:map[description:readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in with the "ready_to_use" value returned from CSI "CreateSnapshotRequest" gRPC call. For a pre-existing snapshot, this field will be filled with the "ready_to_use" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it, otherwise, this field will be set to "True". If not specified, it means the readiness of a snapshot is unknown. type:boolean] restoreSize:map[description:restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in with the "size_bytes" value returned from CSI "CreateSnapshotRequest" gRPC call. For a pre-existing snapshot, this field will be filled with the "size_bytes" value returned from the CSI "ListSnapshots" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown. format:int64 minimum:0 type:integer] snapshotHandle:map[description:snapshotHandle is the CSI "snapshot_id" of a snapshot on the underlying storage system. If not specified, it indicates that dynamic snapshot creation has either failed or it is still in progress. type:string]] type:object]] required:[spec] type:object]] version:v1beta1 versions:[map[name:v1beta1 served:true storage:true]]] status:map[acceptedNames:map[kind:VolumeSnapshotContent listKind:VolumeSnapshotContentList plural:volumesnapshotcontents singular:volumesnapshotcontent] conditions:[map[lastTransitionTime:2021-06-03T22:17:30Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-03T22:17:30Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-03T22:17:30Z message:approved in https://github.com/kubernetes-csi/external-snapshotter/pull/139 reason:ApprovedAnnotation status:True type:KubernetesAPIApprovalPolicyConformant]] storedVersions:[v1beta1]]]}
I0610 03:42:56.036219       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[components.gke.io/component-name:updateinfo-crd components.gke.io/component-version:1.0.1 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"components.gke.io/component-name":"updateinfo-crd","components.gke.io/component-version":"1.0.1"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile"},"name":"updateinfos.nodemanagement.gke.io"},"spec":{"group":"nodemanagement.gke.io","names":{"kind":"UpdateInfo","plural":"updateinfos","shortNames":["updinf"],"singular":"updateinfo"},"scope":"Namespaced","validation":{"openAPIV3Schema":{"properties":{"spec":{"properties":{"ValidUntil":{"type":"date"},"surgeNode":{"type":"string"},"targetNode":{"type":"string"},"type":{"type":"string"}},"type":"object"}},"type":"object"}},"versions":[{"name":"v1alpha1","served":true,"storage":true}]}}
] creationTimestamp:2021-06-03T22:17:31Z generation:1 labels:map[addonmanager.kubernetes.io/mode:Reconcile] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:shortNames:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:31Z] map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:components.gke.io/component-name:map[] f:components.gke.io/component-version:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:shortNames:map[] f:singular:map[]] f:preserveUnknownFields:map[] f:scope:map[] f:validation:map[.:map[] f:openAPIV3Schema:map[.:map[] f:properties:map[.:map[] f:spec:map[.:map[] f:properties:map[.:map[] f:ValidUntil:map[.:map[] f:type:map[]] f:surgeNode:map[.:map[] f:type:map[]] f:targetNode:map[.:map[] f:type:map[]] f:type:map[.:map[] f:type:map[]]] f:type:map[]]] f:type:map[]]] f:version:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:kubectl operation:Update time:2021-06-03T22:17:31Z]] name:updateinfos.nodemanagement.gke.io resourceVersion:563 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/updateinfos.nodemanagement.gke.io uid:01972b6b-7aa9-4dda-bfe1-a02e8a55fbc1] spec:map[conversion:map[strategy:None] group:nodemanagement.gke.io names:map[kind:UpdateInfo listKind:UpdateInfoList plural:updateinfos shortNames:[updinf] singular:updateinfo] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[ValidUntil:map[type:date] surgeNode:map[type:string] targetNode:map[type:string] type:map[type:string]] type:object]] type:object]] version:v1alpha1 versions:[map[name:v1alpha1 served:true storage:true]]] status:map[acceptedNames:map[kind:UpdateInfo listKind:UpdateInfoList plural:updateinfos shortNames:[updinf] singular:updateinfo] conditions:[map[lastTransitionTime:2021-06-03T22:17:31Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-03T22:17:31Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1alpha1]]]}
I0610 03:42:56.037060       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[configsync.gke.io/config-checksum:ffdfbecb7012ee4ec75675c8a499f2de2a9ed7209d034b1b2e878f8ffe52e5ae deployment.kubernetes.io/revision:2] creationTimestamp:2021-06-10T03:16:48Z generation:2 labels:map[app:reconciler configmanagement.gke.io/arch:csmr configmanagement.gke.io/system:true] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:configsync.gke.io/config-checksum:map[]] f:labels:map[.:map[] f:app:map[] f:configmanagement.gke.io/arch:map[] f:configmanagement.gke.io/system:map[]] f:ownerReferences:map[.:map[] k:{"uid":"7cd0abcd-e838-49a5-a1a3-cfed1fa41556"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:minReadySeconds:map[] f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:app:map[]]] f:strategy:map[f:type:map[]] f:template:map[f:metadata:map[f:annotations:map[.:map[] f:configsync.gke.io/configmap:map[]] f:labels:map[.:map[] f:app:map[] f:configsync.gke.io/reconciler:map[]]] f:spec:map[f:containers:map[k:{"name":"git-sync"}:map[.:map[] f:args:map[] f:envFrom:map[] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[] f:securityContext:map[.:map[] f:runAsUser:map[]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/repo"}:map[.:map[] f:mountPath:map[] f:name:map[]]]] k:{"name":"otel-agent"}:map[.:map[] f:args:map[] f:command:map[] f:image:map[] f:imagePullPolicy:map[] f:livenessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:name:map[] f:ports:map[.:map[] k:{"containerPort":55678,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]] k:{"containerPort":8888,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]] f:readinessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:resources:map[.:map[] f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/conf"}:map[.:map[] f:mountPath:map[] f:name:map[]]]] k:{"name":"reconciler"}:map[.:map[] f:command:map[] f:env:map[.:map[] k:{"name":"RECONCILER_NAME"}:map[.:map[] f:name:map[] f:valueFrom:map[.:map[] f:fieldRef:map[.:map[] f:apiVersion:map[] f:fieldPath:map[]]]]] f:envFrom:map[] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[.:map[] f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/repo"}:map[.:map[] f:mountPath:map[] f:name:map[] f:readOnly:map[]]]]] f:dnsPolicy:map[] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[.:map[] f:fsGroup:map[]] f:serviceAccount:map[] f:serviceAccountName:map[] f:terminationGracePeriodSeconds:map[] f:volumes:map[.:map[] k:{"name":"otel-agent-config-vol"}:map[.:map[] f:configMap:map[.:map[] f:defaultMode:map[] f:name:map[]] f:name:map[]] k:{"name":"repo"}:map[.:map[] f:emptyDir:map[] f:name:map[]]]]]]] manager:reconciler-manager operation:Update time:2021-06-10T03:16:48Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:template:map[f:spec:map[f:containers:map[k:{"name":"reconciler"}:map[f:args:map[]]]]]]] manager:kubectl operation:Update time:2021-06-10T03:42:33Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:unavailableReplicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:42:50Z]] name:root-reconciler namespace:config-management-system ownerReferences:[map[apiVersion:configsync.gke.io/v1alpha1 blockOwnerDeletion:true controller:true kind:RootSync name:root-sync uid:7cd0abcd-e838-49a5-a1a3-cfed1fa41556]] resourceVersion:3684831 selfLink:/apis/apps/v1/namespaces/config-management-system/deployments/root-reconciler uid:87ec4fe2-74ef-47f4-868b-5390bcd455f9] spec:map[minReadySeconds:10 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:reconciler]] strategy:map[type:Recreate] template:map[metadata:map[annotations:map[configsync.gke.io/configmap:211e00349bd1d43597bb9a41de1b4a7b] creationTimestamp:<nil> labels:map[app:reconciler configsync.gke.io/reconciler:root-reconciler]] spec:map[containers:[map[args:[--v=5 --git-dir=/repo/root/rev] command:[/reconciler] env:[map[name:RECONCILER_NAME valueFrom:map[fieldRef:map[apiVersion:v1 fieldPath:metadata.name]]]] envFrom:[map[configMapRef:map[name:root-reconciler-reconciler optional:false]] map[configMapRef:map[name:root-reconciler-source-format optional:true]]] image:gcr.io/config-management-release/reconciler:v1.8.0-rc.8 imagePullPolicy:IfNotPresent name:reconciler resources:map[limits:map[cpu:1 memory:300Mi] requests:map[cpu:150m memory:100Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/repo name:repo readOnly:true]]] map[args:[--root=/repo/root --dest=rev --max-sync-failures=30 --error-file=error.json --v=5] envFrom:[map[configMapRef:map[name:root-reconciler-git-sync optional:false]]] image:gcr.io/config-management-release/git-sync:v3.3.2-gke.0__linux_amd64 imagePullPolicy:IfNotPresent name:git-sync resources:map[] securityContext:map[runAsUser:65533] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/repo name:repo]]] map[args:[--config=/conf/otel-agent-config.yaml] command:[/otelcol] image:gcr.io/config-management-release/otelcol:v0.22.0 imagePullPolicy:IfNotPresent livenessProbe:map[failureThreshold:3 httpGet:map[path:/ port:13133 scheme:HTTP] periodSeconds:10 successThreshold:1 timeoutSeconds:1] name:otel-agent ports:[map[containerPort:55678 protocol:TCP] map[containerPort:8888 protocol:TCP]] readinessProbe:map[failureThreshold:3 httpGet:map[path:/ port:13133 scheme:HTTP] periodSeconds:10 successThreshold:1 timeoutSeconds:1] resources:map[limits:map[cpu:500m memory:500Mi] requests:map[cpu:100m memory:100Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/conf name:otel-agent-config-vol]]]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[fsGroup:65533] serviceAccount:root-reconciler serviceAccountName:root-reconciler terminationGracePeriodSeconds:30 volumes:[map[emptyDir:map[] name:repo] map[configMap:map[defaultMode:420 name:otel-agent] name:otel-agent-config-vol]]]]] status:map[conditions:[map[lastTransitionTime:2021-06-10T03:42:33Z lastUpdateTime:2021-06-10T03:42:33Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available] map[lastTransitionTime:2021-06-10T03:16:48Z lastUpdateTime:2021-06-10T03:42:50Z message:ReplicaSet "root-reconciler-58674d5d7b" is progressing. reason:ReplicaSetUpdated status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 unavailableReplicas:1 updatedReplicas:1]]}
I0610 03:42:56.037730       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"configmanagement.gke.io/configmanagement":"config-management","configmanagement.gke.io/system":"true","k8s-app":"kubernetes-config-management"},"name":"namespaceselectors.configmanagement.gke.io","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}]},"spec":{"group":"configmanagement.gke.io","names":{"kind":"NamespaceSelector","plural":"namespaceselectors","singular":"namespaceselector"},"scope":"Cluster","versions":[{"name":"v1","schema":{"openAPIV3Schema":{"properties":{"spec":{"properties":{"selector":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"required":["selector"],"type":"object"}},"required":["spec"],"type":"object"}},"served":true,"storage":true}]}}
] creationTimestamp:2021-06-10T03:16:27Z generation:1 labels:map[configmanagement.gke.io/configmanagement:config-management configmanagement.gke.io/system:true k8s-app:kubernetes-config-management] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:configmanagement.gke.io/configmanagement:map[] f:configmanagement.gke.io/system:map[] f:k8s-app:map[]] f:ownerReferences:map[.:map[] k:{"uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:Go-http-client operation:Update time:2021-06-10T03:16:27Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-10T03:16:27Z]] name:namespaceselectors.configmanagement.gke.io ownerReferences:[map[apiVersion:configmanagement.gke.io/v1 blockOwnerDeletion:true controller:true kind:ConfigManagement name:config-management uid:4c9472ce-7740-48ac-927f-2cdf13a6b1ef]] resourceVersion:3673441 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/namespaceselectors.configmanagement.gke.io uid:8f2048bb-bb92-4348-90ef-e546def2fb9e] spec:map[conversion:map[strategy:None] group:configmanagement.gke.io names:map[kind:NamespaceSelector listKind:NamespaceSelectorList plural:namespaceselectors singular:namespaceselector] preserveUnknownFields:false scope:Cluster validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[selector:map[type:object x-kubernetes-preserve-unknown-fields:true]] required:[selector] type:object]] required:[spec] type:object]] version:v1 versions:[map[name:v1 served:true storage:true]]] status:map[acceptedNames:map[kind:NamespaceSelector listKind:NamespaceSelectorList plural:namespaceselectors singular:namespaceselector] conditions:[map[lastTransitionTime:2021-06-10T03:16:27Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-10T03:16:27Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1]]]}
I0610 03:42:56.039932       1 state.go:44] Reconciler checkpoint updated to /repo/root/848017a1dfde6dd861bf9e386f5841eda3528718/bookstore
I0610 03:42:56.039680       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[components.gke.io/component-name:managedcertificates components.gke.io/component-version:2.0.2 components.gke.io/layer:addon kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"components.gke.io/component-name":"managedcertificates","components.gke.io/component-version":"2.0.2","components.gke.io/layer":"addon"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile"},"name":"managedcertificates.networking.gke.io"},"spec":{"group":"networking.gke.io","names":{"kind":"ManagedCertificate","plural":"managedcertificates","shortNames":["mcrt"],"singular":"managedcertificate"},"scope":"Namespaced","versions":[{"name":"v1beta1","schema":{"openAPIV3Schema":{"properties":{"spec":{"properties":{"domains":{"items":{"maxLength":63,"pattern":"^(([a-z0-9]+|[a-z0-9][-a-z0-9]*[a-z0-9])\\.)+[a-z][-a-z0-9]*[a-z0-9]$","type":"string"},"maxItems":1,"type":"array"}},"type":"object"},"status":{"properties":{"certificateName":{"type":"string"},"certificateStatus":{"type":"string"},"domainStatus":{"items":{"properties":{"domain":{"type":"string"},"status":{"type":"string"}},"required":["domain","status"],"type":"object"},"type":"array"},"expireTime":{"format":"date-time","type":"string"}},"type":"object"}},"type":"object"}},"served":true,"storage":false},{"name":"v1beta2","schema":{"openAPIV3Schema":{"properties":{"spec":{"properties":{"domains":{"items":{"maxLength":63,"pattern":"^(([a-z0-9]+|[a-z0-9][-a-z0-9]*[a-z0-9])\\.)+[a-z][-a-z0-9]*[a-z0-9]$","type":"string"},"maxItems":100,"type":"array"}},"type":"object"},"status":{"properties":{"certificateName":{"type":"string"},"certificateStatus":{"type":"string"},"domainStatus":{"items":{"properties":{"domain":{"type":"string"},"status":{"type":"string"}},"required":["domain","status"],"type":"object"},"type":"array"},"expireTime":{"format":"date-time","type":"string"}},"type":"object"}},"type":"object"}},"served":true,"storage":false},{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"description":"Status of the managed certificate","jsonPath":".status.certificateStatus","name":"Status","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"properties":{"spec":{"properties":{"domains":{"items":{"maxLength":63,"pattern":"^(([a-z0-9]+|[a-z0-9][-a-z0-9]*[a-z0-9])\\.)+[a-z][-a-z0-9]*[a-z0-9]$","type":"string"},"maxItems":100,"type":"array"}},"type":"object"},"status":{"properties":{"certificateName":{"type":"string"},"certificateStatus":{"type":"string"},"domainStatus":{"items":{"properties":{"domain":{"type":"string"},"status":{"type":"string"}},"required":["domain","status"],"type":"object"},"type":"array"},"expireTime":{"format":"date-time","type":"string"}},"type":"object"}},"type":"object"}},"served":true,"storage":true}]}}
] creationTimestamp:2021-06-03T22:17:27Z generation:1 labels:map[addonmanager.kubernetes.io/mode:Reconcile] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:components.gke.io/component-name:map[] f:components.gke.io/component-version:map[] f:components.gke.io/layer:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:shortNames:map[] f:singular:map[]] f:scope:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:kubectl operation:Update time:2021-06-03T22:17:27Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:shortNames:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:28Z]] name:managedcertificates.networking.gke.io resourceVersion:461 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/managedcertificates.networking.gke.io uid:9cc57d65-4d80-4eb7-b94e-ea2c50457384] spec:map[conversion:map[strategy:None] group:networking.gke.io names:map[kind:ManagedCertificate listKind:ManagedCertificateList plural:managedcertificates shortNames:[mcrt] singular:managedcertificate] preserveUnknownFields:false scope:Namespaced version:v1beta1 versions:[map[name:v1beta1 schema:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[domains:map[items:map[maxLength:63 pattern:^(([a-z0-9]+|[a-z0-9][-a-z0-9]*[a-z0-9])\.)+[a-z][-a-z0-9]*[a-z0-9]$ type:string] maxItems:1 type:array]] type:object] status:map[properties:map[certificateName:map[type:string] certificateStatus:map[type:string] domainStatus:map[items:map[properties:map[domain:map[type:string] status:map[type:string]] required:[domain status] type:object] type:array] expireTime:map[format:date-time type:string]] type:object]] type:object]] served:true storage:false] map[name:v1beta2 schema:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[domains:map[items:map[maxLength:63 pattern:^(([a-z0-9]+|[a-z0-9][-a-z0-9]*[a-z0-9])\.)+[a-z][-a-z0-9]*[a-z0-9]$ type:string] maxItems:100 type:array]] type:object] status:map[properties:map[certificateName:map[type:string] certificateStatus:map[type:string] domainStatus:map[items:map[properties:map[domain:map[type:string] status:map[type:string]] required:[domain status] type:object] type:array] expireTime:map[format:date-time type:string]] type:object]] type:object]] served:true storage:false] map[additionalPrinterColumns:[map[JSONPath:.metadata.creationTimestamp name:Age type:date] map[JSONPath:.status.certificateStatus description:Status of the managed certificate name:Status type:string]] name:v1 schema:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[domains:map[items:map[maxLength:63 pattern:^(([a-z0-9]+|[a-z0-9][-a-z0-9]*[a-z0-9])\.)+[a-z][-a-z0-9]*[a-z0-9]$ type:string] maxItems:100 type:array]] type:object] status:map[properties:map[certificateName:map[type:string] certificateStatus:map[type:string] domainStatus:map[items:map[properties:map[domain:map[type:string] status:map[type:string]] required:[domain status] type:object] type:array] expireTime:map[format:date-time type:string]] type:object]] type:object]] served:true storage:true]]] status:map[acceptedNames:map[kind:ManagedCertificate listKind:ManagedCertificateList plural:managedcertificates shortNames:[mcrt] singular:managedcertificate] conditions:[map[lastTransitionTime:2021-06-03T22:17:27Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-03T22:17:28Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1]]]}
I0610 03:42:56.039847       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[deployment.kubernetes.io/revision:1 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"event-exporter","kubernetes.io/cluster-service":"true","version":"v0.3.4"},"name":"event-exporter-gke","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"k8s-app":"event-exporter"}},"template":{"metadata":{"annotations":{"components.gke.io/component-name":"event-exporter","components.gke.io/component-version":"1.0.9"},"labels":{"k8s-app":"event-exporter","version":"v0.3.4"}},"spec":{"containers":[{"command":["/event-exporter","-sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com","-prometheus-endpoint=:8080"],"image":"gke.gcr.io/event-exporter:v0.3.4-gke.0","name":"event-exporter","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}}},{"command":["/monitor","--stackdriver-prefix=container.googleapis.com/internal/addons","--api-override=https://monitoring.googleapis.com/","--source=event_exporter:http://localhost:8080?whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count","--pod-id=$(POD_NAME)","--namespace-id=$(POD_NAMESPACE)","--node-name=$(NODE_NAME)"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"gke.gcr.io/prometheus-to-sd:v0.10.0-gke.0","name":"prometheus-to-sd-exporter","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]}}}],"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsGroup":1000,"runAsUser":1000},"serviceAccountName":"event-exporter-sa","terminationGracePeriodSeconds":120,"tolerations":[{"key":"components.gke.io/gke-managed-components","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/etc/ssl/certs"},"name":"ssl-certs"}]}}}}
] creationTimestamp:2021-06-03T22:17:23Z generation:1 labels:map[addonmanager.kubernetes.io/mode:Reconcile k8s-app:event-exporter kubernetes.io/cluster-service:true version:v0.3.4] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[] f:k8s-app:map[] f:kubernetes.io/cluster-service:map[] f:version:map[]]] f:spec:map[f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:k8s-app:map[]]] f:strategy:map[f:rollingUpdate:map[.:map[] f:maxSurge:map[] f:maxUnavailable:map[]] f:type:map[]] f:template:map[f:metadata:map[f:annotations:map[.:map[] f:components.gke.io/component-name:map[] f:components.gke.io/component-version:map[]] f:labels:map[.:map[] f:k8s-app:map[] f:version:map[]]] f:spec:map[f:containers:map[k:{"name":"event-exporter"}:map[.:map[] f:command:map[] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[] f:securityContext:map[.:map[] f:allowPrivilegeEscalation:map[] f:capabilities:map[.:map[] f:drop:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[]] k:{"name":"prometheus-to-sd-exporter"}:map[.:map[] f:command:map[] f:env:map[.:map[] k:{"name":"NODE_NAME"}:map[.:map[] f:name:map[] f:valueFrom:map[.:map[] f:fieldRef:map[.:map[] f:apiVersion:map[] f:fieldPath:map[]]]] k:{"name":"POD_NAME"}:map[.:map[] f:name:map[] f:valueFrom:map[.:map[] f:fieldRef:map[.:map[] f:apiVersion:map[] f:fieldPath:map[]]]] k:{"name":"POD_NAMESPACE"}:map[.:map[] f:name:map[] f:valueFrom:map[.:map[] f:fieldRef:map[.:map[] f:apiVersion:map[] f:fieldPath:map[]]]]] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[] f:securityContext:map[.:map[] f:allowPrivilegeEscalation:map[] f:capabilities:map[.:map[] f:drop:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[]]] f:dnsPolicy:map[] f:nodeSelector:map[.:map[] f:kubernetes.io/os:map[]] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[.:map[] f:runAsGroup:map[] f:runAsUser:map[]] f:serviceAccount:map[] f:serviceAccountName:map[] f:terminationGracePeriodSeconds:map[] f:tolerations:map[] f:volumes:map[.:map[] k:{"name":"ssl-certs"}:map[.:map[] f:hostPath:map[.:map[] f:path:map[] f:type:map[]] f:name:map[]]]]]]] manager:kubectl operation:Update time:2021-06-03T22:17:23Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-03T22:18:27Z]] name:event-exporter-gke namespace:kube-system resourceVersion:1231 selfLink:/apis/apps/v1/namespaces/kube-system/deployments/event-exporter-gke uid:c0188da0-daf8-4e16-a02f-3113fcf657a7] spec:map[progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[k8s-app:event-exporter]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[annotations:map[components.gke.io/component-name:event-exporter components.gke.io/component-version:1.0.9] creationTimestamp:<nil> labels:map[k8s-app:event-exporter version:v0.3.4]] spec:map[containers:[map[command:[/event-exporter -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com -prometheus-endpoint=:8080] image:gke.gcr.io/event-exporter:v0.3.4-gke.0 imagePullPolicy:IfNotPresent name:event-exporter resources:map[] securityContext:map[allowPrivilegeEscalation:false capabilities:map[drop:[all]]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File] map[command:[/monitor --stackdriver-prefix=container.googleapis.com/internal/addons --api-override=https://monitoring.googleapis.com/ --source=event_exporter:http://localhost:8080?whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count --pod-id=$(POD_NAME) --namespace-id=$(POD_NAMESPACE) --node-name=$(NODE_NAME)] env:[map[name:POD_NAME valueFrom:map[fieldRef:map[apiVersion:v1 fieldPath:metadata.name]]] map[name:POD_NAMESPACE valueFrom:map[fieldRef:map[apiVersion:v1 fieldPath:metadata.namespace]]] map[name:NODE_NAME valueFrom:map[fieldRef:map[apiVersion:v1 fieldPath:spec.nodeName]]]] image:gke.gcr.io/prometheus-to-sd:v0.10.0-gke.0 imagePullPolicy:IfNotPresent name:prometheus-to-sd-exporter resources:map[] securityContext:map[allowPrivilegeEscalation:false capabilities:map[drop:[all]]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst nodeSelector:map[kubernetes.io/os:linux] restartPolicy:Always schedulerName:default-scheduler securityContext:map[runAsGroup:1000 runAsUser:1000] serviceAccount:event-exporter-sa serviceAccountName:event-exporter-sa terminationGracePeriodSeconds:120 tolerations:[map[key:components.gke.io/gke-managed-components operator:Exists]] volumes:[map[hostPath:map[path:/etc/ssl/certs type:] name:ssl-certs]]]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-03T22:18:27Z lastUpdateTime:2021-06-03T22:18:27Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-03T22:17:24Z lastUpdateTime:2021-06-03T22:18:27Z message:ReplicaSet "event-exporter-gke-67986489c8" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:42:56.040817       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[deployment.kubernetes.io/revision:1 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"glbc","kubernetes.io/cluster-service":"true","kubernetes.io/name":"GLBC"},"name":"l7-default-backend","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"glbc"}},"template":{"metadata":{"annotations":{"seccomp.security.alpha.kubernetes.io/pod":"docker/default"},"labels":{"k8s-app":"glbc","name":"glbc"}},"spec":{"containers":[{"image":"k8s.gcr.io/networking/ingress-gce-404-server-with-metrics-amd64:v1.10.11","livenessProbe":{"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":5},"name":"default-http-backend","ports":[{"containerPort":8080}],"resources":{"limits":{"cpu":"10m","memory":"20Mi"},"requests":{"cpu":"10m","memory":"20Mi"}}}],"tolerations":[{"key":"components.gke.io/gke-managed-components","operator":"Exists"}]}}}}
] creationTimestamp:2021-06-03T22:17:23Z generation:1 labels:map[addonmanager.kubernetes.io/mode:Reconcile k8s-app:glbc kubernetes.io/cluster-service:true kubernetes.io/name:GLBC] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[] f:k8s-app:map[] f:kubernetes.io/cluster-service:map[] f:kubernetes.io/name:map[]]] f:spec:map[f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:k8s-app:map[]]] f:strategy:map[f:rollingUpdate:map[.:map[] f:maxSurge:map[] f:maxUnavailable:map[]] f:type:map[]] f:template:map[f:metadata:map[f:annotations:map[.:map[] f:seccomp.security.alpha.kubernetes.io/pod:map[]] f:labels:map[.:map[] f:k8s-app:map[] f:name:map[]]] f:spec:map[f:containers:map[k:{"name":"default-http-backend"}:map[.:map[] f:image:map[] f:imagePullPolicy:map[] f:livenessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:initialDelaySeconds:map[] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:name:map[] f:ports:map[.:map[] k:{"containerPort":8080,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]] f:resources:map[.:map[] f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[]]] f:dnsPolicy:map[] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[] f:terminationGracePeriodSeconds:map[] f:tolerations:map[]]]]] manager:kubectl operation:Update time:2021-06-03T22:17:23Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-03T22:19:20Z]] name:l7-default-backend namespace:kube-system resourceVersion:1730 selfLink:/apis/apps/v1/namespaces/kube-system/deployments/l7-default-backend uid:ffb4c9ef-39a5-4d42-9cd8-1e19c695f652] spec:map[progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[k8s-app:glbc]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[annotations:map[seccomp.security.alpha.kubernetes.io/pod:docker/default] creationTimestamp:<nil> labels:map[k8s-app:glbc name:glbc]] spec:map[containers:[map[image:k8s.gcr.io/networking/ingress-gce-404-server-with-metrics-amd64:v1.10.11 imagePullPolicy:IfNotPresent livenessProbe:map[failureThreshold:3 httpGet:map[path:/healthz port:8080 scheme:HTTP] initialDelaySeconds:30 periodSeconds:10 successThreshold:1 timeoutSeconds:5] name:default-http-backend ports:[map[containerPort:8080 protocol:TCP]] resources:map[limits:map[cpu:10m memory:20Mi] requests:map[cpu:10m memory:20Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30 tolerations:[map[key:components.gke.io/gke-managed-components operator:Exists]]]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-03T22:19:20Z lastUpdateTime:2021-06-03T22:19:20Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-03T22:17:23Z lastUpdateTime:2021-06-03T22:19:20Z message:ReplicaSet "l7-default-backend-66579f5d7" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:42:56.041274       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[api-approved.kubernetes.io:https://github.com/kubernetes/enhancements/pull/747 components.gke.io/component-name:storageversionmigrator-crd components.gke.io/component-version:0.0.2 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"api-approved.kubernetes.io":"https://github.com/kubernetes/enhancements/pull/747","components.gke.io/component-name":"storageversionmigrator-crd","components.gke.io/component-version":"0.0.2"},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile"},"name":"storagestates.migration.k8s.io"},"spec":{"group":"migration.k8s.io","names":{"kind":"StorageState","listKind":"StorageStateList","plural":"storagestates","singular":"storagestate"},"preserveUnknownFields":false,"scope":"Cluster","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"The state of the storage of a specific resource.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"properties":{"name":{"description":"The name must be \"\u003c.spec.resource.resouce\u003e.\u003c.spec.resource.group\u003e\".","type":"string"}},"type":"object"},"spec":{"description":"Specification of the storage state.","properties":{"resource":{"description":"The resource this storageState is about.","properties":{"group":{"description":"The name of the group.","type":"string"},"resource":{"description":"The name of the resource.","type":"string"}},"type":"object"}},"type":"object"},"status":{"description":"Status of the storage state.","properties":{"currentStorageVersionHash":{"description":"The hash value of the current storage version, as shown in the discovery document served by the API server. Storage Version is the version to which objects are converted to before persisted.","type":"string"},"lastHeartbeatTime":{"description":"LastHeartbeatTime is the last time the storage migration triggering controller checks the storage version hash of this resource in the discovery document and updates this field.","format":"date-time","type":"string"},"persistedStorageVersionHashes":{"description":"The hash values of storage versions that persisted instances of spec.resource might still be encoded in. \"Unknown\" is a valid value in the list, and is the default value. It is not safe to upgrade or downgrade to an apiserver binary that does not support all versions listed in this field, or if \"Unknown\" is listed. Once the storage version migration for this resource has completed, the value of this field is refined to only contain the currentStorageVersionHash. Once the apiserver has changed the storage version, the new storage version is appended to the list.","items":{"type":"string"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
] creationTimestamp:2021-06-03T22:17:30Z generation:1 labels:map[addonmanager.kubernetes.io/mode:Reconcile] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:30Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:api-approved.kubernetes.io:map[] f:components.gke.io/component-name:map[] f:components.gke.io/component-version:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:kubectl operation:Update time:2021-06-03T22:17:30Z]] name:storagestates.migration.k8s.io resourceVersion:549 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/storagestates.migration.k8s.io uid:053e4f3d-08a7-48e8-ab3f-555bcfe18d79] spec:map[conversion:map[strategy:None] group:migration.k8s.io names:map[kind:StorageState listKind:StorageStateList plural:storagestates singular:storagestate] preserveUnknownFields:false scope:Cluster subresources:map[status:map[]] validation:map[openAPIV3Schema:map[description:The state of the storage of a specific resource. properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds type:string] metadata:map[properties:map[name:map[description:The name must be "<.spec.resource.resouce>.<.spec.resource.group>". type:string]] type:object] spec:map[description:Specification of the storage state. properties:map[resource:map[description:The resource this storageState is about. properties:map[group:map[description:The name of the group. type:string] resource:map[description:The name of the resource. type:string]] type:object]] type:object] status:map[description:Status of the storage state. properties:map[currentStorageVersionHash:map[description:The hash value of the current storage version, as shown in the discovery document served by the API server. Storage Version is the version to which objects are converted to before persisted. type:string] lastHeartbeatTime:map[description:LastHeartbeatTime is the last time the storage migration triggering controller checks the storage version hash of this resource in the discovery document and updates this field. format:date-time type:string] persistedStorageVersionHashes:map[description:The hash values of storage versions that persisted instances of spec.resource might still be encoded in. "Unknown" is a valid value in the list, and is the default value. It is not safe to upgrade or downgrade to an apiserver binary that does not support all versions listed in this field, or if "Unknown" is listed. Once the storage version migration for this resource has completed, the value of this field is refined to only contain the currentStorageVersionHash. Once the apiserver has changed the storage version, the new storage version is appended to the list. items:map[type:string] type:array]] type:object]] type:object]] version:v1alpha1 versions:[map[name:v1alpha1 served:true storage:true]]] status:map[acceptedNames:map[kind:StorageState listKind:StorageStateList plural:storagestates singular:storagestate] conditions:[map[lastTransitionTime:2021-06-03T22:17:30Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-03T22:17:30Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-03T22:17:30Z message:approved in https://github.com/kubernetes/enhancements/pull/747 reason:ApprovedAnnotation status:True type:KubernetesAPIApprovalPolicyConformant]] storedVersions:[v1alpha1]]]}
I0610 03:42:56.041551       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"configmanagement.gke.io/configmanagement":"config-management","configmanagement.gke.io/system":"true","k8s-app":"kubernetes-config-management"},"name":"hierarchyconfigs.configmanagement.gke.io","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}]},"spec":{"group":"configmanagement.gke.io","names":{"kind":"HierarchyConfig","plural":"hierarchyconfigs","singular":"hierarchyconfig"},"scope":"Cluster","versions":[{"name":"v1","schema":{"openAPIV3Schema":{"properties":{"spec":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"status":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"served":true,"storage":true}]}}
] creationTimestamp:2021-06-10T03:16:27Z generation:1 labels:map[configmanagement.gke.io/configmanagement:config-management configmanagement.gke.io/system:true k8s-app:kubernetes-config-management] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:configmanagement.gke.io/configmanagement:map[] f:configmanagement.gke.io/system:map[] f:k8s-app:map[]] f:ownerReferences:map[.:map[] k:{"uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:Go-http-client operation:Update time:2021-06-10T03:16:27Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-10T03:16:27Z]] name:hierarchyconfigs.configmanagement.gke.io ownerReferences:[map[apiVersion:configmanagement.gke.io/v1 blockOwnerDeletion:true controller:true kind:ConfigManagement name:config-management uid:4c9472ce-7740-48ac-927f-2cdf13a6b1ef]] resourceVersion:3673439 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/hierarchyconfigs.configmanagement.gke.io uid:14e999b0-533f-4812-9e1b-7356dc38033b] spec:map[conversion:map[strategy:None] group:configmanagement.gke.io names:map[kind:HierarchyConfig listKind:HierarchyConfigList plural:hierarchyconfigs singular:hierarchyconfig] preserveUnknownFields:false scope:Cluster validation:map[openAPIV3Schema:map[properties:map[spec:map[type:object x-kubernetes-preserve-unknown-fields:true] status:map[type:object x-kubernetes-preserve-unknown-fields:true]] type:object]] version:v1 versions:[map[name:v1 served:true storage:true]]] status:map[acceptedNames:map[kind:HierarchyConfig listKind:HierarchyConfigList plural:hierarchyconfigs singular:hierarchyconfig] conditions:[map[lastTransitionTime:2021-06-10T03:16:27Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-10T03:16:27Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1]]]}
I0610 03:42:56.041864       1 worker.go:92] Worker reconciled "Namespace, /bookstore"
I0610 03:42:56.041914       1 queue.go:180] Removing clean object reference: &{map[apiVersion:v1 kind:Namespace metadata:map[annotations:map[client.lifecycle.config.k8s.io/deletion:detach config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:_namespace_bookstore] creationTimestamp:2021-06-10T03:16:57Z labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io] managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/deletion:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z]] name:bookstore resourceVersion:3673862 selfLink:/api/v1/namespaces/bookstore uid:de6949f9-f42b-49be-b46f-4d76b587872d] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:42:56.042008       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:33:51Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:33:51Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:34:02Z]] name:nginx namespace:bookstore resourceVersion:3681117 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:a2d9e9b1-09b5-47fc-89a4-7a1ba7fb1711] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:34:02Z lastUpdateTime:2021-06-10T03:34:02Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:33:51Z lastUpdateTime:2021-06-10T03:34:02Z message:ReplicaSet "nginx-5d59d67564" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:42:56.042479       1 worker.go:92] Worker reconciled "Deployment.apps, bookstore/nginx"
I0610 03:42:56.042512       1 queue.go:180] Removing clean object reference: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:33:51Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:33:51Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:34:02Z]] name:nginx namespace:bookstore resourceVersion:3681117 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:a2d9e9b1-09b5-47fc-89a4-7a1ba7fb1711] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:34:02Z lastUpdateTime:2021-06-10T03:34:02Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:33:51Z lastUpdateTime:2021-06-10T03:34:02Z message:ReplicaSet "nginx-5d59d67564" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:42:56.042740       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3673863 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema]] storedVersions:[v2]]]}
I0610 03:42:56.043706       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[deployment.kubernetes.io/revision:1 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"admission-webhook","configmanagement.gke.io/arch":"csmr","configmanagement.gke.io/configmanagement":"config-management","configmanagement.gke.io/system":"true","k8s-app":"kubernetes-config-management"},"name":"admission-webhook","namespace":"config-management-system","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}]},"spec":{"minReadySeconds":10,"replicas":2,"selector":{"matchLabels":{"app":"admission-webhook"}},"template":{"metadata":{"labels":{"app":"admission-webhook"}},"spec":{"containers":[{"command":["/admission-webhook"],"image":"gcr.io/config-management-release/admission-webhook:v1.8.0-rc.8","name":"admission-webhook","ports":[{"containerPort":10250,"name":"admission","protocol":"TCP"}],"resources":{"limits":{"cpu":"200m","memory":"100Mi"},"requests":{"cpu":"100m","memory":"20Mi"}},"volumeMounts":[{"mountPath":"/certs","name":"cert","readOnly":true}]}],"serviceAccountName":"admission-webhook","terminationGracePeriodSeconds":10,"volumes":[{"name":"cert","secret":{"defaultMode":420,"secretName":"admission-webhook-cert"}}]}}}}
] creationTimestamp:2021-06-10T03:16:27Z generation:2 labels:map[app:admission-webhook configmanagement.gke.io/arch:csmr configmanagement.gke.io/configmanagement:config-management configmanagement.gke.io/system:true k8s-app:kubernetes-config-management] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:app:map[] f:configmanagement.gke.io/arch:map[] f:configmanagement.gke.io/configmanagement:map[] f:configmanagement.gke.io/system:map[] f:k8s-app:map[]] f:ownerReferences:map[.:map[] k:{"uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:minReadySeconds:map[] f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:app:map[]]] f:strategy:map[f:rollingUpdate:map[.:map[] f:maxSurge:map[] f:maxUnavailable:map[]] f:type:map[]] f:template:map[f:metadata:map[f:labels:map[.:map[] f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"admission-webhook"}:map[.:map[] f:command:map[] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:ports:map[.:map[] k:{"containerPort":10250,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:name:map[] f:protocol:map[]]] f:resources:map[.:map[] f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/certs"}:map[.:map[] f:mountPath:map[] f:name:map[] f:readOnly:map[]]]]] f:dnsPolicy:map[] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[] f:serviceAccount:map[] f:serviceAccountName:map[] f:terminationGracePeriodSeconds:map[] f:volumes:map[.:map[] k:{"name":"cert"}:map[.:map[] f:name:map[] f:secret:map[.:map[] f:defaultMode:map[] f:secretName:map[]]]]]]]] manager:Go-http-client operation:Update time:2021-06-10T03:16:27Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:16:51Z]] name:admission-webhook namespace:config-management-system ownerReferences:[map[apiVersion:configmanagement.gke.io/v1 blockOwnerDeletion:true controller:true kind:ConfigManagement name:config-management uid:4c9472ce-7740-48ac-927f-2cdf13a6b1ef]] resourceVersion:3674736 selfLink:/apis/apps/v1/namespaces/config-management-system/deployments/admission-webhook uid:6065c93c-d61e-43df-8ae2-39e4cd93da4d] spec:map[minReadySeconds:10 progressDeadlineSeconds:600 replicas:0 revisionHistoryLimit:10 selector:map[matchLabels:map[app:admission-webhook]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:admission-webhook]] spec:map[containers:[map[command:[/admission-webhook] image:gcr.io/config-management-release/admission-webhook:v1.8.0-rc.8 imagePullPolicy:IfNotPresent name:admission-webhook ports:[map[containerPort:10250 name:admission protocol:TCP]] resources:map[limits:map[cpu:200m memory:100Mi] requests:map[cpu:100m memory:20Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/certs name:cert readOnly:true]]]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] serviceAccount:admission-webhook serviceAccountName:admission-webhook terminationGracePeriodSeconds:10 volumes:[map[name:cert secret:map[defaultMode:420 secretName:admission-webhook-cert]]]]]] status:map[conditions:[map[lastTransitionTime:2021-06-10T03:16:51Z lastUpdateTime:2021-06-10T03:16:51Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:16:28Z lastUpdateTime:2021-06-10T03:16:51Z message:ReplicaSet "admission-webhook-cdb78dff4" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2]]}
I0610 03:42:56.044201       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{},"labels":{"configmanagement.gke.io/configmanagement":"config-management","configmanagement.gke.io/system":"true","k8s-app":"kubernetes-config-management"},"name":"clusterselectors.configmanagement.gke.io","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}]},"spec":{"group":"configmanagement.gke.io","names":{"kind":"ClusterSelector","plural":"clusterselectors","singular":"clusterselector"},"scope":"Cluster","versions":[{"name":"v1","schema":{"openAPIV3Schema":{"properties":{"spec":{"properties":{"selector":{"type":"object","x-kubernetes-preserve-unknown-fields":true}},"required":["selector"],"type":"object"}},"required":["spec"],"type":"object"}},"served":true,"storage":true}]}}
] creationTimestamp:2021-06-10T03:16:27Z generation:1 labels:map[configmanagement.gke.io/configmanagement:config-management configmanagement.gke.io/system:true k8s-app:kubernetes-config-management] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:configmanagement.gke.io/configmanagement:map[] f:configmanagement.gke.io/system:map[] f:k8s-app:map[]] f:ownerReferences:map[.:map[] k:{"uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:Go-http-client operation:Update time:2021-06-10T03:16:27Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-10T03:16:27Z]] name:clusterselectors.configmanagement.gke.io ownerReferences:[map[apiVersion:configmanagement.gke.io/v1 blockOwnerDeletion:true controller:true kind:ConfigManagement name:config-management uid:4c9472ce-7740-48ac-927f-2cdf13a6b1ef]] resourceVersion:3673437 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/clusterselectors.configmanagement.gke.io uid:6519e642-acaf-4d69-bb19-3deb927de87f] spec:map[conversion:map[strategy:None] group:configmanagement.gke.io names:map[kind:ClusterSelector listKind:ClusterSelectorList plural:clusterselectors singular:clusterselector] preserveUnknownFields:false scope:Cluster validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[selector:map[type:object x-kubernetes-preserve-unknown-fields:true]] required:[selector] type:object]] required:[spec] type:object]] version:v1 versions:[map[name:v1 served:true storage:true]]] status:map[acceptedNames:map[kind:ClusterSelector listKind:ClusterSelectorList plural:clusterselectors singular:clusterselector] conditions:[map[lastTransitionTime:2021-06-10T03:16:27Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-10T03:16:27Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1]]]}
I0610 03:42:56.044387       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[controller-gen.kubebuilder.io/version:v0.2.5 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.2.5"},"creationTimestamp":null,"labels":{"configmanagement.gke.io/arch":"csmr","configmanagement.gke.io/configmanagement":"config-management","k8s-app":"kubernetes-config-management"},"name":"resourcegroups.kpt.dev","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}]},"spec":{"group":"kpt.dev","names":{"kind":"ResourceGroup","listKind":"ResourceGroupList","plural":"resourcegroups","singular":"resourcegroup"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".status.conditions[0].status","name":"Reconciling","type":"string"},{"jsonPath":".status.conditions[1].status","name":"Stalled","type":"string"},{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"ResourceGroup is the Schema for the resourcegroups API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"spec defines the desired state of ResourceGroup","properties":{"descriptor":{"description":"descriptor regroups the information and metadata about a resource group","properties":{"description":{"description":"description is a brief description of a group of resources","type":"string"},"links":{"description":"links are a list of descriptive URLs intended to be used to surface additional information","items":{"properties":{"description":{"description":"description explains the purpose of the link","type":"string"},"url":{"description":"url is the URL of the link","type":"string"}},"required":["description","url"],"type":"object"},"type":"array"},"revision":{"description":"revision is an optional revision for a group of resources","type":"string"},"type":{"description":"type can contain prefix, such as Application/WordPress or Service/Spanner","type":"string"}},"type":"object"},"resources":{"description":"resources contains a list of resources that form the resource group","items":{"description":"each item organizes and stores the identifying information for an object. This struct (as a string) is stored in a grouping object to keep track of sets of applied objects.","properties":{"group":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"},"namespace":{"type":"string"}},"required":["group","kind","name","namespace"],"type":"object"},"type":"array"},"subgroups":{"description":"subgroups contains a list of sub groups that the current group includes.","items":{"description":"Each item organizes and stores the identifying information for a ResourceGroup object. It includes name and namespace.","properties":{"name":{"type":"string"},"namespace":{"type":"string"}},"required":["name","namespace"],"type":"object"},"type":"array"}},"type":"object"},"status":{"description":"status defines the observed state of ResourceGroup","properties":{"conditions":{"description":"conditions lists the conditions of the current status for the group","items":{"properties":{"lastTransitionTime":{"description":"last time the condition transit from one status to another","format":"date-time","type":"string"},"message":{"description":"human-readable message indicating details about last transition","type":"string"},"reason":{"description":"one-word CamelCase reason for the condition’s last transition","type":"string"},"status":{"description":"status of the condition","type":"string"},"type":{"description":"type of the condition","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"observedGeneration":{"description":"observedGeneration is the most recent generation observed. It corresponds to the Object's generation, which is updated on mutation by the API Server. Everytime the controller does a successful reconcile, it sets observedGeneration to match ResourceGroup.metadata.generation.","format":"int64","type":"integer"},"resourceStatuses":{"description":"resourceStatuses lists the status for each resource in the group","items":{"description":"each item contains the status of a given resource uniquely identified by its group, kind, name and namespace.","properties":{"conditions":{"items":{"properties":{"lastTransitionTime":{"description":"last time the condition transit from one status to another","format":"date-time","type":"string"},"message":{"description":"human-readable message indicating details about last transition","type":"string"},"reason":{"description":"one-word CamelCase reason for the condition’s last transition","type":"string"},"status":{"description":"status of the condition","type":"string"},"type":{"description":"type of the condition","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"group":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"},"namespace":{"type":"string"},"status":{"description":"Status describes the status of a resource","type":"string"}},"required":["group","kind","name","namespace","status"],"type":"object"},"type":"array"},"subgroupStatuses":{"description":"subgroupStatuses lists the status for each subgroup.","items":{"description":"Each item contains the status of a given group uniquely identified by its name and namespace.","properties":{"conditions":{"items":{"properties":{"lastTransitionTime":{"description":"last time the condition transit from one status to another","format":"date-time","type":"string"},"message":{"description":"human-readable message indicating details about last transition","type":"string"},"reason":{"description":"one-word CamelCase reason for the condition’s last transition","type":"string"},"status":{"description":"status of the condition","type":"string"},"type":{"description":"type of the condition","type":"string"}},"required":["status","type"],"type":"object"},"type":"array"},"name":{"type":"string"},"namespace":{"type":"string"},"status":{"description":"Status describes the status of a resource","type":"string"}},"required":["name","namespace","status"],"type":"object"},"type":"array"}},"required":["observedGeneration"],"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
] creationTimestamp:2021-06-10T03:16:27Z generation:1 labels:map[configmanagement.gke.io/arch:csmr configmanagement.gke.io/configmanagement:config-management k8s-app:kubernetes-config-management] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:listKind:map[] f:singular:map[]]]] manager:kube-apiserver operation:Update time:2021-06-10T03:16:27Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:controller-gen.kubebuilder.io/version:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:configmanagement.gke.io/arch:map[] f:configmanagement.gke.io/configmanagement:map[] f:k8s-app:map[]] f:ownerReferences:map[.:map[] k:{"uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:versions:map[]] f:status:map[f:acceptedNames:map[f:kind:map[] f:plural:map[]] f:conditions:map[] f:storedVersions:map[]]] manager:Go-http-client operation:Update time:2021-06-10T03:16:33Z]] name:resourcegroups.kpt.dev ownerReferences:[map[apiVersion:configmanagement.gke.io/v1 blockOwnerDeletion:true controller:true kind:ConfigManagement name:config-management uid:4c9472ce-7740-48ac-927f-2cdf13a6b1ef]] resourceVersion:3673622 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/resourcegroups.kpt.dev uid:42823bb5-f5e5-4650-b45d-9bde34d7bc47] spec:map[additionalPrinterColumns:[map[JSONPath:.status.conditions[0].status name:Reconciling type:string] map[JSONPath:.status.conditions[1].status name:Stalled type:string] map[JSONPath:.metadata.creationTimestamp name:Age type:date]] conversion:map[strategy:None] group:kpt.dev names:map[kind:ResourceGroup listKind:ResourceGroupList plural:resourcegroups singular:resourcegroup] preserveUnknownFields:false scope:Namespaced subresources:map[status:map[]] validation:map[openAPIV3Schema:map[description:ResourceGroup is the Schema for the resourcegroups API properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds type:string] metadata:map[type:object] spec:map[description:spec defines the desired state of ResourceGroup properties:map[descriptor:map[description:descriptor regroups the information and metadata about a resource group properties:map[description:map[description:description is a brief description of a group of resources type:string] links:map[description:links are a list of descriptive URLs intended to be used to surface additional information items:map[properties:map[description:map[description:description explains the purpose of the link type:string] url:map[description:url is the URL of the link type:string]] required:[description url] type:object] type:array] revision:map[description:revision is an optional revision for a group of resources type:string] type:map[description:type can contain prefix, such as Application/WordPress or Service/Spanner type:string]] type:object] resources:map[description:resources contains a list of resources that form the resource group items:map[description:each item organizes and stores the identifying information for an object. This struct (as a string) is stored in a grouping object to keep track of sets of applied objects. properties:map[group:map[type:string] kind:map[type:string] name:map[type:string] namespace:map[type:string]] required:[group kind name namespace] type:object] type:array] subgroups:map[description:subgroups contains a list of sub groups that the current group includes. items:map[description:Each item organizes and stores the identifying information for a ResourceGroup object. It includes name and namespace. properties:map[name:map[type:string] namespace:map[type:string]] required:[name namespace] type:object] type:array]] type:object] status:map[description:status defines the observed state of ResourceGroup properties:map[conditions:map[description:conditions lists the conditions of the current status for the group items:map[properties:map[lastTransitionTime:map[description:last time the condition transit from one status to another format:date-time type:string] message:map[description:human-readable message indicating details about last transition type:string] reason:map[description:one-word CamelCase reason for the condition’s last transition type:string] status:map[description:status of the condition type:string] type:map[description:type of the condition type:string]] required:[status type] type:object] type:array] observedGeneration:map[description:observedGeneration is the most recent generation observed. It corresponds to the Object's generation, which is updated on mutation by the API Server. Everytime the controller does a successful reconcile, it sets observedGeneration to match ResourceGroup.metadata.generation. format:int64 type:integer] resourceStatuses:map[description:resourceStatuses lists the status for each resource in the group items:map[description:each item contains the status of a given resource uniquely identified by its group, kind, name and namespace. properties:map[conditions:map[items:map[properties:map[lastTransitionTime:map[description:last time the condition transit from one status to another format:date-time type:string] message:map[description:human-readable message indicating details about last transition type:string] reason:map[description:one-word CamelCase reason for the condition’s last transition type:string] status:map[description:status of the condition type:string] type:map[description:type of the condition type:string]] required:[status type] type:object] type:array] group:map[type:string] kind:map[type:string] name:map[type:string] namespace:map[type:string] status:map[description:Status describes the status of a resource type:string]] required:[group kind name namespace status] type:object] type:array] subgroupStatuses:map[description:subgroupStatuses lists the status for each subgroup. items:map[description:Each item contains the status of a given group uniquely identified by its name and namespace. properties:map[conditions:map[items:map[properties:map[lastTransitionTime:map[description:last time the condition transit from one status to another format:date-time type:string] message:map[description:human-readable message indicating details about last transition type:string] reason:map[description:one-word CamelCase reason for the condition’s last transition type:string] status:map[description:status of the condition type:string] type:map[description:type of the condition type:string]] required:[status type] type:object] type:array] name:map[type:string] namespace:map[type:string] status:map[description:Status describes the status of a resource type:string]] required:[name namespace status] type:object] type:array]] required:[observedGeneration] type:object]] type:object]] version:v1alpha1 versions:[map[name:v1alpha1 served:true storage:true]]] status:map[acceptedNames:map[kind:ResourceGroup listKind:ResourceGroupList plural:resourcegroups singular:resourcegroup] conditions:[map[lastTransitionTime:2021-06-10T03:16:27Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-10T03:16:27Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1alpha1]]]}
I0610 03:42:56.046413       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[controller-gen.kubebuilder.io/version:v0.2.5 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.2.5"},"labels":{"configmanagement.gke.io/arch":"csmr","configmanagement.gke.io/configmanagement":"config-management","configmanagement.gke.io/system":"true","k8s-app":"kubernetes-config-management"},"name":"rootsyncs.configsync.gke.io","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}]},"spec":{"group":"configsync.gke.io","names":{"kind":"RootSync","listKind":"RootSyncList","plural":"rootsyncs","singular":"rootsync"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".status.source.commit","name":"SourceCommit","type":"string"},{"jsonPath":".status.sync.commit","name":"SyncCommit","type":"string"}],"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"RootSync is the Schema for the rootsyncs API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"RootSyncSpec defines the desired state of RootSync","properties":{"git":{"description":"git contains configuration specific to importing resources from a Git repo.","properties":{"auth":{"description":"auth is the type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, or none. Required. The validation of this is case-sensitive. Required.","pattern":"^(ssh|cookiefile|gcenode|gcpserviceaccount|token|none)$","type":"string"},"branch":{"description":"branch is the git branch to checkout. Default: \"master\".","type":"string"},"dir":{"description":"dir is the absolute path of the directory that contains the local config.  Default: the root directory of the repo.","type":"string"},"gcpServiceAccountEmail":{"description":"gcpServiceAccountEmail specifies the GCP service account used to annotate the RootSync controller Kubernetes Service Account. Note: The field is used when spec.git.auth: gcpserviceaccount.","type":"string"},"period":{"description":"period is the time duration in seconds between consecutive syncs.  Default: 15 seconds. Note to developers that customers specify this value using string (https://golang.org/pkg/time/#Duration.String) like \"3s\" in their Custom Resource YAML. However, time.Duration is at a nanosecond granularity, and it's easy to introduce a bug where it looks like the code is dealing with seconds but its actually nanoseconds (or vice versa).","type":"string"},"proxy":{"description":"proxy is a struct that contains options for configuring access to the Git repo via a proxy. Only has an effect when secretType is one of (\"cookiefile\", \"none\"). Optional.","type":"string"},"repo":{"description":"repo is the git repository URL to sync from. Required.","type":"string"},"revision":{"description":"revision is the git revision (tag, ref or commit) to fetch. Default: \"HEAD\".","type":"string"},"secretRef":{"description":"secretRef is the secret used to connect to the Git source of truth.","properties":{"name":{"description":"name represents the secret name.","type":"string"}},"type":"object"}},"required":["auth","repo"],"type":"object"},"sourceFormat":{"description":"sourceFormat specifies how the repository is formatted. See documentation for specifics of what these options do. \n Must be one of hierarchy, unstructured. Optional. Set to hierarchy if not specified. \n The validation of this is case-sensitive.","pattern":"^(hierarchy|unstructured|)$","type":"string"}},"type":"object"},"status":{"description":"RootSyncStatus defines the observed state of RootSync","type":"object","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}},{"additionalPrinterColumns":[{"jsonPath":".status.source.commit","name":"SourceCommit","type":"string"},{"jsonPath":".status.sync.commit","name":"SyncCommit","type":"string"}],"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"RootSync is the Schema for the rootsyncs API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"RootSyncSpec defines the desired state of RootSync","properties":{"git":{"description":"git contains configuration specific to importing policies from a Git repo.","properties":{"auth":{"description":"auth is the type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, or none. Required. The validation of this is case-sensitive. Required.","pattern":"^(ssh|cookiefile|gcenode|gcpserviceaccount|token|none)$","type":"string"},"branch":{"description":"branch is the git branch to checkout. Default: \"master\".","type":"string"},"dir":{"description":"dir is the absolute path of the directory that contains the local config.  Default: the root directory of the repo.","type":"string"},"gcpServiceAccountEmail":{"description":"gcpServiceAccountEmail specifies the GCP service account used to annotate the RootSync controller Kubernetes Service Account. Note: The field is used when spec.git.auth: gcpserviceaccount.","type":"string"},"period":{"description":"period is the time duration in seconds between consecutive syncs.  Default: 15 seconds. Note to developers that customers specify this value using string (https://golang.org/pkg/time/#Duration.String) like \"3s\" in their Custom Resource YAML. However, time.Duration is at a nanosecond granularity, and it's easy to introduce a bug where it looks like the code is dealing with seconds but its actually nanoseconds (or vice versa).","type":"string"},"proxy":{"description":"proxy is a struct that contains options for configuring access to the Git repo via a proxy. Only has an effect when secretType is one of (\"cookiefile\", \"none\"). Optional.","type":"string"},"repo":{"description":"repo is the git repository URL to sync from. Required.","type":"string"},"revision":{"description":"revision is the git revision (tag, ref or commit) to fetch. Default: \"HEAD\".","type":"string"},"secretRef":{"description":"secretRef is the secret used to connect to the Git source of truth.","properties":{"name":{"description":"name represents the secret name.","type":"string"}},"type":"object"}},"required":["auth","repo"],"type":"object"},"sourceFormat":{"description":"sourceFormat specifies how the repository is formatted. See documentation for specifics of what these options do. \n Must be one of hierarchy, unstructured. Optional. Set to hierarchy if not specified. \n The validation of this is case-sensitive.","pattern":"^(hierarchy|unstructured|)$","type":"string"}},"type":"object"},"status":{"description":"RootSyncStatus defines the observed state of RootSync","type":"object","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
] creationTimestamp:2021-06-10T03:16:27Z generation:1 labels:map[configmanagement.gke.io/arch:csmr configmanagement.gke.io/configmanagement:config-management configmanagement.gke.io/system:true k8s-app:kubernetes-config-management] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:controller-gen.kubebuilder.io/version:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:configmanagement.gke.io/arch:map[] f:configmanagement.gke.io/configmanagement:map[] f:configmanagement.gke.io/system:map[] f:k8s-app:map[]] f:ownerReferences:map[.:map[] k:{"uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:Go-http-client operation:Update time:2021-06-10T03:16:27Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-10T03:16:27Z]] name:rootsyncs.configsync.gke.io ownerReferences:[map[apiVersion:configmanagement.gke.io/v1 blockOwnerDeletion:true controller:true kind:ConfigManagement name:config-management uid:4c9472ce-7740-48ac-927f-2cdf13a6b1ef]] resourceVersion:3673457 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/rootsyncs.configsync.gke.io uid:8ea2802c-7464-4948-8b6e-73332b0321e7] spec:map[additionalPrinterColumns:[map[JSONPath:.status.source.commit name:SourceCommit type:string] map[JSONPath:.status.sync.commit name:SyncCommit type:string]] conversion:map[strategy:None] group:configsync.gke.io names:map[kind:RootSync listKind:RootSyncList plural:rootsyncs singular:rootsync] preserveUnknownFields:false scope:Namespaced subresources:map[status:map[]] version:v1alpha1 versions:[map[name:v1alpha1 schema:map[openAPIV3Schema:map[description:RootSync is the Schema for the rootsyncs API properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds type:string] metadata:map[type:object] spec:map[description:RootSyncSpec defines the desired state of RootSync properties:map[git:map[description:git contains configuration specific to importing resources from a Git repo. properties:map[auth:map[description:auth is the type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, or none. Required. The validation of this is case-sensitive. Required. pattern:^(ssh|cookiefile|gcenode|gcpserviceaccount|token|none)$ type:string] branch:map[description:branch is the git branch to checkout. Default: "master". type:string] dir:map[description:dir is the absolute path of the directory that contains the local config.  Default: the root directory of the repo. type:string] gcpServiceAccountEmail:map[description:gcpServiceAccountEmail specifies the GCP service account used to annotate the RootSync controller Kubernetes Service Account. Note: The field is used when spec.git.auth: gcpserviceaccount. type:string] period:map[description:period is the time duration in seconds between consecutive syncs.  Default: 15 seconds. Note to developers that customers specify this value using string (https://golang.org/pkg/time/#Duration.String) like "3s" in their Custom Resource YAML. However, time.Duration is at a nanosecond granularity, and it's easy to introduce a bug where it looks like the code is dealing with seconds but its actually nanoseconds (or vice versa). type:string] proxy:map[description:proxy is a struct that contains options for configuring access to the Git repo via a proxy. Only has an effect when secretType is one of ("cookiefile", "none"). Optional. type:string] repo:map[description:repo is the git repository URL to sync from. Required. type:string] revision:map[description:revision is the git revision (tag, ref or commit) to fetch. Default: "HEAD". type:string] secretRef:map[description:secretRef is the secret used to connect to the Git source of truth. properties:map[name:map[description:name represents the secret name. type:string]] type:object]] required:[auth repo] type:object] sourceFormat:map[description:sourceFormat specifies how the repository is formatted. See documentation for specifics of what these options do. 
 Must be one of hierarchy, unstructured. Optional. Set to hierarchy if not specified. 
 The validation of this is case-sensitive. pattern:^(hierarchy|unstructured|)$ type:string]] type:object] status:map[description:RootSyncStatus defines the observed state of RootSync type:object x-kubernetes-preserve-unknown-fields:true]] type:object]] served:true storage:false] map[name:v1beta1 schema:map[openAPIV3Schema:map[description:RootSync is the Schema for the rootsyncs API properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds type:string] metadata:map[type:object] spec:map[description:RootSyncSpec defines the desired state of RootSync properties:map[git:map[description:git contains configuration specific to importing policies from a Git repo. properties:map[auth:map[description:auth is the type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, or none. Required. The validation of this is case-sensitive. Required. pattern:^(ssh|cookiefile|gcenode|gcpserviceaccount|token|none)$ type:string] branch:map[description:branch is the git branch to checkout. Default: "master". type:string] dir:map[description:dir is the absolute path of the directory that contains the local config.  Default: the root directory of the repo. type:string] gcpServiceAccountEmail:map[description:gcpServiceAccountEmail specifies the GCP service account used to annotate the RootSync controller Kubernetes Service Account. Note: The field is used when spec.git.auth: gcpserviceaccount. type:string] period:map[description:period is the time duration in seconds between consecutive syncs.  Default: 15 seconds. Note to developers that customers specify this value using string (https://golang.org/pkg/time/#Duration.String) like "3s" in their Custom Resource YAML. However, time.Duration is at a nanosecond granularity, and it's easy to introduce a bug where it looks like the code is dealing with seconds but its actually nanoseconds (or vice versa). type:string] proxy:map[description:proxy is a struct that contains options for configuring access to the Git repo via a proxy. Only has an effect when secretType is one of ("cookiefile", "none"). Optional. type:string] repo:map[description:repo is the git repository URL to sync from. Required. type:string] revision:map[description:revision is the git revision (tag, ref or commit) to fetch. Default: "HEAD". type:string] secretRef:map[description:secretRef is the secret used to connect to the Git source of truth. properties:map[name:map[description:name represents the secret name. type:string]] type:object]] required:[auth repo] type:object] sourceFormat:map[description:sourceFormat specifies how the repository is formatted. See documentation for specifics of what these options do. 
 Must be one of hierarchy, unstructured. Optional. Set to hierarchy if not specified. 
 The validation of this is case-sensitive. pattern:^(hierarchy|unstructured|)$ type:string]] type:object] status:map[description:RootSyncStatus defines the observed state of RootSync type:object x-kubernetes-preserve-unknown-fields:true]] type:object]] served:true storage:true]]] status:map[acceptedNames:map[kind:RootSync listKind:RootSyncList plural:rootsyncs singular:rootsync] conditions:[map[lastTransitionTime:2021-06-10T03:16:27Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-10T03:16:27Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1beta1]]]}
I0610 03:42:56.046264       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[deployment.kubernetes.io/revision:1 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true"},"name":"kube-dns","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"kube-dns"}},"strategy":{"rollingUpdate":{"maxSurge":"10%","maxUnavailable":0}},"template":{"metadata":{"annotations":{"scheduler.alpha.kubernetes.io/critical-pod":"","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"kube-dns"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["kube-dns"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"args":["--domain=cluster.local.","--dns-port=10053","--config-dir=/kube-dns-config","--v=2"],"env":[{"name":"PROMETHEUS_PORT","value":"10055"}],"image":"gke.gcr.io/k8s-dns-kube-dns-amd64:1.17.3-gke.0","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthcheck/kubedns","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"kubedns","ports":[{"containerPort":10053,"name":"dns-local","protocol":"UDP"},{"containerPort":10053,"name":"dns-tcp-local","protocol":"TCP"},{"containerPort":10055,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readiness","port":8081,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":5},"resources":{"limits":{"memory":"210Mi"},"requests":{"cpu":"100m","memory":"70Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":1001,"runAsUser":1001},"volumeMounts":[{"mountPath":"/kube-dns-config","name":"kube-dns-config"}]},{"args":["-v=2","-logtostderr","-configDir=/etc/k8s/dns/dnsmasq-nanny","-restartDnsmasq=true","--","-k","--cache-size=1000","--no-negcache","--dns-forward-max=1500","--log-facility=-","--server=/cluster.local/127.0.0.1#10053","--server=/in-addr.arpa/127.0.0.1#10053","--server=/ip6.arpa/127.0.0.1#10053"],"image":"gke.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.17.3-gke.0","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthcheck/dnsmasq","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"dnsmasq","ports":[{"containerPort":53,"name":"dns","protocol":"UDP"},{"containerPort":53,"name":"dns-tcp","protocol":"TCP"}],"resources":{"requests":{"cpu":"150m","memory":"20Mi"}},"securityContext":{"capabilities":{"add":["NET_BIND_SERVICE","SETGID"],"drop":["all"]}},"volumeMounts":[{"mountPath":"/etc/k8s/dns/dnsmasq-nanny","name":"kube-dns-config"}]},{"args":["--v=2","--logtostderr","--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV","--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"],"image":"gke.gcr.io/k8s-dns-sidecar-amd64:1.17.3-gke.0","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/metrics","port":10054,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"sidecar","ports":[{"containerPort":10054,"name":"metrics","protocol":"TCP"}],"resources":{"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":1001,"runAsUser":1001}},{"command":["/monitor","--source=kubedns:http://localhost:10054?whitelisted=probe_kubedns_latency_ms,probe_kubedns_errors,dnsmasq_misses,dnsmasq_hits","--stackdriver-prefix=container.googleapis.com/internal/addons","--api-override=https://monitoring.googleapis.com/","--pod-id=$(POD_NAME)","--namespace-id=$(POD_NAMESPACE)","--v=2"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"gke.gcr.io/prometheus-to-sd:v0.4.2","name":"prometheus-to-sd","securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":1001,"runAsUser":1001}}],"dnsPolicy":"Default","nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-cluster-critical","securityContext":{"fsGroup":65534,"supplementalGroups":[65534]},"serviceAccountName":"kube-dns","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"key":"components.gke.io/gke-managed-components","operator":"Exists"}],"volumes":[{"configMap":{"name":"kube-dns","optional":true},"name":"kube-dns-config"}]}}}}
] creationTimestamp:2021-06-03T22:17:23Z generation:2 labels:map[addonmanager.kubernetes.io/mode:Reconcile k8s-app:kube-dns kubernetes.io/cluster-service:true] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:addonmanager.kubernetes.io/mode:map[] f:k8s-app:map[] f:kubernetes.io/cluster-service:map[]]] f:spec:map[f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:k8s-app:map[]]] f:strategy:map[f:rollingUpdate:map[.:map[] f:maxSurge:map[] f:maxUnavailable:map[]] f:type:map[]] f:template:map[f:metadata:map[f:annotations:map[.:map[] f:scheduler.alpha.kubernetes.io/critical-pod:map[] f:seccomp.security.alpha.kubernetes.io/pod:map[]] f:labels:map[.:map[] f:k8s-app:map[]]] f:spec:map[f:affinity:map[.:map[] f:podAntiAffinity:map[.:map[] f:preferredDuringSchedulingIgnoredDuringExecution:map[]]] f:containers:map[k:{"name":"dnsmasq"}:map[.:map[] f:args:map[] f:image:map[] f:imagePullPolicy:map[] f:livenessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:initialDelaySeconds:map[] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:name:map[] f:ports:map[.:map[] k:{"containerPort":53,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:name:map[] f:protocol:map[]] k:{"containerPort":53,"protocol":"UDP"}:map[.:map[] f:containerPort:map[] f:name:map[] f:protocol:map[]]] f:resources:map[.:map[] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:securityContext:map[.:map[] f:capabilities:map[.:map[] f:add:map[] f:drop:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/etc/k8s/dns/dnsmasq-nanny"}:map[.:map[] f:mountPath:map[] f:name:map[]]]] k:{"name":"kubedns"}:map[.:map[] f:args:map[] f:env:map[.:map[] k:{"name":"PROMETHEUS_PORT"}:map[.:map[] f:name:map[] f:value:map[]]] f:image:map[] f:imagePullPolicy:map[] f:livenessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:initialDelaySeconds:map[] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:name:map[] f:ports:map[.:map[] k:{"containerPort":10053,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:name:map[] f:protocol:map[]] k:{"containerPort":10053,"protocol":"UDP"}:map[.:map[] f:containerPort:map[] f:name:map[] f:protocol:map[]] k:{"containerPort":10055,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:name:map[] f:protocol:map[]]] f:readinessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:initialDelaySeconds:map[] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:resources:map[.:map[] f:limits:map[.:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:securityContext:map[.:map[] f:allowPrivilegeEscalation:map[] f:readOnlyRootFilesystem:map[] f:runAsGroup:map[] f:runAsUser:map[]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/kube-dns-config"}:map[.:map[] f:mountPath:map[] f:name:map[]]]] k:{"name":"prometheus-to-sd"}:map[.:map[] f:command:map[] f:env:map[.:map[] k:{"name":"POD_NAME"}:map[.:map[] f:name:map[] f:valueFrom:map[.:map[] f:fieldRef:map[.:map[] f:apiVersion:map[] f:fieldPath:map[]]]] k:{"name":"POD_NAMESPACE"}:map[.:map[] f:name:map[] f:valueFrom:map[.:map[] f:fieldRef:map[.:map[] f:apiVersion:map[] f:fieldPath:map[]]]]] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[] f:securityContext:map[.:map[] f:allowPrivilegeEscalation:map[] f:readOnlyRootFilesystem:map[] f:runAsGroup:map[] f:runAsUser:map[]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[]] k:{"name":"sidecar"}:map[.:map[] f:args:map[] f:image:map[] f:imagePullPolicy:map[] f:livenessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:initialDelaySeconds:map[] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:name:map[] f:ports:map[.:map[] k:{"containerPort":10054,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:name:map[] f:protocol:map[]]] f:resources:map[.:map[] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:securityContext:map[.:map[] f:allowPrivilegeEscalation:map[] f:readOnlyRootFilesystem:map[] f:runAsGroup:map[] f:runAsUser:map[]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[]]] f:dnsPolicy:map[] f:nodeSelector:map[.:map[] f:kubernetes.io/os:map[]] f:priorityClassName:map[] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[.:map[] f:fsGroup:map[] f:supplementalGroups:map[]] f:serviceAccount:map[] f:serviceAccountName:map[] f:terminationGracePeriodSeconds:map[] f:tolerations:map[] f:volumes:map[.:map[] k:{"name":"kube-dns-config"}:map[.:map[] f:configMap:map[.:map[] f:defaultMode:map[] f:name:map[] f:optional:map[]] f:name:map[]]]]]]] manager:kubectl operation:Update time:2021-06-03T22:17:23Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-03T22:18:24Z]] name:kube-dns namespace:kube-system resourceVersion:1170 selfLink:/apis/apps/v1/namespaces/kube-system/deployments/kube-dns uid:4e7515f8-d263-4d76-82b3-abe6a468e378] spec:map[progressDeadlineSeconds:600 replicas:2 revisionHistoryLimit:10 selector:map[matchLabels:map[k8s-app:kube-dns]] strategy:map[rollingUpdate:map[maxSurge:10% maxUnavailable:0] type:RollingUpdate] template:map[metadata:map[annotations:map[scheduler.alpha.kubernetes.io/critical-pod: seccomp.security.alpha.kubernetes.io/pod:runtime/default] creationTimestamp:<nil> labels:map[k8s-app:kube-dns]] spec:map[affinity:map[podAntiAffinity:map[preferredDuringSchedulingIgnoredDuringExecution:[map[podAffinityTerm:map[labelSelector:map[matchExpressions:[map[key:k8s-app operator:In values:[kube-dns]]]] topologyKey:kubernetes.io/hostname] weight:100]]]] containers:[map[args:[--domain=cluster.local. --dns-port=10053 --config-dir=/kube-dns-config --v=2] env:[map[name:PROMETHEUS_PORT value:10055]] image:gke.gcr.io/k8s-dns-kube-dns-amd64:1.17.3-gke.0 imagePullPolicy:IfNotPresent livenessProbe:map[failureThreshold:5 httpGet:map[path:/healthcheck/kubedns port:10054 scheme:HTTP] initialDelaySeconds:60 periodSeconds:10 successThreshold:1 timeoutSeconds:5] name:kubedns ports:[map[containerPort:10053 name:dns-local protocol:UDP] map[containerPort:10053 name:dns-tcp-local protocol:TCP] map[containerPort:10055 name:metrics protocol:TCP]] readinessProbe:map[failureThreshold:3 httpGet:map[path:/readiness port:8081 scheme:HTTP] initialDelaySeconds:3 periodSeconds:10 successThreshold:1 timeoutSeconds:5] resources:map[limits:map[memory:210Mi] requests:map[cpu:100m memory:70Mi]] securityContext:map[allowPrivilegeEscalation:false readOnlyRootFilesystem:true runAsGroup:1001 runAsUser:1001] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/kube-dns-config name:kube-dns-config]]] map[args:[-v=2 -logtostderr -configDir=/etc/k8s/dns/dnsmasq-nanny -restartDnsmasq=true -- -k --cache-size=1000 --no-negcache --dns-forward-max=1500 --log-facility=- --server=/cluster.local/127.0.0.1#10053 --server=/in-addr.arpa/127.0.0.1#10053 --server=/ip6.arpa/127.0.0.1#10053] image:gke.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.17.3-gke.0 imagePullPolicy:IfNotPresent livenessProbe:map[failureThreshold:5 httpGet:map[path:/healthcheck/dnsmasq port:10054 scheme:HTTP] initialDelaySeconds:60 periodSeconds:10 successThreshold:1 timeoutSeconds:5] name:dnsmasq ports:[map[containerPort:53 name:dns protocol:UDP] map[containerPort:53 name:dns-tcp protocol:TCP]] resources:map[requests:map[cpu:150m memory:20Mi]] securityContext:map[capabilities:map[add:[NET_BIND_SERVICE SETGID] drop:[all]]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/etc/k8s/dns/dnsmasq-nanny name:kube-dns-config]]] map[args:[--v=2 --logtostderr --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV] image:gke.gcr.io/k8s-dns-sidecar-amd64:1.17.3-gke.0 imagePullPolicy:IfNotPresent livenessProbe:map[failureThreshold:5 httpGet:map[path:/metrics port:10054 scheme:HTTP] initialDelaySeconds:60 periodSeconds:10 successThreshold:1 timeoutSeconds:5] name:sidecar ports:[map[containerPort:10054 name:metrics protocol:TCP]] resources:map[requests:map[cpu:10m memory:20Mi]] securityContext:map[allowPrivilegeEscalation:false readOnlyRootFilesystem:true runAsGroup:1001 runAsUser:1001] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File] map[command:[/monitor --source=kubedns:http://localhost:10054?whitelisted=probe_kubedns_latency_ms,probe_kubedns_errors,dnsmasq_misses,dnsmasq_hits --stackdriver-prefix=container.googleapis.com/internal/addons --api-override=https://monitoring.googleapis.com/ --pod-id=$(POD_NAME) --namespace-id=$(POD_NAMESPACE) --v=2] env:[map[name:POD_NAME valueFrom:map[fieldRef:map[apiVersion:v1 fieldPath:metadata.name]]] map[name:POD_NAMESPACE valueFrom:map[fieldRef:map[apiVersion:v1 fieldPath:metadata.namespace]]]] image:gke.gcr.io/prometheus-to-sd:v0.4.2 imagePullPolicy:IfNotPresent name:prometheus-to-sd resources:map[] securityContext:map[allowPrivilegeEscalation:false readOnlyRootFilesystem:true runAsGroup:1001 runAsUser:1001] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:Default nodeSelector:map[kubernetes.io/os:linux] priorityClassName:system-cluster-critical restartPolicy:Always schedulerName:default-scheduler securityContext:map[fsGroup:65534 supplementalGroups:[65534]] serviceAccount:kube-dns serviceAccountName:kube-dns terminationGracePeriodSeconds:30 tolerations:[map[key:CriticalAddonsOnly operator:Exists] map[key:components.gke.io/gke-managed-components operator:Exists]] volumes:[map[configMap:map[defaultMode:420 name:kube-dns optional:true] name:kube-dns-config]]]]] status:map[availableReplicas:2 conditions:[map[lastTransitionTime:2021-06-03T22:18:24Z lastUpdateTime:2021-06-03T22:18:24Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-03T22:17:23Z lastUpdateTime:2021-06-03T22:18:24Z message:ReplicaSet "kube-dns-6c7b8dc9f9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:2 replicas:2 updatedReplicas:2]]}
I0610 03:42:56.046685       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[creationTimestamp:2021-06-03T22:17:38Z generation:1 managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:preserveUnknownFields:map[] f:scope:map[] f:validation:map[.:map[] f:openAPIV3Schema:map[.:map[] f:properties:map[.:map[] f:apiVersion:map[.:map[] f:description:map[] f:type:map[]] f:kind:map[.:map[] f:description:map[] f:type:map[]] f:metadata:map[.:map[] f:type:map[]] f:spec:map[.:map[] f:description:map[] f:properties:map[.:map[] f:redirectToHttps:map[.:map[] f:description:map[] f:properties:map[.:map[] f:enabled:map[.:map[] f:type:map[]] f:responseCodeName:map[.:map[] f:description:map[] f:type:map[]]] f:required:map[] f:type:map[]] f:sslPolicy:map[.:map[] f:type:map[]]] f:type:map[]] f:status:map[.:map[] f:type:map[]]] f:type:map[]]] f:version:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:glbc operation:Update time:2021-06-03T22:17:38Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-03T22:17:38Z]] name:frontendconfigs.networking.gke.io resourceVersion:744 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/frontendconfigs.networking.gke.io uid:d69d3aa0-2e7d-40e0-a13f-0147308ba0c6] spec:map[conversion:map[strategy:None] group:networking.gke.io names:map[kind:FrontendConfig listKind:FrontendConfigList plural:frontendconfigs singular:frontendconfig] preserveUnknownFields:false scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds type:string] metadata:map[type:object] spec:map[description:FrontendConfigSpec is the spec for a FrontendConfig resource properties:map[redirectToHttps:map[description:HttpsRedirectConfig representing the configuration of Https redirects properties:map[enabled:map[type:boolean] responseCodeName:map[description:String representing the HTTP response code Options are MOVED_PERMANENTLY_DEFAULT, FOUND, TEMPORARY_REDIRECT, or PERMANENT_REDIRECT type:string]] required:[enabled] type:object] sslPolicy:map[type:string]] type:object] status:map[type:object]] type:object]] version:v1beta1 versions:[map[name:v1beta1 served:true storage:true]]] status:map[acceptedNames:map[kind:FrontendConfig listKind:FrontendConfigList plural:frontendconfigs singular:frontendconfig] conditions:[map[lastTransitionTime:2021-06-03T22:17:38Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-03T22:17:38Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1beta1]]]}
I0610 03:42:56.048095       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[controller-gen.kubebuilder.io/version:v0.2.5 kubectl.kubernetes.io/last-applied-configuration:{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.2.5"},"labels":{"configmanagement.gke.io/arch":"csmr","configmanagement.gke.io/configmanagement":"config-management","configmanagement.gke.io/system":"true","k8s-app":"kubernetes-config-management"},"name":"reposyncs.configsync.gke.io","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}]},"spec":{"group":"configsync.gke.io","names":{"kind":"RepoSync","listKind":"RepoSyncList","plural":"reposyncs","singular":"reposync"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".status.source.commit","name":"SourceCommit","type":"string"},{"jsonPath":".status.sync.commit","name":"SyncCommit","type":"string"}],"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"RepoSync is the Schema for the reposyncs API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"RepoSyncSpec defines the desired state of a RepoSync.","properties":{"git":{"description":"git contains configuration specific to importing policies from a Git repo.","properties":{"auth":{"description":"auth is the type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, or none. Required. The validation of this is case-sensitive. Required.","pattern":"^(ssh|cookiefile|gcenode|gcpserviceaccount|token|none)$","type":"string"},"branch":{"description":"branch is the git branch to checkout. Default: \"master\".","type":"string"},"dir":{"description":"dir is the absolute path of the directory that contains the local config.  Default: the root directory of the repo.","type":"string"},"gcpServiceAccountEmail":{"description":"gcpServiceAccountEmail specifies the GCP service account used to annotate the RepoSync controller Kubernetes Service Account. Note: The field is used when spec.git.auth: gcpserviceaccount.","type":"string"},"period":{"description":"period is the time duration in seconds between consecutive syncs.  Default: 15 seconds. Note to developers that customers specify this value using string (https://golang.org/pkg/time/#Duration.String) like \"3s\" in their Custom Resource YAML. However, time.Duration is at a nanosecond granularity, and it's easy to introduce a bug where it looks like the code is dealing with seconds but its actually nanoseconds (or vice versa).","type":"string"},"proxy":{"description":"proxy is a struct that contains options for configuring access to the Git repo via a proxy. Only has an effect when secretType is one of (\"cookiefile\", \"none\"). Optional.","type":"string"},"repo":{"description":"repo is the git repository URL to sync from. Required.","type":"string"},"revision":{"description":"revision is the git revision (tag, ref or commit) to fetch. Default: \"HEAD\".","type":"string"},"secretRef":{"description":"secretRef is the secret used to connect to the Git source of truth.","properties":{"name":{"description":"name represents the secret name.","type":"string"}},"type":"object"}},"required":["auth","repo"],"type":"object"},"sourceFormat":{"description":"sourceFormat specifies how the repository is formatted. See documentation for specifics of what these options do. \n Must be unstructured. Optional. Set to unstructured if not specified. \n The validation of this is case-sensitive.","pattern":"^(unstructured|)$","type":"string"}},"type":"object"},"status":{"description":"RepoSyncStatus defines the observed state of a RepoSync.","type":"object","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}},{"additionalPrinterColumns":[{"jsonPath":".status.source.commit","name":"SourceCommit","type":"string"},{"jsonPath":".status.sync.commit","name":"SyncCommit","type":"string"}],"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"RepoSync is the Schema for the reposyncs API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"RepoSyncSpec defines the desired state of a RepoSync.","properties":{"git":{"description":"git contains configuration specific to importing policies from a Git repo.","properties":{"auth":{"description":"auth is the type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, or none. Required. The validation of this is case-sensitive. Required.","pattern":"^(ssh|cookiefile|gcenode|gcpserviceaccount|token|none)$","type":"string"},"branch":{"description":"branch is the git branch to checkout. Default: \"master\".","type":"string"},"dir":{"description":"dir is the absolute path of the directory that contains the local config.  Default: the root directory of the repo.","type":"string"},"gcpServiceAccountEmail":{"description":"gcpServiceAccountEmail specifies the GCP service account used to annotate the RepoSync controller Kubernetes Service Account. Note: The field is used when spec.git.auth: gcpserviceaccount.","type":"string"},"period":{"description":"period is the time duration in seconds between consecutive syncs.  Default: 15 seconds. Note to developers that customers specify this value using string (https://golang.org/pkg/time/#Duration.String) like \"3s\" in their Custom Resource YAML. However, time.Duration is at a nanosecond granularity, and it's easy to introduce a bug where it looks like the code is dealing with seconds but its actually nanoseconds (or vice versa).","type":"string"},"proxy":{"description":"proxy is a struct that contains options for configuring access to the Git repo via a proxy. Only has an effect when secretType is one of (\"cookiefile\", \"none\"). Optional.","type":"string"},"repo":{"description":"repo is the git repository URL to sync from. Required.","type":"string"},"revision":{"description":"revision is the git revision (tag, ref or commit) to fetch. Default: \"HEAD\".","type":"string"},"secretRef":{"description":"secretRef is the secret used to connect to the Git source of truth.","properties":{"name":{"description":"name represents the secret name.","type":"string"}},"type":"object"}},"required":["auth","repo"],"type":"object"},"sourceFormat":{"description":"sourceFormat specifies how the repository is formatted. See documentation for specifics of what these options do. \n Must be unstructured. Optional. Set to unstructured if not specified. \n The validation of this is case-sensitive.","pattern":"^(unstructured|)$","type":"string"}},"type":"object"},"status":{"description":"RepoSyncStatus defines the observed state of a RepoSync.","type":"object","x-kubernetes-preserve-unknown-fields":true}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
] creationTimestamp:2021-06-10T03:16:27Z generation:1 labels:map[configmanagement.gke.io/arch:csmr configmanagement.gke.io/configmanagement:config-management configmanagement.gke.io/system:true k8s-app:kubernetes-config-management] managedFields:[map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:controller-gen.kubebuilder.io/version:map[] f:kubectl.kubernetes.io/last-applied-configuration:map[]] f:labels:map[.:map[] f:configmanagement.gke.io/arch:map[] f:configmanagement.gke.io/configmanagement:map[] f:configmanagement.gke.io/system:map[] f:k8s-app:map[]] f:ownerReferences:map[.:map[] k:{"uid":"4c9472ce-7740-48ac-927f-2cdf13a6b1ef"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:conversion:map[.:map[] f:strategy:map[]] f:group:map[] f:names:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:versions:map[]] f:status:map[f:storedVersions:map[]]] manager:Go-http-client operation:Update time:2021-06-10T03:16:27Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-10T03:16:27Z]] name:reposyncs.configsync.gke.io ownerReferences:[map[apiVersion:configmanagement.gke.io/v1 blockOwnerDeletion:true controller:true kind:ConfigManagement name:config-management uid:4c9472ce-7740-48ac-927f-2cdf13a6b1ef]] resourceVersion:3673448 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/reposyncs.configsync.gke.io uid:dbd071fe-c6d2-4668-9b85-e252dbbc7154] spec:map[additionalPrinterColumns:[map[JSONPath:.status.source.commit name:SourceCommit type:string] map[JSONPath:.status.sync.commit name:SyncCommit type:string]] conversion:map[strategy:None] group:configsync.gke.io names:map[kind:RepoSync listKind:RepoSyncList plural:reposyncs singular:reposync] preserveUnknownFields:false scope:Namespaced subresources:map[status:map[]] validation:map[openAPIV3Schema:map[description:RepoSync is the Schema for the reposyncs API properties:map[apiVersion:map[description:APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources type:string] kind:map[description:Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds type:string] metadata:map[type:object] spec:map[description:RepoSyncSpec defines the desired state of a RepoSync. properties:map[git:map[description:git contains configuration specific to importing policies from a Git repo. properties:map[auth:map[description:auth is the type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, or none. Required. The validation of this is case-sensitive. Required. pattern:^(ssh|cookiefile|gcenode|gcpserviceaccount|token|none)$ type:string] branch:map[description:branch is the git branch to checkout. Default: "master". type:string] dir:map[description:dir is the absolute path of the directory that contains the local config.  Default: the root directory of the repo. type:string] gcpServiceAccountEmail:map[description:gcpServiceAccountEmail specifies the GCP service account used to annotate the RepoSync controller Kubernetes Service Account. Note: The field is used when spec.git.auth: gcpserviceaccount. type:string] period:map[description:period is the time duration in seconds between consecutive syncs.  Default: 15 seconds. Note to developers that customers specify this value using string (https://golang.org/pkg/time/#Duration.String) like "3s" in their Custom Resource YAML. However, time.Duration is at a nanosecond granularity, and it's easy to introduce a bug where it looks like the code is dealing with seconds but its actually nanoseconds (or vice versa). type:string] proxy:map[description:proxy is a struct that contains options for configuring access to the Git repo via a proxy. Only has an effect when secretType is one of ("cookiefile", "none"). Optional. type:string] repo:map[description:repo is the git repository URL to sync from. Required. type:string] revision:map[description:revision is the git revision (tag, ref or commit) to fetch. Default: "HEAD". type:string] secretRef:map[description:secretRef is the secret used to connect to the Git source of truth. properties:map[name:map[description:name represents the secret name. type:string]] type:object]] required:[auth repo] type:object] sourceFormat:map[description:sourceFormat specifies how the repository is formatted. See documentation for specifics of what these options do. 
 Must be unstructured. Optional. Set to unstructured if not specified. 
 The validation of this is case-sensitive. pattern:^(unstructured|)$ type:string]] type:object] status:map[description:RepoSyncStatus defines the observed state of a RepoSync. type:object x-kubernetes-preserve-unknown-fields:true]] type:object]] version:v1alpha1 versions:[map[name:v1alpha1 served:true storage:false] map[name:v1beta1 served:true storage:true]]] status:map[acceptedNames:map[kind:RepoSync listKind:RepoSyncList plural:reposyncs singular:reposync] conditions:[map[lastTransitionTime:2021-06-10T03:16:27Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-10T03:16:27Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established]] storedVersions:[v1beta1]]]}
W0610 03:42:56.052300       1 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition
I0610 03:42:56.052878       1 worker.go:92] Worker reconciled "CustomResourceDefinition.apiextensions.k8s.io, /anvils.acme.com"
I0610 03:42:56.052943       1 queue.go:180] Removing clean object reference: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3673863 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema]] storedVersions:[v2]]]}
I0610 03:43:00.800755       1 filteredwatcher.go:321] Ignoring event for object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[configsync.gke.io/config-checksum:ffdfbecb7012ee4ec75675c8a499f2de2a9ed7209d034b1b2e878f8ffe52e5ae deployment.kubernetes.io/revision:2] creationTimestamp:2021-06-10T03:16:48Z generation:2 labels:map[app:reconciler configmanagement.gke.io/arch:csmr configmanagement.gke.io/system:true] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[.:map[] f:configsync.gke.io/config-checksum:map[]] f:labels:map[.:map[] f:app:map[] f:configmanagement.gke.io/arch:map[] f:configmanagement.gke.io/system:map[]] f:ownerReferences:map[.:map[] k:{"uid":"7cd0abcd-e838-49a5-a1a3-cfed1fa41556"}:map[.:map[] f:apiVersion:map[] f:blockOwnerDeletion:map[] f:controller:map[] f:kind:map[] f:name:map[] f:uid:map[]]]] f:spec:map[f:minReadySeconds:map[] f:progressDeadlineSeconds:map[] f:replicas:map[] f:revisionHistoryLimit:map[] f:selector:map[f:matchLabels:map[.:map[] f:app:map[]]] f:strategy:map[f:type:map[]] f:template:map[f:metadata:map[f:annotations:map[.:map[] f:configsync.gke.io/configmap:map[]] f:labels:map[.:map[] f:app:map[] f:configsync.gke.io/reconciler:map[]]] f:spec:map[f:containers:map[k:{"name":"git-sync"}:map[.:map[] f:args:map[] f:envFrom:map[] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[] f:securityContext:map[.:map[] f:runAsUser:map[]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/repo"}:map[.:map[] f:mountPath:map[] f:name:map[]]]] k:{"name":"otel-agent"}:map[.:map[] f:args:map[] f:command:map[] f:image:map[] f:imagePullPolicy:map[] f:livenessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:name:map[] f:ports:map[.:map[] k:{"containerPort":55678,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]] k:{"containerPort":8888,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]] f:readinessProbe:map[.:map[] f:failureThreshold:map[] f:httpGet:map[.:map[] f:path:map[] f:port:map[] f:scheme:map[]] f:periodSeconds:map[] f:successThreshold:map[] f:timeoutSeconds:map[]] f:resources:map[.:map[] f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/conf"}:map[.:map[] f:mountPath:map[] f:name:map[]]]] k:{"name":"reconciler"}:map[.:map[] f:command:map[] f:env:map[.:map[] k:{"name":"RECONCILER_NAME"}:map[.:map[] f:name:map[] f:valueFrom:map[.:map[] f:fieldRef:map[.:map[] f:apiVersion:map[] f:fieldPath:map[]]]]] f:envFrom:map[] f:image:map[] f:imagePullPolicy:map[] f:name:map[] f:resources:map[.:map[] f:limits:map[.:map[] f:cpu:map[] f:memory:map[]] f:requests:map[.:map[] f:cpu:map[] f:memory:map[]]] f:terminationMessagePath:map[] f:terminationMessagePolicy:map[] f:volumeMounts:map[.:map[] k:{"mountPath":"/repo"}:map[.:map[] f:mountPath:map[] f:name:map[] f:readOnly:map[]]]]] f:dnsPolicy:map[] f:restartPolicy:map[] f:schedulerName:map[] f:securityContext:map[.:map[] f:fsGroup:map[]] f:serviceAccount:map[] f:serviceAccountName:map[] f:terminationGracePeriodSeconds:map[] f:volumes:map[.:map[] k:{"name":"otel-agent-config-vol"}:map[.:map[] f:configMap:map[.:map[] f:defaultMode:map[] f:name:map[]] f:name:map[]] k:{"name":"repo"}:map[.:map[] f:emptyDir:map[] f:name:map[]]]]]]] manager:reconciler-manager operation:Update time:2021-06-10T03:16:48Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:template:map[f:spec:map[f:containers:map[k:{"name":"reconciler"}:map[f:args:map[]]]]]]] manager:kubectl operation:Update time:2021-06-10T03:42:33Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:43:00Z]] name:root-reconciler namespace:config-management-system ownerReferences:[map[apiVersion:configsync.gke.io/v1alpha1 blockOwnerDeletion:true controller:true kind:RootSync name:root-sync uid:7cd0abcd-e838-49a5-a1a3-cfed1fa41556]] resourceVersion:3684907 selfLink:/apis/apps/v1/namespaces/config-management-system/deployments/root-reconciler uid:87ec4fe2-74ef-47f4-868b-5390bcd455f9] spec:map[minReadySeconds:10 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:reconciler]] strategy:map[type:Recreate] template:map[metadata:map[annotations:map[configsync.gke.io/configmap:211e00349bd1d43597bb9a41de1b4a7b] creationTimestamp:<nil> labels:map[app:reconciler configsync.gke.io/reconciler:root-reconciler]] spec:map[containers:[map[args:[--v=5 --git-dir=/repo/root/rev] command:[/reconciler] env:[map[name:RECONCILER_NAME valueFrom:map[fieldRef:map[apiVersion:v1 fieldPath:metadata.name]]]] envFrom:[map[configMapRef:map[name:root-reconciler-reconciler optional:false]] map[configMapRef:map[name:root-reconciler-source-format optional:true]]] image:gcr.io/config-management-release/reconciler:v1.8.0-rc.8 imagePullPolicy:IfNotPresent name:reconciler resources:map[limits:map[cpu:1 memory:300Mi] requests:map[cpu:150m memory:100Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/repo name:repo readOnly:true]]] map[args:[--root=/repo/root --dest=rev --max-sync-failures=30 --error-file=error.json --v=5] envFrom:[map[configMapRef:map[name:root-reconciler-git-sync optional:false]]] image:gcr.io/config-management-release/git-sync:v3.3.2-gke.0__linux_amd64 imagePullPolicy:IfNotPresent name:git-sync resources:map[] securityContext:map[runAsUser:65533] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/repo name:repo]]] map[args:[--config=/conf/otel-agent-config.yaml] command:[/otelcol] image:gcr.io/config-management-release/otelcol:v0.22.0 imagePullPolicy:IfNotPresent livenessProbe:map[failureThreshold:3 httpGet:map[path:/ port:13133 scheme:HTTP] periodSeconds:10 successThreshold:1 timeoutSeconds:1] name:otel-agent ports:[map[containerPort:55678 protocol:TCP] map[containerPort:8888 protocol:TCP]] readinessProbe:map[failureThreshold:3 httpGet:map[path:/ port:13133 scheme:HTTP] periodSeconds:10 successThreshold:1 timeoutSeconds:1] resources:map[limits:map[cpu:500m memory:500Mi] requests:map[cpu:100m memory:100Mi]] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File volumeMounts:[map[mountPath:/conf name:otel-agent-config-vol]]]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[fsGroup:65533] serviceAccount:root-reconciler serviceAccountName:root-reconciler terminationGracePeriodSeconds:30 volumes:[map[emptyDir:map[] name:repo] map[configMap:map[defaultMode:420 name:otel-agent] name:otel-agent-config-vol]]]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:43:00Z lastUpdateTime:2021-06-10T03:43:00Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:16:48Z lastUpdateTime:2021-06-10T03:43:00Z message:ReplicaSet "root-reconciler-58674d5d7b" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:45:08.981167       1 run.go:149] New git changes (/repo/root/5854b06bd95f2201561cabce62e8f84ae71c1c9b/bookstore) detected, reset the cache
I0610 03:45:08.981211       1 git.go:93] Reading updated git dir: /repo/root/5854b06bd95f2201561cabce62e8f84ae71c1c9b/bookstore
I0610 03:45:09.015571       1 root.go:92] Parsing files from git dir: /repo/root/5854b06bd95f2201561cabce62e8f84ae71c1c9b/bookstore
I0610 03:45:09.540805       1 kpt_applier.go:202] skipped InitType event
I0610 03:45:09.556863       1 kpt_applier.go:115] applied [op: ServersideApplied] resource Namespace, /bookstore
I0610 03:45:09.559207       1 filteredwatcher.go:329] Received watch event for created/updated object "Namespace, /bookstore"
I0610 03:45:09.559396       1 filteredwatcher.go:332] Received object: &{map[apiVersion:v1 kind:Namespace metadata:map[annotations:map[client.lifecycle.config.k8s.io/deletion:detach config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:_namespace_bookstore] creationTimestamp:2021-06-10T03:16:57Z labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io] managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/deletion:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:45:09Z]] name:bookstore resourceVersion:3685791 selfLink:/api/v1/namespaces/bookstore uid:de6949f9-f42b-49be-b46f-4d76b587872d] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:45:09.559552       1 queue.go:112] Upserting object into queue: &{map[apiVersion:v1 kind:Namespace metadata:map[annotations:map[client.lifecycle.config.k8s.io/deletion:detach config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:_namespace_bookstore] creationTimestamp:2021-06-10T03:16:57Z labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io] managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/deletion:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:45:09Z]] name:bookstore resourceVersion:3685791 selfLink:/api/v1/namespaces/bookstore uid:de6949f9-f42b-49be-b46f-4d76b587872d] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:45:09.559662       1 queue.go:162] Fetched object for processing: &{map[apiVersion:v1 kind:Namespace metadata:map[annotations:map[client.lifecycle.config.k8s.io/deletion:detach config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:_namespace_bookstore] creationTimestamp:2021-06-10T03:16:57Z labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io] managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/deletion:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:45:09Z]] name:bookstore resourceVersion:3685791 selfLink:/api/v1/namespaces/bookstore uid:de6949f9-f42b-49be-b46f-4d76b587872d] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:45:09.569477       1 worker.go:92] Worker reconciled "Namespace, /bookstore"
I0610 03:45:09.569679       1 queue.go:180] Removing clean object reference: &{map[apiVersion:v1 kind:Namespace metadata:map[annotations:map[client.lifecycle.config.k8s.io/deletion:detach config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:_namespace_bookstore] creationTimestamp:2021-06-10T03:16:57Z labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io] managedFields:[map[apiVersion:v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/deletion:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:45:09Z]] name:bookstore resourceVersion:3685791 selfLink:/api/v1/namespaces/bookstore uid:de6949f9-f42b-49be-b46f-4d76b587872d] spec:map[finalizers:[kubernetes]] status:map[phase:Active]]}
I0610 03:45:09.573152       1 filteredwatcher.go:329] Received watch event for created/updated object "Deployment.apps, bookstore/nginx"
I0610 03:45:09.573209       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:33:51Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:45:09Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:34:02Z]] name:nginx namespace:bookstore resourceVersion:3685792 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:a2d9e9b1-09b5-47fc-89a4-7a1ba7fb1711] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:34:02Z lastUpdateTime:2021-06-10T03:34:02Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:33:51Z lastUpdateTime:2021-06-10T03:34:02Z message:ReplicaSet "nginx-5d59d67564" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:45:09.573629       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:33:51Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:45:09Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:34:02Z]] name:nginx namespace:bookstore resourceVersion:3685792 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:a2d9e9b1-09b5-47fc-89a4-7a1ba7fb1711] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:34:02Z lastUpdateTime:2021-06-10T03:34:02Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:33:51Z lastUpdateTime:2021-06-10T03:34:02Z message:ReplicaSet "nginx-5d59d67564" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:45:09.573997       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:33:51Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:45:09Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:34:02Z]] name:nginx namespace:bookstore resourceVersion:3685792 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:a2d9e9b1-09b5-47fc-89a4-7a1ba7fb1711] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:34:02Z lastUpdateTime:2021-06-10T03:34:02Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:33:51Z lastUpdateTime:2021-06-10T03:34:02Z message:ReplicaSet "nginx-5d59d67564" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:45:09.574751       1 worker.go:92] Worker reconciled "Deployment.apps, bookstore/nginx"
I0610 03:45:09.574811       1 queue.go:180] Removing clean object reference: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:33:51Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:45:09Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:34:02Z]] name:nginx namespace:bookstore resourceVersion:3685792 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:a2d9e9b1-09b5-47fc-89a4-7a1ba7fb1711] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:34:02Z lastUpdateTime:2021-06-10T03:34:02Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:33:51Z lastUpdateTime:2021-06-10T03:34:02Z message:ReplicaSet "nginx-5d59d67564" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:45:09.578794       1 kpt_applier.go:115] applied [op: ServersideApplied] resource Deployment.apps, bookstore/nginx
I0610 03:45:09.604382       1 filteredwatcher.go:329] Received watch event for created/updated object "Deployment.apps, bookstore/nginx"
I0610 03:45:09.604412       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:33:51Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:45:09Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:34:02Z]] name:nginx namespace:bookstore resourceVersion:3685794 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:a2d9e9b1-09b5-47fc-89a4-7a1ba7fb1711] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:34:02Z lastUpdateTime:2021-06-10T03:34:02Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:33:51Z lastUpdateTime:2021-06-10T03:34:02Z message:ReplicaSet "nginx-5d59d67564" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:45:09.604601       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:33:51Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:45:09Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:34:02Z]] name:nginx namespace:bookstore resourceVersion:3685794 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:a2d9e9b1-09b5-47fc-89a4-7a1ba7fb1711] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:34:02Z lastUpdateTime:2021-06-10T03:34:02Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:33:51Z lastUpdateTime:2021-06-10T03:34:02Z message:ReplicaSet "nginx-5d59d67564" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:45:09.604803       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:33:51Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:45:09Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:34:02Z]] name:nginx namespace:bookstore resourceVersion:3685794 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:a2d9e9b1-09b5-47fc-89a4-7a1ba7fb1711] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:34:02Z lastUpdateTime:2021-06-10T03:34:02Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:33:51Z lastUpdateTime:2021-06-10T03:34:02Z message:ReplicaSet "nginx-5d59d67564" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:45:09.605076       1 worker.go:92] Worker reconciled "Deployment.apps, bookstore/nginx"
I0610 03:45:09.605094       1 queue.go:180] Removing clean object reference: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:33:51Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:45:09Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:34:02Z]] name:nginx namespace:bookstore resourceVersion:3685794 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:a2d9e9b1-09b5-47fc-89a4-7a1ba7fb1711] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 conditions:[map[lastTransitionTime:2021-06-10T03:34:02Z lastUpdateTime:2021-06-10T03:34:02Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:33:51Z lastUpdateTime:2021-06-10T03:34:02Z message:ReplicaSet "nginx-5d59d67564" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:45:09.615511       1 filteredwatcher.go:326] Received watch event for deleted object "Anvil.acme.com, bookstore/heavy"
I0610 03:45:09.615679       1 filteredwatcher.go:332] Received object: &{0xc00095e568}
I0610 03:45:09.615722       1 queue.go:112] Upserting object into queue: &{0xc00095e568}
I0610 03:45:09.615752       1 queue.go:162] Fetched object for processing: &{0xc00095e568}
W0610 03:45:09.615847       1 diff.go:82] Calculated diff for object with no declaration and not on the cluster
I0610 03:45:09.616166       1 worker.go:92] Worker reconciled "Anvil.acme.com, bookstore/heavy"
I0610 03:45:09.616220       1 queue.go:180] Removing clean object reference: &{0xc00095e568}
I0610 03:45:09.616712       1 kpt_applier.go:137] pruned resource Anvil.acme.com, bookstore/heavy
I0610 03:45:09.634832       1 filteredwatcher.go:329] Received watch event for created/updated object "CustomResourceDefinition.apiextensions.k8s.io, /anvils.acme.com"
I0610 03:45:09.634877       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z deletionTimestamp:2021-06-10T03:45:09Z finalizers:[customresourcecleanup.apiextensions.k8s.io] generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3685796 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema] map[lastTransitionTime:2021-06-10T03:45:09Z message:CustomResourceDefinition marked for deletion; CustomResource deletion will begin soon reason:InstanceDeletionPending status:True type:Terminating]] storedVersions:[v2]]]}
I0610 03:45:09.635635       1 kpt_applier.go:137] pruned resource CustomResourceDefinition.apiextensions.k8s.io, /anvils.acme.com
I0610 03:45:09.635559       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z deletionTimestamp:2021-06-10T03:45:09Z finalizers:[customresourcecleanup.apiextensions.k8s.io] generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3685796 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema] map[lastTransitionTime:2021-06-10T03:45:09Z message:CustomResourceDefinition marked for deletion; CustomResource deletion will begin soon reason:InstanceDeletionPending status:True type:Terminating]] storedVersions:[v2]]]}
I0610 03:45:09.635948       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z deletionTimestamp:2021-06-10T03:45:09Z finalizers:[customresourcecleanup.apiextensions.k8s.io] generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3685796 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema] map[lastTransitionTime:2021-06-10T03:45:09Z message:CustomResourceDefinition marked for deletion; CustomResource deletion will begin soon reason:InstanceDeletionPending status:True type:Terminating]] storedVersions:[v2]]]}
I0610 03:45:09.644062       1 filteredwatcher.go:329] Received watch event for created/updated object "CustomResourceDefinition.apiextensions.k8s.io, /anvils.acme.com"
I0610 03:45:09.644098       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z deletionTimestamp:2021-06-10T03:45:09Z finalizers:[customresourcecleanup.apiextensions.k8s.io] generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3685797 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema] map[lastTransitionTime:2021-06-10T03:45:09Z message:CustomResource deletion is in progress reason:InstanceDeletionInProgress status:True type:Terminating]] storedVersions:[v2]]]}
I0610 03:45:09.644464       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z deletionTimestamp:2021-06-10T03:45:09Z finalizers:[customresourcecleanup.apiextensions.k8s.io] generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3685797 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema] map[lastTransitionTime:2021-06-10T03:45:09Z message:CustomResource deletion is in progress reason:InstanceDeletionInProgress status:True type:Terminating]] storedVersions:[v2]]]}
W0610 03:45:09.652424       1 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition
I0610 03:45:09.668575       1 filteredwatcher.go:329] Received watch event for created/updated object "CustomResourceDefinition.apiextensions.k8s.io, /anvils.acme.com"
I0610 03:45:09.668618       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z deletionGracePeriodSeconds:0 deletionTimestamp:2021-06-10T03:45:09Z finalizers:[customresourcecleanup.apiextensions.k8s.io] generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3685798 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema] map[lastTransitionTime:2021-06-10T03:45:09Z message:CustomResource deletion is in progress reason:InstanceDeletionInProgress status:True type:Terminating]] storedVersions:[v2]]]}
I0610 03:45:09.668894       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z deletionGracePeriodSeconds:0 deletionTimestamp:2021-06-10T03:45:09Z finalizers:[customresourcecleanup.apiextensions.k8s.io] generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3685798 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema] map[lastTransitionTime:2021-06-10T03:45:09Z message:CustomResource deletion is in progress reason:InstanceDeletionInProgress status:True type:Terminating]] storedVersions:[v2]]]}
W0610 03:45:09.669601       1 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition
I0610 03:45:09.669729       1 client.go:94] Deleted "apiextensions.k8s.io/v1beta1, Kind=CustomResourceDefinition", "/anvils.acme.com"
I0610 03:45:09.669914       1 worker.go:92] Worker reconciled "CustomResourceDefinition.apiextensions.k8s.io, /anvils.acme.com"
I0610 03:45:09.669950       1 queue.go:177] Leaving dirty object reference in place: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z deletionGracePeriodSeconds:0 deletionTimestamp:2021-06-10T03:45:09Z finalizers:[customresourcecleanup.apiextensions.k8s.io] generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3685798 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema] map[lastTransitionTime:2021-06-10T03:45:09Z message:CustomResource deletion is in progress reason:InstanceDeletionInProgress status:True type:Terminating]] storedVersions:[v2]]]}
I0610 03:45:09.670196       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apiextensions.k8s.io/v1beta1 kind:CustomResourceDefinition metadata:map[annotations:map[config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/crd-anvil.yaml configmanagement.gke.io/token:848017a1dfde6dd861bf9e386f5841eda3528718 configsync.gke.io/declared-fields:{"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:validation":{"f:openAPIV3Schema":{"f:properties":{"f:spec":{".":{},"f:properties":{"f:lbs":{".":{},"f:maximum":{},"f:minimum":{},"f:type":{}}},"f:required":{},"f:type":{}}}}},"f:versions":{}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apiextensions.k8s.io_customresourcedefinition_anvils.acme.com] creationTimestamp:2021-06-09T21:06:13Z deletionGracePeriodSeconds:0 deletionTimestamp:2021-06-10T03:45:09Z finalizers:[customresourcecleanup.apiextensions.k8s.io] generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1beta1] managedFields:[map[apiVersion:apiextensions.k8s.io/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:group:map[] f:names:map[f:kind:map[] f:plural:map[] f:singular:map[]] f:scope:map[] f:validation:map[f:openAPIV3Schema:map[f:properties:map[f:spec:map[.:map[] f:properties:map[f:lbs:map[.:map[] f:maximum:map[] f:minimum:map[] f:type:map[]]] f:required:map[] f:type:map[]]]]] f:versions:map[]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:16:57Z] map[apiVersion:apiextensions.k8s.io/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:acceptedNames:map[f:kind:map[] f:listKind:map[] f:plural:map[] f:singular:map[]] f:conditions:map[]]] manager:kube-apiserver operation:Update time:2021-06-09T21:06:13Z]] name:anvils.acme.com resourceVersion:3685798 selfLink:/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/anvils.acme.com uid:f328a29a-358c-424c-89a9-59c725ce6e0f] spec:map[conversion:map[strategy:None] group:acme.com names:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] preserveUnknownFields:true scope:Namespaced validation:map[openAPIV3Schema:map[properties:map[spec:map[properties:map[lbs:map[maximum:9000 minimum:1 type:integer]] required:[lbs] type:object]]]] version:v1 versions:[map[name:v1 served:true storage:false] map[name:v2 served:true storage:true]]] status:map[acceptedNames:map[kind:Anvil listKind:AnvilList plural:anvils singular:anvil] conditions:[map[lastTransitionTime:2021-06-09T21:06:13Z message:no conflicts found reason:NoConflicts status:True type:NamesAccepted] map[lastTransitionTime:2021-06-09T21:06:13Z message:the initial names have been accepted reason:InitialNamesAccepted status:True type:Established] map[lastTransitionTime:2021-06-09T21:06:13Z message:[spec.versions[0].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.versions[1].schema.openAPIV3Schema.type: Required value: must not be empty at the root] reason:Violations status:True type:NonStructuralSchema] map[lastTransitionTime:2021-06-10T03:45:09Z message:CustomResource deletion is in progress reason:InstanceDeletionInProgress status:True type:Terminating]] storedVersions:[v2]]]}
I0610 03:45:09.680107       1 filteredwatcher.go:326] Received watch event for deleted object "CustomResourceDefinition.apiextensions.k8s.io, /anvils.acme.com"
I0610 03:45:09.680148       1 filteredwatcher.go:332] Received object: &{0xc00090a948}
I0610 03:45:09.680171       1 queue.go:112] Upserting object into queue: &{0xc00090a948}
W0610 03:45:09.683170       1 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition
I0610 03:45:09.688123       1 kpt_applier.go:215] all resources are up to date.
I0610 03:45:09.688162       1 kpt_applier.go:221] The applier made new progress: ApplyEvent events (OpType: ServersideApplied): 2, PruneEvent events (OpType: Pruned): 2.
I0610 03:45:09.688399       1 manager.go:158] The remediator made new progress: started 0 new watches, and stopped 2 watches
I0610 03:45:09.688482       1 filteredwatcher.go:220] Ending watch for acme.com/v2, Kind=Anvil at resource version "3685795" (total events: 2, ignored events: 0)
I0610 03:45:09.688498       1 filteredwatcher.go:223] Watch stopped for acme.com/v2, Kind=Anvil
I0610 03:45:09.688524       1 filteredwatcher.go:220] Ending watch for apiextensions.k8s.io/v1beta1, Kind=CustomResourceDefinition at resource version "3685799" (total events: 25, ignored events: 20)
I0610 03:45:09.688572       1 filteredwatcher.go:223] Watch stopped for apiextensions.k8s.io/v1beta1, Kind=CustomResourceDefinition
W0610 03:45:09.712508       1 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition
I0610 03:45:09.713300       1 client.go:96] Not found during attempted delete "apiextensions.k8s.io/v1beta1, Kind=CustomResourceDefinition", "/anvils.acme.com"
I0610 03:45:09.713416       1 worker.go:92] Worker reconciled "CustomResourceDefinition.apiextensions.k8s.io, /anvils.acme.com"
I0610 03:45:09.713474       1 queue.go:177] Leaving dirty object reference in place: &{0xc00090a948}
I0610 03:45:09.713493       1 queue.go:162] Fetched object for processing: &{0xc00090a948}
W0610 03:45:09.713540       1 diff.go:82] Calculated diff for object with no declaration and not on the cluster
I0610 03:45:09.713578       1 worker.go:92] Worker reconciled "CustomResourceDefinition.apiextensions.k8s.io, /anvils.acme.com"
I0610 03:45:09.713588       1 queue.go:180] Removing clean object reference: &{0xc00090a948}
I0610 03:45:09.725889       1 state.go:44] Reconciler checkpoint updated to /repo/root/5854b06bd95f2201561cabce62e8f84ae71c1c9b/bookstore
I0610 03:46:04.299824       1 filteredwatcher.go:326] Received watch event for deleted object "Deployment.apps, bookstore/nginx"
I0610 03:46:04.299868       1 filteredwatcher.go:332] Received object: &{0xc001598028}
I0610 03:46:04.299887       1 queue.go:112] Upserting object into queue: &{0xc001598028}
I0610 03:46:04.299928       1 queue.go:162] Fetched object for processing: &{0xc001598028}
I0610 03:46:04.355867       1 filteredwatcher.go:329] Received watch event for created/updated object "Deployment.apps, bookstore/nginx"
I0610 03:46:04.355902       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686178 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[]]}
I0610 03:46:04.356033       1 queue.go:93] Queue already contains object "Deployment.apps, bookstore/nginx" with generation 2; ignoring object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686178 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[]]}
I0610 03:46:04.368260       1 worker.go:92] Worker reconciled "Deployment.apps, bookstore/nginx"
I0610 03:46:04.368381       1 queue.go:180] Removing clean object reference: &{0xc001598028}
I0610 03:46:04.401243       1 filteredwatcher.go:329] Received watch event for created/updated object "Deployment.apps, bookstore/nginx"
I0610 03:46:04.401268       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:collisionCount:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686179 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1]]}
I0610 03:46:04.401379       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:collisionCount:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686179 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1]]}
I0610 03:46:04.401574       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:collisionCount:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686179 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1]]}
I0610 03:46:04.401893       1 worker.go:92] Worker reconciled "Deployment.apps, bookstore/nginx"
I0610 03:46:04.401916       1 queue.go:180] Removing clean object reference: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:status:map[f:collisionCount:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686179 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1]]}
I0610 03:46:04.466887       1 filteredwatcher.go:329] Received watch event for created/updated object "Deployment.apps, bookstore/nginx"
I0610 03:46:04.466918       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686181 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Created new replica set "nginx-66d55c84b9" reason:NewReplicaSetCreated status:True type:Progressing]]]]}
I0610 03:46:04.467054       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686181 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Created new replica set "nginx-66d55c84b9" reason:NewReplicaSetCreated status:True type:Progressing]]]]}
I0610 03:46:04.467214       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686181 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Created new replica set "nginx-66d55c84b9" reason:NewReplicaSetCreated status:True type:Progressing]]]]}
I0610 03:46:04.467456       1 worker.go:92] Worker reconciled "Deployment.apps, bookstore/nginx"
I0610 03:46:04.467472       1 queue.go:180] Removing clean object reference: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686181 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Created new replica set "nginx-66d55c84b9" reason:NewReplicaSetCreated status:True type:Progressing]]]]}
I0610 03:46:04.505851       1 filteredwatcher.go:329] Received watch event for created/updated object "Deployment.apps, bookstore/nginx"
I0610 03:46:04.505970       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:unavailableReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686183 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Created new replica set "nginx-66d55c84b9" reason:NewReplicaSetCreated status:True type:Progressing] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available]] observedGeneration:1 unavailableReplicas:1]]}
I0610 03:46:04.506462       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:unavailableReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686183 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Created new replica set "nginx-66d55c84b9" reason:NewReplicaSetCreated status:True type:Progressing] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available]] observedGeneration:1 unavailableReplicas:1]]}
I0610 03:46:04.506862       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:unavailableReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686183 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Created new replica set "nginx-66d55c84b9" reason:NewReplicaSetCreated status:True type:Progressing] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available]] observedGeneration:1 unavailableReplicas:1]]}
I0610 03:46:04.507529       1 worker.go:92] Worker reconciled "Deployment.apps, bookstore/nginx"
I0610 03:46:04.507570       1 queue.go:180] Removing clean object reference: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:unavailableReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686183 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Created new replica set "nginx-66d55c84b9" reason:NewReplicaSetCreated status:True type:Progressing] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available]] observedGeneration:1 unavailableReplicas:1]]}
I0610 03:46:04.682040       1 filteredwatcher.go:329] Received watch event for created/updated object "Deployment.apps, bookstore/nginx"
I0610 03:46:04.682081       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:replicas:map[] f:unavailableReplicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686191 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:ReplicaSet "nginx-66d55c84b9" is progressing. reason:ReplicaSetUpdated status:True type:Progressing]] observedGeneration:1 replicas:1 unavailableReplicas:1 updatedReplicas:1]]}
I0610 03:46:04.682386       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:replicas:map[] f:unavailableReplicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686191 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:ReplicaSet "nginx-66d55c84b9" is progressing. reason:ReplicaSetUpdated status:True type:Progressing]] observedGeneration:1 replicas:1 unavailableReplicas:1 updatedReplicas:1]]}
I0610 03:46:04.682724       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:replicas:map[] f:unavailableReplicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686191 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:ReplicaSet "nginx-66d55c84b9" is progressing. reason:ReplicaSetUpdated status:True type:Progressing]] observedGeneration:1 replicas:1 unavailableReplicas:1 updatedReplicas:1]]}
I0610 03:46:04.683163       1 worker.go:92] Worker reconciled "Deployment.apps, bookstore/nginx"
I0610 03:46:04.683197       1 queue.go:180] Removing clean object reference: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:replicas:map[] f:unavailableReplicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:04Z]] name:nginx namespace:bookstore resourceVersion:3686191 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:ReplicaSet "nginx-66d55c84b9" is progressing. reason:ReplicaSetUpdated status:True type:Progressing]] observedGeneration:1 replicas:1 unavailableReplicas:1 updatedReplicas:1]]}
I0610 03:46:05.624860       1 filteredwatcher.go:329] Received watch event for created/updated object "Deployment.apps, bookstore/nginx"
I0610 03:46:05.624888       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:unavailableReplicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:05Z]] name:nginx namespace:bookstore resourceVersion:3686203 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:05Z message:ReplicaSet "nginx-66d55c84b9" is progressing. reason:ReplicaSetUpdated status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 unavailableReplicas:1 updatedReplicas:1]]}
I0610 03:46:05.625088       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:unavailableReplicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:05Z]] name:nginx namespace:bookstore resourceVersion:3686203 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:05Z message:ReplicaSet "nginx-66d55c84b9" is progressing. reason:ReplicaSetUpdated status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 unavailableReplicas:1 updatedReplicas:1]]}
I0610 03:46:05.625259       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:unavailableReplicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:05Z]] name:nginx namespace:bookstore resourceVersion:3686203 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:05Z message:ReplicaSet "nginx-66d55c84b9" is progressing. reason:ReplicaSetUpdated status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 unavailableReplicas:1 updatedReplicas:1]]}
I0610 03:46:05.625552       1 worker.go:92] Worker reconciled "Deployment.apps, bookstore/nginx"
I0610 03:46:05.625583       1 queue.go:180] Removing clean object reference: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:unavailableReplicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:05Z]] name:nginx namespace:bookstore resourceVersion:3686203 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:04Z message:Deployment does not have minimum availability. reason:MinimumReplicasUnavailable status:False type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:05Z message:ReplicaSet "nginx-66d55c84b9" is progressing. reason:ReplicaSetUpdated status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 unavailableReplicas:1 updatedReplicas:1]]}
I0610 03:46:14.604696       1 filteredwatcher.go:329] Received watch event for created/updated object "Deployment.apps, bookstore/nginx"
I0610 03:46:14.604731       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:14Z]] name:nginx namespace:bookstore resourceVersion:3686270 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:14Z lastUpdateTime:2021-06-10T03:46:14Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:14Z message:ReplicaSet "nginx-66d55c84b9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:46:14.604989       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:14Z]] name:nginx namespace:bookstore resourceVersion:3686270 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:14Z lastUpdateTime:2021-06-10T03:46:14Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:14Z message:ReplicaSet "nginx-66d55c84b9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:46:14.605312       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:14Z]] name:nginx namespace:bookstore resourceVersion:3686270 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:14Z lastUpdateTime:2021-06-10T03:46:14Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:14Z message:ReplicaSet "nginx-66d55c84b9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:46:14.605798       1 worker.go:92] Worker reconciled "Deployment.apps, bookstore/nginx"
I0610 03:46:14.605831       1 queue.go:180] Removing clean object reference: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:1 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:minReadySeconds:map[] f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:14Z]] name:nginx namespace:bookstore resourceVersion:3686270 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:9 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:14Z lastUpdateTime:2021-06-10T03:46:14Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:14Z message:ReplicaSet "nginx-66d55c84b9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:49:26.371166       1 filteredwatcher.go:329] Received watch event for created/updated object "Deployment.apps, bookstore/nginx"
I0610 03:49:26.371204       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:14Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:minReadySeconds:map[]]] manager:kubectl operation:Update time:2021-06-10T03:49:26Z]] name:nginx namespace:bookstore resourceVersion:3687649 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:5 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:14Z lastUpdateTime:2021-06-10T03:46:14Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:14Z message:ReplicaSet "nginx-66d55c84b9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:49:26.371457       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:14Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:minReadySeconds:map[]]] manager:kubectl operation:Update time:2021-06-10T03:49:26Z]] name:nginx namespace:bookstore resourceVersion:3687649 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:5 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:14Z lastUpdateTime:2021-06-10T03:46:14Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:14Z message:ReplicaSet "nginx-66d55c84b9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:49:26.371763       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:14Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:minReadySeconds:map[]]] manager:kubectl operation:Update time:2021-06-10T03:49:26Z]] name:nginx namespace:bookstore resourceVersion:3687649 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:5 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:14Z lastUpdateTime:2021-06-10T03:46:14Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:14Z message:ReplicaSet "nginx-66d55c84b9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:49:26.372275       1 worker.go:92] Worker reconciled "Deployment.apps, bookstore/nginx"
I0610 03:49:26.372305       1 queue.go:180] Removing clean object reference: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:14Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:minReadySeconds:map[]]] manager:kubectl operation:Update time:2021-06-10T03:49:26Z]] name:nginx namespace:bookstore resourceVersion:3687649 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:5 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:14Z lastUpdateTime:2021-06-10T03:46:14Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:14Z message:ReplicaSet "nginx-66d55c84b9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:1 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:49:26.401012       1 filteredwatcher.go:329] Received watch event for created/updated object "Deployment.apps, bookstore/nginx"
I0610 03:49:26.401039       1 filteredwatcher.go:332] Received object: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:14Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:minReadySeconds:map[]]] manager:kubectl operation:Update time:2021-06-10T03:49:26Z]] name:nginx namespace:bookstore resourceVersion:3687652 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:5 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:14Z lastUpdateTime:2021-06-10T03:46:14Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:14Z message:ReplicaSet "nginx-66d55c84b9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:49:26.401258       1 queue.go:112] Upserting object into queue: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:14Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:minReadySeconds:map[]]] manager:kubectl operation:Update time:2021-06-10T03:49:26Z]] name:nginx namespace:bookstore resourceVersion:3687652 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:5 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:14Z lastUpdateTime:2021-06-10T03:46:14Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:14Z message:ReplicaSet "nginx-66d55c84b9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:49:26.401575       1 queue.go:162] Fetched object for processing: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:14Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:minReadySeconds:map[]]] manager:kubectl operation:Update time:2021-06-10T03:49:26Z]] name:nginx namespace:bookstore resourceVersion:3687652 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:5 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:14Z lastUpdateTime:2021-06-10T03:46:14Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:14Z message:ReplicaSet "nginx-66d55c84b9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 updatedReplicas:1]]}
I0610 03:49:26.402004       1 worker.go:92] Worker reconciled "Deployment.apps, bookstore/nginx"
I0610 03:49:26.402033       1 queue.go:180] Removing clean object reference: &{map[apiVersion:apps/v1 kind:Deployment metadata:map[annotations:map[client.lifecycle.config.k8s.io/mutation:ignore config.k8s.io/owning-inventory:config-management-system_root-sync configmanagement.gke.io/managed:enabled configmanagement.gke.io/source-path:bookstore/config.yaml configmanagement.gke.io/token:5854b06bd95f2201561cabce62e8f84ae71c1c9b configsync.gke.io/declared-fields:{"f:metadata":{"f:annotations":{"f:client.lifecycle.config.k8s.io/mutation":{},"f:owner":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}} configsync.gke.io/git-context:{"repo":"https://github.com/haiyanmeng/csmr-sample","branch":"master","rev":"HEAD"} configsync.gke.io/manager::root configsync.gke.io/resource-id:apps_deployment_bookstore_nginx deployment.kubernetes.io/revision:1 owner:aiyan] creationTimestamp:2021-06-10T03:46:04Z generation:2 labels:map[app.kubernetes.io/managed-by:configmanagement.gke.io configsync.gke.io/declared-version:v1] managedFields:[map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:client.lifecycle.config.k8s.io/mutation:map[] f:config.k8s.io/owning-inventory:map[] f:configmanagement.gke.io/managed:map[] f:configmanagement.gke.io/source-path:map[] f:configmanagement.gke.io/token:map[] f:configsync.gke.io/declared-fields:map[] f:configsync.gke.io/git-context:map[] f:configsync.gke.io/manager:map[] f:configsync.gke.io/resource-id:map[] f:owner:map[]] f:labels:map[f:app.kubernetes.io/managed-by:map[] f:configsync.gke.io/declared-version:map[]]] f:spec:map[f:replicas:map[] f:selector:map[f:matchLabels:map[f:app:map[]]] f:template:map[f:metadata:map[f:labels:map[f:app:map[]]] f:spec:map[f:containers:map[k:{"name":"nginx"}:map[.:map[] f:image:map[] f:name:map[] f:ports:map[k:{"containerPort":80,"protocol":"TCP"}:map[.:map[] f:containerPort:map[] f:protocol:map[]]]]]]]]] manager:configsync.gke.io operation:Apply time:2021-06-10T03:46:04Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:metadata:map[f:annotations:map[f:deployment.kubernetes.io/revision:map[]]] f:status:map[f:availableReplicas:map[] f:collisionCount:map[] f:conditions:map[.:map[] k:{"type":"Available"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]] k:{"type":"Progressing"}:map[.:map[] f:lastTransitionTime:map[] f:lastUpdateTime:map[] f:message:map[] f:reason:map[] f:status:map[] f:type:map[]]] f:observedGeneration:map[] f:readyReplicas:map[] f:replicas:map[] f:updatedReplicas:map[]]] manager:kube-controller-manager operation:Update time:2021-06-10T03:46:14Z] map[apiVersion:apps/v1 fieldsType:FieldsV1 fieldsV1:map[f:spec:map[f:minReadySeconds:map[]]] manager:kubectl operation:Update time:2021-06-10T03:49:26Z]] name:nginx namespace:bookstore resourceVersion:3687652 selfLink:/apis/apps/v1/namespaces/bookstore/deployments/nginx uid:fc15c16f-340b-45b3-90e7-7aaa19e5231c] spec:map[minReadySeconds:5 progressDeadlineSeconds:600 replicas:1 revisionHistoryLimit:10 selector:map[matchLabels:map[app:nginx]] strategy:map[rollingUpdate:map[maxSurge:25% maxUnavailable:25%] type:RollingUpdate] template:map[metadata:map[creationTimestamp:<nil> labels:map[app:nginx]] spec:map[containers:[map[image:nginx:1.7.9 imagePullPolicy:IfNotPresent name:nginx ports:[map[containerPort:80 protocol:TCP]] resources:map[] terminationMessagePath:/dev/termination-log terminationMessagePolicy:File]] dnsPolicy:ClusterFirst restartPolicy:Always schedulerName:default-scheduler securityContext:map[] terminationGracePeriodSeconds:30]]] status:map[availableReplicas:1 collisionCount:1 conditions:[map[lastTransitionTime:2021-06-10T03:46:14Z lastUpdateTime:2021-06-10T03:46:14Z message:Deployment has minimum availability. reason:MinimumReplicasAvailable status:True type:Available] map[lastTransitionTime:2021-06-10T03:46:04Z lastUpdateTime:2021-06-10T03:46:14Z message:ReplicaSet "nginx-66d55c84b9" has successfully progressed. reason:NewReplicaSetAvailable status:True type:Progressing]] observedGeneration:2 readyReplicas:1 replicas:1 updatedReplicas:1]]}
