apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    configmanagement.gke.io/declared-config: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"configmanagement.gke.io/managed":"enabled","configmanagement.gke.io/token":"403ec6ebe89ad1345cd85be01ea03040543af2a4"},"labels":{"app.kubernetes.io/managed-by":"configmanagement.gke.io"},"name":"nginx","namespace":"bookstore"},"spec":{"minReadySeconds":9,"replicas":3,"selector":{"matchLabels":{"app":"nginx"}},"template":{"metadata":{"labels":{"app":"nginx"}},"spec":{"containers":[{"image":"nginx:1.7.9","name":"nginx","ports":[{"containerPort":80,"protocol":"TCP"}]}]}}}}
    configmanagement.gke.io/managed: enabled
    configmanagement.gke.io/source-path: bookstore/config.yaml
    configmanagement.gke.io/token: 403ec6ebe89ad1345cd85be01ea03040543af2a4
    configsync.gke.io/declared-fields: '{"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{"f:matchLabels":{"f:app":{}}},"f:template":{"f:metadata":{"f:labels":{"f:app":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"nginx\"}":{".":{},"f:image":{},"f:name":{},"f:ports":{"k:{\"containerPort\":80,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}}}}}}}}'
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2021-04-12T19:59:49Z"
  generation: 2
  labels:
    app.kubernetes.io/managed-by: configmanagement.gke.io
    configsync.gke.io/declared-version: v1
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:configmanagement.gke.io/managed: {}
          f:configmanagement.gke.io/source-path: {}
          f:configmanagement.gke.io/token: {}
          f:configsync.gke.io/declared-fields: {}
        f:labels:
          f:app.kubernetes.io/managed-by: {}
          f:configsync.gke.io/declared-version: {}
      f:spec:
        f:minReadySeconds: {}
        f:replicas: {}
        f:selector:
          f:matchLabels:
            f:app: {}
        f:template:
          f:metadata:
            f:labels:
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"nginx"}:
                .: {}
                f:image: {}
                f:name: {}
                f:ports:
                  k:{"containerPort":80,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
    manager: configsync.gke.io
    operation: Apply
    time: "2021-04-12T19:59:49Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-04-12T20:00:06Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:configmanagement.gke.io/declared-config: {}
    manager: git-importer
    operation: Update
    time: "2021-04-12T20:03:45Z"
  name: nginx
  namespace: bookstore
  resourceVersion: "1067069"
  selfLink: /apis/apps/v1/namespaces/bookstore/deployments/nginx
  uid: 771d865f-8cca-4814-a543-f3d2536510cd
spec:
  minReadySeconds: 9
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:1.7.9
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 3
  conditions:
  - lastTransitionTime: "2021-04-12T20:00:06Z"
    lastUpdateTime: "2021-04-12T20:00:06Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2021-04-12T19:59:49Z"
    lastUpdateTime: "2021-04-12T20:00:06Z"
    message: ReplicaSet "nginx-5d59d67564" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 3
  replicas: 3
  updatedReplicas: 3
